00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 2/18/2016 2:30:30 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7  START:  ORG $1000
00001000  1601                       8          MOVE.B  D1,D3
00001002  1A03                       9          MOVE.B D3, D5 Move LS 2 byte to memory address D5
00001004  E043                      10          ASR #8,D3     Shift machine code by a byte to get most significant byte
00001006  1803                      11          MOVE.B D3,D4  move most significant byte to d4
00001008  E844                      12          ASR #$4,D4    shift by one char to get leftmost char
0000100A                            13          
0000100A  B83C 0001                 14          CMP.B #$1, D4 compare the leftmost char to 1 the hex num leading all move.b machine codes
0000100E  6700 001A                 15          BEQ MOVEB     branch to the moveB operation
00001012                            16          
00001012  B83C 0003                 17          CMP.B  #$3, D4 Compare 3 to value in d4
00001016  6700 001E                 18          BEQ MOVEW     Branch to MOVEW if equal
0000101A                            19          
0000101A  B83C 0002                 20          CMP.B   #$2, D4 
0000101E  6700 0022                 21          BEQ MOVEL
00001022                            22          
00001022  B83C 0005                 23          CMP.B #$5,  D4
00001026  6000 0026                 24          BRA BAD     else halt
0000102A  43F9 00001056             25  MOVEB   LEA MOVEBSTRING,A1  load the move.b string
00001030                            26        
00001030  4E4F                      27          TRAP #15 execute process 4 of trap 15
00001032  FFFF FFFF                 28          SIMHALT
00001036  43F9 0000105D             29  MOVEW   LEA MOVEWSTRING,A1
0000103C                            30          
0000103C  4E4F                      31          TRAP #15
0000103E  FFFF FFFF                 32          SIMHALT        
00001042  43F9 00001064             33  MOVEL   LEA MOVELSTRING,A1
00001048  4E4F                      34          TRAP #15
0000104A  FFFF FFFF                 35          SIMHALT 
0000104E                            36      
0000104E                            37  BAD
0000104E  FFFF FFFF                 38          SIMHALT
00001052                            39          
00001052  FFFF FFFF                 40  MOVEBEA      SIMHALT 
00001056                            41  
00001056                            42  MOVEWEA
00001056                            43  MOVELEA
00001056= 4D 4F 56 45 2E 42 00      44  MOVEBSTRING DC.B 'MOVE.B',0
0000105D                            45  
0000105D= 4D 4F 56 45 2E 57 00      46  MOVEWSTRING DC.B 'MOVE.W',0
00001064= 4D 4F 56 45 2E 4C 00      47  MOVELSTRING DC.B 'MOVE.L',0
0000106B                            48  
0000106B                            49  
0000106B                            50  
0000106B                            51          END START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BAD                 104E
MOVEB               102A
MOVEBEA             1052
MOVEBSTRING         1056
MOVEL               1042
MOVELEA             1056
MOVELSTRING         1064
MOVEW               1036
MOVEWEA             1056
MOVEWSTRING         105D
START               1000
