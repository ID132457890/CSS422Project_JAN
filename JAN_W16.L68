00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/11/2016 10:27:16 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  
00001000                            10  *----------------------------------main--------------------------
00001000                            11      *Ask for input
00001000  4EB9 00001174             12      JSR         CLEARALL
00001006  227C 00000000             13      MOVEA.L     #$0, A1
0000100C  247C 00000000             14      MOVEA.L     #$0, A2
00001012  267C 00000000             15      MOVEA.L     #$0, A3
00001018  287C 00000000             16      MOVEA.L     #$0, A4
0000101E  2A7C 00000000             17      MOVEA.L     #$0, A5
00001024  2C7C 00000000             18      MOVEA.L     #$0, A6
0000102A  2E7C 00000000             19      MOVEA.L     #$0, A7
00001030  4EB9 00001718             20      JSR         INPUT
00001036                            21      
00001036                            22  LOOP    
00001036                            23  
00001036  528B                      24      ADDA.L      #$1, A3 *Counter
00001038                            25      *Print the initial address
00001038  4EB9 00001858             26      JSR         PRINTADDRESS
0000103E                            27      
0000103E                            28      *Copy the opcode part to D0
0000103E  3010                      29      MOVE.W      (A0), D0
00001040                            30      
00001040                            31      *Copy the opcode to D1 for changes
00001040  3210                      32      MOVE.W      (A0), D1
00001042                            33      
00001042  3C48                      34      MOVEA.W      A0, A6    *Keep original address in case there is an error
00001044                            35      
00001044                            36      *Increase the address by 2, since that part has been read
00001044  5448                      37      ADDA.W       #$2, A0
00001046                            38      
00001046  183C 00FF                 39      MOVE.B      #-1, D4     *Start at invalid
0000104A                            40      
0000104A  4EB9 00001A3C             41      JSR         CHECK1100    *Check for AND or MULS
00001050  4EB9 00001AAE             42      JSR         CHECK0000   *Check for ANDI, ADDI, BCHG, CMPI or MOVE  initial
00001056  4EB9 00001BD6             43      JSR         CHECK1110 *Check for LSx,ASx,ROx
0000105C  4EB9 00001DDE             44      JSR         CHECK1010  * Check for the CMP opcode
00001062  4EB9 00001E38             45      JSR         CHECK0110 *Check for BCC opcode
00001068  4EB9 00001E18             46      JSR         CHECK0111 *Check for MOVEQ opcode
0000106E  4EB9 00001E98             47      JSR         CHECK1101 *Check for ADD or ADDA
00001074  4EB9 00001F2A             48      JSR         CHECK1001 *Check for SUB or SUBA
0000107A  4EB9 00001FBC             49      JSR         CHECK1000 *Check for DIVS 
00001080  4EB9 00001FDC             50      JSR         CHECK0100 *Check for JSR,RTS,NOP,MOVEM,LEA,CLR
00001086                            51     
00001086  2400                      52      MOVE.L      D0, D2          *Backup opcode
00001088                            53     
00001088  B83C 00FF                 54      CMP.B       #-1, D4
0000108C  6700 009A                 55      BEQ         INVALIDOPCODE
00001090                            56      
00001090  2002                      57      MOVE.L      D2, D0      *restore opcode
00001092  4242                      58      CLR         D2
00001094                            59      
00001094  4EB9 000020D6             60      JSR         CHECKEAS    *Checks the EAs
0000109A                            61      
0000109A                            62      *Would go below only if there are no errors
0000109A  103C 000E                 63      MOVE.B  #14, D0         *Print opcode
0000109E  4E4F                      64      TRAP    #15
000010A0                            65      
000010A0  4EB9 00001194             66      JSR         PRINTSIZES  *Print the sizes
000010A6                            67      
000010A6  BA3C 00FF                 68      CMP.B   #-1, D5
000010AA  6600 0006                 69      BNE     SOURCE
000010AE  6000 0028                 70      BRA     CONTINUE
000010B2                            71      
000010B2  4EB9 00001420             72  SOURCE    JSR         PRINTSOURCE *Print source EA
000010B8                            73  
000010B8  BC3C 00FF                 74      CMP.B   #-1, D6
000010BC  6700 0008                 75      BEQ     DESTINATION
000010C0                            76      
000010C0  4EB9 00001186             77      JSR     PRINTCOMMA
000010C6                            78      
000010C6  BC3C 00FF                 79  DESTINATION     CMP.B   #-1, D6
000010CA  6600 0006                 80      BNE     DEST
000010CE  6000 0008                 81      BRA     CONTINUE
000010D2  4EB9 000011F0             82  DEST    JSR         PRINTDESTINATION    *Print destination
000010D8  4EB9 0000180E             83  CONTINUE    JSR         EMPTYLINE   
000010DE                            84      
000010DE  B1CC                      85      CMP.L       A4, A0      *Check if the starting address is same as ending
000010E0  6C00 073A                 86      BGE         OUTPUTEND   *If yes, then stop
000010E4                            87      
000010E4  4EB9 00001174             88      JSR         CLEARALL
000010EA                            89      
000010EA  B7FC 00000018             90      CMP.L       #$18, A3
000010F0  6700 000A                 91      BEQ         ASKFORCONTINUE
000010F4                            92      
000010F4  6000 FF40                 93      BRA         LOOP        *If not, then loop back            
000010F8                            94      
000010F8  FFFF FFFF                 95      SIMHALT   
000010FC                            96  *------------------------------------main----------------------------------------
000010FC                            97      
000010FC  43F9 0000366B             98  ASKFORCONTINUE  LEA         CONTINUEMESSAGE, A1
00001102  103C 000E                 99                  MOVE.B      #14, D0
00001106  4E4F                     100                  TRAP        #15
00001108                           101                  
00001108  103C 0005                102                  MOVE.B      #5, D0  *Read y/n
0000110C  4E4F                     103  ASKLOOP         TRAP        #15
0000110E                           104                  
0000110E  B23C 000D                105                  CMP.B       #$D, D1    *n
00001112  6700 0004                106                  BEQ         YESCONTINUE
00001116  60F4                     107                  BRA ASKLOOP
00001118                           108               
00001118                           109                  
00001118  4EB9 0000180E            110  YESCONTINUE     JSR         EMPTYLINE
0000111E  267C 00000000            111                  MOVEA.L     #$0, A3
00001124  6000 FF10                112                  BRA         LOOP
00001128                           113                  
00001128                           114  
00001128                           115  
00001128  43F9 000036E4            116  INVALIDOPCODE   LEA         INVALIDMESSAGE, A1
0000112E  103C 000E                117                  MOVE.B      #14, D0
00001132  4E4F                     118                  TRAP        #15
00001134                           119                  
00001134  43F9 000036D3            120                  LEA         SPACEMESSAGE, A1
0000113A  103C 000E                121                  MOVE.B      #14, D0
0000113E  4E4F                     122                  TRAP        #15
00001140                           123                  
00001140  43F9 000036E9            124                  LEA         DOLLARMESSAGE, A1
00001146  103C 000E                125                  MOVE.B      #14, D0
0000114A  4E4F                     126                  TRAP        #15
0000114C                           127                  
0000114C  1C3C 0004                128                  MOVE.B      #$4, D6             *Put actual size in D6
00001150  3616                     129                  MOVE.W      (A6), D3            *Move opcode in D3
00001152  E95B                     130  INVALIDLOOP     ROL.W       #$4, D3             *Shift left to right position
00001154  3003                     131                  MOVE.W      D3, D0              *Move to D0 for backup
00001156  C67C 000F                132                  AND.W       #$F, D3             *Isolate first byte
0000115A  1203                     133                  MOVE.B      D3, D1              *Move byte to D1
0000115C  3600                     134                  MOVE.W      D0, D3              *Move original back to D2
0000115E  C67C FFF0                135                  AND.W       #$FFF0, D3          *Remove first 4 bits
00001162  5306                     136                  SUB.B       #$1, D6
00001164                           137                  
00001164  4EB9 00001914            138                  JSR         COMPAREADDRESS
0000116A                           139                  
0000116A  BC3C 0000                140                  CMP.B       #$0, D6
0000116E  66E2                     141                  BNE         INVALIDLOOP
00001170                           142                  
00001170  6000 FF66                143                  BRA         CONTINUE
00001174                           144  
00001174  4240                     145  CLEARALL        CLR         D0
00001176  4241                     146                  CLR         D1
00001178  4242                     147                  CLR         D2
0000117A  4243                     148                  CLR         D3
0000117C  4244                     149                  CLR         D4
0000117E  4245                     150                  CLR         D5
00001180  4246                     151                  CLR         D6
00001182  4247                     152                  CLR         D7
00001184                           153                  
00001184                           154                  *MOVEA.L     #$0, A1
00001184                           155                  *MOVEA.L     #$0, A2
00001184                           156                  *MOVEA.L     #$0, A6
00001184  4E75                     157                  RTS
00001186                           158                  
00001186  43F9 000036DF            159  PRINTCOMMA      LEA         COMMAMESSAGE, A1
0000118C  103C 000E                160                  MOVE.B      #14, D0
00001190  4E4F                     161                  TRAP        #15
00001192                           162                  
00001192  4E75                     163                  RTS
00001194                           164                  
00001194                           165  *-----------------------------------PRINTSIZES-----------------------------------
00001194                           166  *Description: This branch print the sizes (.b, .w, .l)
00001194                           167  *--------------------------------------------------------------------------------
00001194                           168                  
00001194  BE3C 0001                169  PRINTSIZES      CMP.B       #$1, D7         *Check if byte
00001198  6700 001A                170                  BEQ         PRINTBYTE
0000119C                           171                  
0000119C  BE3C 0002                172                  CMP.B       #$2, D7         *Check if word
000011A0  6700 0026                173                  BEQ         PRINTWORD   
000011A4                           174                  
000011A4  BE3C 0003                175                  CMP.B       #$3, D7         *Check if long
000011A8  6700 0032                176                  BEQ         PRINTLONG
000011AC                           177                  
000011AC  4EB9 00001906            178                  JSR         PRINTSPACE
000011B2                           179                  
000011B2  4E75                     180                  RTS
000011B4                           181                  
000011B4  43F9 000035E1            182  PRINTBYTE       LEA         BYTEMESSAGE, A1
000011BA  103C 000E                183                  MOVE.B      #14, D0
000011BE  4E4F                     184                  TRAP        #15
000011C0                           185                  
000011C0  4EB9 00001906            186                  JSR         PRINTSPACE
000011C6  4E75                     187                  RTS
000011C8                           188                  
000011C8  43F9 000035E4            189  PRINTWORD       LEA         WORDMESSAGE, A1
000011CE  103C 000E                190                  MOVE.B      #14, D0
000011D2  4E4F                     191                  TRAP        #15
000011D4                           192                  
000011D4  4EB9 00001906            193                  JSR         PRINTSPACE
000011DA  4E75                     194                  RTS
000011DC                           195                  
000011DC  43F9 000035E7            196  PRINTLONG       LEA         LONGMESSAGE, A1
000011E2  103C 000E                197                  MOVE.B      #14, D0
000011E6  4E4F                     198                  TRAP        #15
000011E8                           199                  
000011E8  4EB9 00001906            200                  JSR         PRINTSPACE
000011EE  4E75                     201                  RTS
000011F0                           202                  
000011F0                           203  *-----------------------------------PRINTEAS-------------------------------------
000011F0                           204  *Description: This branch prints the EAs
000011F0                           205  *--------------------------------------------------------------------------------
000011F0                           206  
000011F0  5206                     207  PRINTDESTINATION     ADD.B       #$1, D6             *Add 1 to size
000011F2                           208  
000011F2  BC3C 0001                209                  CMP.B       #$1, D6             *Check if Dn
000011F6  6700 00C4                210                  BEQ         DNEAD                *It's DN
000011FA                           211                  
000011FA  BC3C 0002                212                  CMP.B       #$2, D6             *Check if An
000011FE  6700 00D2                213                  BEQ         ANEAD
00001202                           214                  
00001202  BC3C 0004                215                  CMP.B       #$4, D6             *Check if (An)
00001206  6700 00E0                216                  BEQ         ANIEAD
0000120A                           217                  
0000120A  BC3C 0005                218                  CMP.B       #$5, D6             *Check if (An)+
0000120E  6700 00FA                219                  BEQ         ANPLUSEAD       
00001212                           220                  
00001212  BC3C 0006                221                  CMP.B       #$6, D6             *Check if -(An)
00001216  6700 0114                222                  BEQ         ANMINUSEAD      
0000121A                           223                  
0000121A  BC3C 0007                224                  CMP.B       #$7, D6             *Check if xxx.w
0000121E  6700 012E                225                  BEQ         XXXWEAD          
00001222                           226                  
00001222  BC3C 0008                227                  CMP.B       #$8, D6             *Check if xxx.l
00001226  6700 0156                228                  BEQ         XXXLEAD
0000122A                           229                  
0000122A  BC3C 0009                230                  CMP.B       #$9, D6             *Check if data
0000122E  6700 0182                231                  BEQ         DATAEAD
00001232                           232                  
00001232  BC3C 0011                233                  CMP.B       #$11, D6            *Check if list
00001236  6700 0002                234                  BEQ         ADLISTEAD
0000123A                           235                  
0000123A  4243                     236  ADLISTEAD       CLR         D3
0000123C  4241                     237                  CLR         D1
0000123E  4246                     238                  CLR         D6
00001240  1232 3000                239  ADLISTEALOOPD   MOVE.B      (A2, D3), D1      *retrive element
00001244  BC3C 0000                240                  CMP.B       #$0, D6
00001248  6600 005E                241                  BNE         ADLISTSLASHD
0000124C                           242                  
0000124C  B63C 0007                243  ADLISTEALOOP2D  CMP.B       #7, D3              *Check if index less than 7
00001250  6F00 0006                244                  BLE         DLISTD
00001254                           245                  
00001254  6000 0024                246                  BRA         ALISTD
00001258                           247                  
00001258  B23C 0001                248  DLISTD          CMP.B       #$1, D1         *Check if element 1
0000125C  6600 0040                249                  BNE         CHECKADLISTD
00001260                           250                  
00001260  43F9 0000370D            251                  LEA         DNMESSAGE, A1       *Show D
00001266  103C 000E                252                  MOVE.B      #14, D0
0000126A  4E4F                     253                  TRAP        #15
0000126C                           254                  
0000126C  1C01                     255                  MOVE.B      D1, D6              *Conserve num
0000126E  1203                     256                  MOVE.B      D3, D1              *Move counter to D1
00001270  103C 0003                257                  MOVE.B      #3, D0              *Show n
00001274  4E4F                     258                  TRAP        #15
00001276                           259                  
00001276  6000 0026                260                  BRA         CHECKADLISTD
0000127A                           261                  
0000127A  B23C 0001                262  ALISTD          CMP.B       #$1, D1         *Check if element 1
0000127E  6600 001E                263                  BNE         CHECKADLISTD
00001282                           264                  
00001282  43F9 0000370F            265                  LEA         ANMESSAGE, A1       *Show A
00001288  103C 000E                266                  MOVE.B      #14, D0
0000128C  4E4F                     267                  TRAP        #15
0000128E                           268                  
0000128E  1C01                     269                  MOVE.B      D1, D6              *Conserve num
00001290  1203                     270                  MOVE.B      D3, D1              *Move counter to D1
00001292  5101                     271                  SUB.B       #8, D1              *Subtract 8
00001294  103C 0003                272                  MOVE.B      #3, D0              *Show n
00001298  4E4F                     273                  TRAP        #15
0000129A                           274                  
0000129A  6000 0002                275                  BRA         CHECKADLISTD
0000129E                           276                  
0000129E  5203                     277  CHECKADLISTD    ADD.B       #1, D3              *add counter
000012A0  B63C 0010                278                  CMP.B       #16, D3
000012A4  669A                     279                  BNE         ADLISTEALOOPD
000012A6                           280                  
000012A6  4E75                     281                  RTS        
000012A8                           282                  
000012A8  B23C 0000                283  ADLISTSLASHD    CMP.B       #$0, D1
000012AC  679E                     284                  BEQ         ADLISTEALOOP2D
000012AE                           285                  
000012AE  43F9 000036E2            286                  LEA         SLASHMESSAGE, A1
000012B4  103C 000E                287                  MOVE.B      #14, D0
000012B8  4E4F                     288                  TRAP        #15
000012BA                           289                  
000012BA  6090                     290                  BRA         ADLISTEALOOP2D
000012BC                           291                  
000012BC  43F9 0000370D            292  DNEAD           LEA         DNMESSAGE, A1       *Show D
000012C2  103C 000E                293                  MOVE.B      #14, D0
000012C6  4E4F                     294                  TRAP        #15
000012C8                           295                  
000012C8  1203                     296                  MOVE.B      D3, D1              *Show n
000012CA  103C 0003                297                  MOVE.B      #3, D0
000012CE  4E4F                     298                  TRAP        #15
000012D0                           299                  
000012D0  4E75                     300                  RTS
000012D2                           301                  
000012D2  43F9 0000370F            302  ANEAD           LEA         ANMESSAGE, A1       *Show A
000012D8  103C 000E                303                  MOVE.B      #14, D0
000012DC  4E4F                     304                  TRAP        #15
000012DE                           305                  
000012DE  1203                     306                  MOVE.B      D3, D1              *Show n
000012E0  103C 0003                307                  MOVE.B      #3, D0
000012E4  4E4F                     308                  TRAP        #15
000012E6                           309                  
000012E6  4E75                     310                  RTS
000012E8                           311                  
000012E8  43F9 00003711            312  ANIEAD          LEA         ANIOPENMESSAGE, A1  *Show (A
000012EE  103C 000E                313                  MOVE.B      #14, D0
000012F2  4E4F                     314                  TRAP        #15
000012F4                           315                  
000012F4  1203                     316                  MOVE.B      D3, D1              *Show n
000012F6  103C 0003                317                  MOVE.B      #3, D0
000012FA  4E4F                     318                  TRAP        #15
000012FC                           319                  
000012FC  43F9 00003714            320                  LEA         ANICLOSEMESSAGE, A1 *Show )  
00001302  103C 000E                321                  MOVE.B      #14, D0
00001306  4E4F                     322                  TRAP        #15   
00001308                           323                  
00001308  4E75                     324                  RTS
0000130A                           325                  
0000130A  43F9 00003711            326  ANPLUSEAD       LEA         ANIOPENMESSAGE, A1  *Show (A
00001310  103C 000E                327                  MOVE.B      #14, D0
00001314  4E4F                     328                  TRAP        #15
00001316                           329                  
00001316  1203                     330                  MOVE.B      D3, D1              *Show n
00001318  103C 0003                331                  MOVE.B      #3, D0
0000131C  4E4F                     332                  TRAP        #15
0000131E                           333                  
0000131E  43F9 00003716            334                  LEA         ANPLUSCLOSEMESSAGE, A1 *Show )+  
00001324  103C 000E                335                  MOVE.B      #14, D0
00001328  4E4F                     336                  TRAP        #15  
0000132A                           337                  
0000132A  4E75                     338                  RTS
0000132C                           339                  
0000132C  43F9 00003719            340  ANMINUSEAD      LEA         ANMINUSOPENMESSAGE, A1  *Show -(A
00001332  103C 000E                341                  MOVE.B      #14, D0
00001336  4E4F                     342                  TRAP        #15
00001338                           343                  
00001338  1203                     344                  MOVE.B      D3, D1              *Show n
0000133A  103C 0003                345                  MOVE.B      #3, D0
0000133E  4E4F                     346                  TRAP        #15
00001340                           347                  
00001340  43F9 00003714            348                  LEA         ANICLOSEMESSAGE, A1 *Show )  
00001346  103C 000E                349                  MOVE.B      #14, D0
0000134A  4E4F                     350                  TRAP        #15 
0000134C                           351                  
0000134C  4E75                     352                  RTS
0000134E                           353                  
0000134E  43F9 000036E9            354  XXXWEAD         LEA         DOLLARMESSAGE, A1
00001354  103C 000E                355                  MOVE.B      #14, D0
00001358  4E4F                     356                  TRAP        #15
0000135A                           357  
0000135A  1C3C 0004                358                  MOVE.B      #$4, D6             *Put actual size in D5
0000135E  E95B                     359  XXXWEALOOPD     ROL.W       #$4, D3             *Shift left to right position
00001360  3003                     360                  MOVE.W      D3, D0              *Move to D0 for backup
00001362  C67C 000F                361                  AND.W       #$F, D3             *Isolate first byte
00001366  1203                     362                  MOVE.B      D3, D1              *Move byte to D1
00001368  3600                     363                  MOVE.W      D0, D3              *Move original back to D2
0000136A  C67C FFF0                364                  AND.W       #$FFF0, D3          *Remove first 4 bits
0000136E  5306                     365                  SUB.B       #$1, D6
00001370                           366                  
00001370  4EB9 00001914            367                  JSR         COMPAREADDRESS
00001376                           368                  
00001376  BC3C 0000                369                  CMP.B       #$0, D6
0000137A  66E2                     370                  BNE         XXXWEALOOPD
0000137C                           371                  
0000137C  4E75                     372                  RTS
0000137E                           373                  
0000137E  43F9 000036E9            374  XXXLEAD         LEA         DOLLARMESSAGE, A1
00001384  103C 000E                375                  MOVE.B      #14, D0
00001388  4E4F                     376                  TRAP        #15
0000138A                           377  
0000138A  1C3C 0008                378                  MOVE.B      #$8, D6             *Put actual size in D5
0000138E  E99B                     379  XXXLEALOOPD     ROL.L       #$4, D3             *Shift left to right position
00001390  2003                     380                  MOVE.L      D3, D0              *Move to D0 for backup
00001392  C6BC 0000000F            381                  AND.L       #$F, D3             *Isolate first byte
00001398  1203                     382                  MOVE.B      D3, D1              *Move byte to D1
0000139A  2600                     383                  MOVE.L      D0, D3              *Move original back to D2
0000139C  C6BC FFFFFFF0            384                  AND.L       #$FFFFFFF0, D3      *Remove first 4 bits
000013A2  5306                     385                  SUB.B       #$1, D6
000013A4                           386                  
000013A4  4EB9 00001914            387                  JSR         COMPAREADDRESS
000013AA                           388                  
000013AA  BC3C 0000                389                  CMP.B       #$0, D6
000013AE  66DE                     390                  BNE         XXXLEALOOPD
000013B0                           391                  
000013B0  4E75                     392                  RTS
000013B2                           393       
000013B2  43F9 000036EB            394  DATAEAD         LEA         POUNDMESSAGE, A1
000013B8  103C 000E                395                  MOVE.B      #14, D0
000013BC  4E4F                     396                  TRAP        #15
000013BE                           397                  
000013BE  43F9 000036E9            398                  LEA         DOLLARMESSAGE, A1
000013C4  103C 000E                399                  MOVE.B      #14, D0
000013C8  4E4F                     400                  TRAP        #15
000013CA                           401  
000013CA  BEBC 00000001            402                  CMP.L       #$1, D7
000013D0  6700 0016                403                  BEQ         ADDBYTE
000013D4                           404                  
000013D4  BEBC 00000002            405                  CMP.L       #$2, D7
000013DA  6700 0012                406                  BEQ         ADDWORD
000013DE                           407                  
000013DE  BEBC 00000003            408                  CMP.L       #$3, D7
000013E4  6700 000E                409                  BEQ         ADDLONG
000013E8                           410                  
000013E8  7E02                     411  ADDBYTE         MOVE.L      #$2, D7
000013EA  6000 000E                412                  BRA         DATAEALOOPD
000013EE                           413                  
000013EE  7E04                     414  ADDWORD         MOVE.L      #$4, D7
000013F0  6000 0008                415                  BRA         DATAEALOOPD
000013F4                           416                
000013F4  7E08                     417  ADDLONG         MOVE.L      #$8, D7
000013F6  6000 0002                418                  BRA         DATAEALOOPD
000013FA                           419  
000013FA  E99B                     420  DATAEALOOPD     ROL.L       #$4, D3             *Shift left to right position
000013FC  2003                     421                  MOVE.L      D3, D0              *Move to D0 for backup
000013FE  C6BC 0000000F            422                  AND.L       #$F, D3             *Isolate first byte
00001404  4241                     423                  CLR         D1
00001406  1203                     424                  MOVE.B      D3, D1              *Move byte to D1
00001408  2600                     425                  MOVE.L      D0, D3              *Move original back to D2
0000140A  C6BC FFFFFFF0            426                  AND.L       #$FFFFFFF0, D3      *Remove first 4 bits
00001410  5307                     427                  SUB.B       #$1, D7
00001412                           428                  
00001412  4EB9 00001914            429                  JSR         COMPAREADDRESS
00001418                           430                  
00001418  BE3C 0000                431                  CMP.B       #$0, D7
0000141C  66DC                     432                  BNE         DATAEALOOPD
0000141E                           433                  
0000141E  4E75                     434                  RTS
00001420                           435                  
00001420                           436  
00001420  5205                     437  PRINTSOURCE     ADD.B       #$1, D5             *Add 1 to size
00001422                           438  
00001422  BA3C 0001                439                  CMP.B       #$1, D5             *Check if Dn
00001426  6700 015E                440                  BEQ         DNEA                *It's DN
0000142A                           441                  
0000142A  BA3C 0002                442                  CMP.B       #$2, D5             *Check if An
0000142E  6700 016C                443                  BEQ         ANEA
00001432                           444                  
00001432  BA3C 0004                445                  CMP.B       #$4, D5             *Check if (An)
00001436  6700 017A                446                  BEQ         ANIEA
0000143A                           447                  
0000143A  BA3C 0005                448                  CMP.B       #$5, D5             *Check if (An)+
0000143E  6700 0194                449                  BEQ         ANPLUSEA       
00001442                           450                  
00001442  BA3C 0006                451                  CMP.B       #$6, D5             *Check if -(An)
00001446  6700 01AE                452                  BEQ         ANMINUSEA      
0000144A                           453                  
0000144A  BA3C 0007                454                  CMP.B       #$7, D5             *Check if xxx.w
0000144E  6700 01C8                455                  BEQ         XXXWEA          
00001452                           456                  
00001452  BA3C 0008                457                  CMP.B       #$8, D5             *Check if xxx.l
00001456  6700 01F0                458                  BEQ         XXXLEA
0000145A                           459                  
0000145A  BA3C 0009                460                  CMP.B       #$9, D5             *Check if data
0000145E  6700 021C                461                  BEQ         DATAEA
00001462                           462                  
00001462  BA3C 0011                463                  CMP.B       #$11, D5            *Check if list
00001466  6700 000A                464                  BEQ         ADLISTEA
0000146A                           465                  
0000146A  BA3C 0012                466                  CMP.B       #$12, D5            *Check if list
0000146E  6700 0084                467                  BEQ         DALISTEA
00001472                           468                  
00001472  4242                     469  ADLISTEA        CLR         D2
00001474  4241                     470                  CLR         D1
00001476  4245                     471                  CLR         D5
00001478  1232 2000                472  ADLISTEALOOP    MOVE.B      (A2, D2), D1      *retrive element
0000147C  BA3C 0000                473                  CMP.B       #$0, D5
00001480  6600 005E                474                  BNE         ADLISTSLASH
00001484                           475                  
00001484  B43C 0007                476  ADLISTEALOOP2   CMP.B       #7, D2              *Check if index less than 7
00001488  6F00 0006                477                  BLE         DLIST
0000148C                           478                  
0000148C  6000 0024                479                  BRA         ALIST
00001490                           480                  
00001490  B23C 0001                481  DLIST           CMP.B       #$1, D1         *Check if element 1
00001494  6600 0040                482                  BNE         CHECKADLIST
00001498                           483                  
00001498  43F9 0000370D            484                  LEA         DNMESSAGE, A1       *Show D
0000149E  103C 000E                485                  MOVE.B      #14, D0
000014A2  4E4F                     486                  TRAP        #15
000014A4                           487                  
000014A4  1A01                     488                  MOVE.B      D1, D5              *Conserve num
000014A6  1202                     489                  MOVE.B      D2, D1              *Move counter to D1
000014A8  103C 0003                490                  MOVE.B      #3, D0              *Show n
000014AC  4E4F                     491                  TRAP        #15
000014AE                           492                  
000014AE  6000 0026                493                  BRA         CHECKADLIST
000014B2                           494                  
000014B2  B23C 0001                495  ALIST           CMP.B       #$1, D1         *Check if element 1
000014B6  6600 001E                496                  BNE         CHECKADLIST
000014BA                           497                  
000014BA  43F9 0000370F            498                  LEA         ANMESSAGE, A1       *Show A
000014C0  103C 000E                499                  MOVE.B      #14, D0
000014C4  4E4F                     500                  TRAP        #15
000014C6                           501                  
000014C6  1A01                     502                  MOVE.B      D1, D5              *Conserve num
000014C8  1202                     503                  MOVE.B      D2, D1              *Move counter to D1
000014CA  5101                     504                  SUB.B       #8, D1              *Subtract 8
000014CC  103C 0003                505                  MOVE.B      #3, D0              *Show n
000014D0  4E4F                     506                  TRAP        #15
000014D2                           507                  
000014D2  6000 0002                508                  BRA         CHECKADLIST
000014D6                           509                  
000014D6  5202                     510  CHECKADLIST     ADD.B       #1, D2              *add counter
000014D8  B43C 0010                511                  CMP.B       #16, D2
000014DC  669A                     512                  BNE         ADLISTEALOOP
000014DE                           513                  
000014DE  4E75                     514                  RTS        
000014E0                           515                  
000014E0  B23C 0000                516  ADLISTSLASH     CMP.B       #$0, D1
000014E4  679E                     517                  BEQ         ADLISTEALOOP2
000014E6                           518                  
000014E6  43F9 000036E2            519                  LEA         SLASHMESSAGE, A1
000014EC  103C 000E                520                  MOVE.B      #14, D0
000014F0  4E4F                     521                  TRAP        #15
000014F2                           522                  
000014F2  6090                     523                  BRA         ADLISTEALOOP2
000014F4                           524                 
000014F4                           525                  
000014F4  4242                     526  DALISTEA        CLR         D2
000014F6  4241                     527                  CLR         D1
000014F8  4245                     528                  CLR         D5
000014FA  1232 2000                529  DALISTEALOOP    MOVE.B      (A2, D2), D1      *retrive element
000014FE  BA3C 0000                530                  CMP.B       #$0, D5
00001502  6600 006E                531                  BNE         DALISTSLASH
00001506                           532                  
00001506  B43C 0007                533  DALISTEALOOP2   CMP.B       #7, D2              *Check if index less than 7
0000150A  6F00 0032                534                  BLE         ALIST2
0000150E                           535                  
0000150E  6000 0002                536                  BRA         DLIST2
00001512                           537                  
00001512  B23C 0001                538  DLIST2          CMP.B       #$1, D1         *Check if element 1
00001516  6600 0050                539                  BNE         CHECKDALIST
0000151A                           540                  
0000151A  43F9 0000370D            541                  LEA         DNMESSAGE, A1       *Show D
00001520  103C 000E                542                  MOVE.B      #14, D0
00001524  4E4F                     543                  TRAP        #15
00001526                           544                  
00001526  1A01                     545                  MOVE.B      D1, D5              *Conserve num
00001528  1202                     546                  MOVE.B      D2, D1              *Move counter to D1
0000152A  5101                     547                  SUB.B       #8, D1              *Subtract 8
0000152C  1001                     548                  MOVE.B      D1, D0              *Move counter to d0
0000152E  123C 0007                549                  MOVE.B      #7, D1              *Move 7 to d1
00001532  9200                     550                  SUB.B       D0, D1              *Do 7 - counter
00001534  103C 0003                551                  MOVE.B      #3, D0              *Show n
00001538  4E4F                     552                  TRAP        #15
0000153A                           553                  
0000153A  6000 002C                554                  BRA         CHECKDALIST
0000153E                           555                  
0000153E  B23C 0001                556  ALIST2          CMP.B       #$1, D1         *Check if element 1
00001542  6600 0024                557                  BNE         CHECKDALIST
00001546                           558                  
00001546  43F9 0000370F            559                  LEA         ANMESSAGE, A1       *Show A
0000154C  103C 000E                560                  MOVE.B      #14, D0
00001550  4E4F                     561                  TRAP        #15
00001552                           562                  
00001552  1A01                     563                  MOVE.B      D1, D5              *Conserve num
00001554  1202                     564                  MOVE.B      D2, D1              *Move counter to D1
00001556  1001                     565                  MOVE.B      D1, D0              *Move counter to d0
00001558  123C 0007                566                  MOVE.B      #7, D1              *Move 7 to d1
0000155C  9200                     567                  SUB.B       D0, D1              *Do 7 - counter
0000155E  103C 0003                568                  MOVE.B      #3, D0              *Show n
00001562  4E4F                     569                  TRAP        #15
00001564                           570                  
00001564  6000 0002                571                  BRA         CHECKDALIST
00001568                           572                  
00001568  5202                     573  CHECKDALIST     ADD.B       #1, D2              *add counter
0000156A  B43C 0010                574                  CMP.B       #16, D2
0000156E  668A                     575                  BNE         DALISTEALOOP
00001570                           576                  
00001570  4E75                     577                  RTS        
00001572                           578                  
00001572  B23C 0000                579  DALISTSLASH     CMP.B       #$0, D1
00001576  678E                     580                  BEQ         DALISTEALOOP2
00001578                           581                  
00001578  43F9 000036E2            582                  LEA         SLASHMESSAGE, A1
0000157E  103C 000E                583                  MOVE.B      #14, D0
00001582  4E4F                     584                  TRAP        #15
00001584                           585                  
00001584  6080                     586                  BRA         DALISTEALOOP2
00001586                           587  
00001586                           588                                  
00001586  43F9 0000370D            589  DNEA            LEA         DNMESSAGE, A1       *Show D
0000158C  103C 000E                590                  MOVE.B      #14, D0
00001590  4E4F                     591                  TRAP        #15
00001592                           592                  
00001592  1202                     593                  MOVE.B      D2, D1              *Show n
00001594  103C 0003                594                  MOVE.B      #3, D0
00001598  4E4F                     595                  TRAP        #15
0000159A                           596                  
0000159A  4E75                     597                  RTS
0000159C                           598                  
0000159C  43F9 0000370F            599  ANEA            LEA         ANMESSAGE, A1       *Show A
000015A2  103C 000E                600                  MOVE.B      #14, D0
000015A6  4E4F                     601                  TRAP        #15
000015A8                           602                  
000015A8  1202                     603                  MOVE.B      D2, D1              *Show n
000015AA  103C 0003                604                  MOVE.B      #3, D0
000015AE  4E4F                     605                  TRAP        #15
000015B0                           606                  
000015B0  4E75                     607                  RTS
000015B2                           608                  
000015B2  43F9 00003711            609  ANIEA           LEA         ANIOPENMESSAGE, A1  *Show (A
000015B8  103C 000E                610                  MOVE.B      #14, D0
000015BC  4E4F                     611                  TRAP        #15
000015BE                           612                  
000015BE  1202                     613                  MOVE.B      D2, D1              *Show n
000015C0  103C 0003                614                  MOVE.B      #3, D0
000015C4  4E4F                     615                  TRAP        #15
000015C6                           616                  
000015C6  43F9 00003714            617                  LEA         ANICLOSEMESSAGE, A1 *Show )  
000015CC  103C 000E                618                  MOVE.B      #14, D0
000015D0  4E4F                     619                  TRAP        #15   
000015D2                           620                  
000015D2  4E75                     621                  RTS
000015D4                           622                  
000015D4  43F9 00003711            623  ANPLUSEA        LEA         ANIOPENMESSAGE, A1  *Show (A
000015DA  103C 000E                624                  MOVE.B      #14, D0
000015DE  4E4F                     625                  TRAP        #15
000015E0                           626                  
000015E0  1202                     627                  MOVE.B      D2, D1              *Show n
000015E2  103C 0003                628                  MOVE.B      #3, D0
000015E6  4E4F                     629                  TRAP        #15
000015E8                           630                  
000015E8  43F9 00003716            631                  LEA         ANPLUSCLOSEMESSAGE, A1 *Show )+  
000015EE  103C 000E                632                  MOVE.B      #14, D0
000015F2  4E4F                     633                  TRAP        #15  
000015F4                           634                  
000015F4  4E75                     635                  RTS
000015F6                           636                  
000015F6  43F9 00003719            637  ANMINUSEA       LEA         ANMINUSOPENMESSAGE, A1  *Show -(A
000015FC  103C 000E                638                  MOVE.B      #14, D0
00001600  4E4F                     639                  TRAP        #15
00001602                           640                  
00001602  1202                     641                  MOVE.B      D2, D1              *Show n
00001604  103C 0003                642                  MOVE.B      #3, D0
00001608  4E4F                     643                  TRAP        #15
0000160A                           644                  
0000160A  43F9 00003714            645                  LEA         ANICLOSEMESSAGE, A1 *Show )  
00001610  103C 000E                646                  MOVE.B      #14, D0
00001614  4E4F                     647                  TRAP        #15 
00001616                           648                  
00001616  4E75                     649                  RTS
00001618                           650                  
00001618  43F9 000036E9            651  XXXWEA          LEA         DOLLARMESSAGE, A1
0000161E  103C 000E                652                  MOVE.B      #14, D0
00001622  4E4F                     653                  TRAP        #15
00001624                           654  
00001624  1A3C 0004                655                  MOVE.B      #$4, D5             *Put actual size in D5
00001628  E95A                     656  XXXWEALOOP      ROL.W       #$4, D2             *Shift left to right position
0000162A  3002                     657                  MOVE.W      D2, D0              *Move to D0 for backup
0000162C  C47C 000F                658                  AND.W       #$F, D2             *Isolate first byte
00001630  1202                     659                  MOVE.B      D2, D1              *Move byte to D1
00001632  3400                     660                  MOVE.W      D0, D2              *Move original back to D2
00001634  C47C FFF0                661                  AND.W       #$FFF0, D2          *Remove first 4 bits
00001638  5305                     662                  SUB.B       #$1, D5
0000163A                           663                  
0000163A  4EB9 00001914            664                  JSR         COMPAREADDRESS
00001640                           665                  
00001640  BA3C 0000                666                  CMP.B       #$0, D5
00001644  66E2                     667                  BNE         XXXWEALOOP
00001646                           668                  
00001646  4E75                     669                  RTS
00001648                           670                  
00001648  43F9 000036E9            671  XXXLEA          LEA         DOLLARMESSAGE, A1
0000164E  103C 000E                672                  MOVE.B      #14, D0
00001652  4E4F                     673                  TRAP        #15
00001654                           674  
00001654  1A3C 0008                675                  MOVE.B      #$8, D5             *Put actual size in D5
00001658  E99A                     676  XXXLEALOOP      ROL.L       #$4, D2             *Shift left to right position
0000165A  2002                     677                  MOVE.L      D2, D0              *Move to D0 for backup
0000165C  C4BC 0000000F            678                  AND.L       #$F, D2             *Isolate first byte
00001662  1202                     679                  MOVE.B      D2, D1              *Move byte to D1
00001664  2400                     680                  MOVE.L      D0, D2              *Move original back to D2
00001666  C4BC FFFFFFF0            681                  AND.L       #$FFFFFFF0, D2      *Remove first 4 bits
0000166C  5305                     682                  SUB.B       #$1, D5
0000166E                           683                  
0000166E  4EB9 00001914            684                  JSR         COMPAREADDRESS
00001674                           685                  
00001674  BA3C 0000                686                  CMP.B       #$0, D5
00001678  66DE                     687                  BNE         XXXLEALOOP
0000167A                           688                  
0000167A  4E75                     689                  RTS
0000167C                           690                  
0000167C  43F9 000036EB            691  DATAEA          LEA         POUNDMESSAGE, A1
00001682  103C 000E                692                  MOVE.B      #14, D0
00001686  4E4F                     693                  TRAP        #15
00001688                           694                  
00001688  43F9 000036E9            695                  LEA         DOLLARMESSAGE, A1
0000168E  103C 000E                696                  MOVE.B      #14, D0
00001692  4E4F                     697                  TRAP        #15
00001694                           698  
00001694  BEBC 00000001            699                  CMP.L       #$1, D7
0000169A  6700 0016                700                  BEQ         ADDBYTES
0000169E                           701                  
0000169E  BEBC 00000002            702                  CMP.L       #$2, D7
000016A4  6700 0014                703                  BEQ         ADDWORDS
000016A8                           704                  
000016A8  BEBC 00000003            705                  CMP.L       #$3, D7
000016AE  6700 0012                706                  BEQ         ADDLONGS
000016B2                           707                  
000016B2  7E02                     708  ADDBYTES        MOVE.L      #$2, D7
000016B4  7A01                     709                  MOVE.L      #$1, D5
000016B6  6000 0012                710                  BRA         DATAEALOOP
000016BA                           711                  
000016BA  7E04                     712  ADDWORDS        MOVE.L      #$4, D7
000016BC  7A02                     713                  MOVE.L      #$2, D5
000016BE  6000 000A                714                  BRA         DATAEALOOP
000016C2                           715                
000016C2  7E08                     716  ADDLONGS        MOVE.L      #$8, D7
000016C4  7A03                     717                  MOVE.L      #$3, D5
000016C6  6000 0002                718                  BRA         DATAEALOOP
000016CA                           719                  
000016CA  BA7C 0001                720  DATAEALOOP      CMP.W       #$1, D5
000016CE  6700 0012                721                  BEQ         BYTEDATA
000016D2                           722                  
000016D2  BA7C 0002                723                  CMP.W       #$2, D5
000016D6  6700 0010                724                  BEQ         WORDDATA
000016DA                           725                  
000016DA  BA7C 0003                726                  CMP.W       #$3, D5
000016DE  6700 000E                727                  BEQ         LONGDATA
000016E2                           728                  
000016E2  E91A                     729  BYTEDATA        ROL.B       #$4, D2             *Shift left to right position
000016E4  6000 000E                730                  BRA         DATAEALOOP2
000016E8                           731                  
000016E8  E95A                     732  WORDDATA        ROL.W       #$4, D2             *Shift left to right position
000016EA  6000 0008                733                  BRA         DATAEALOOP2
000016EE                           734                  
000016EE  E99A                     735  LONGDATA        ROL.L       #$4, D2             *Shift left to right position
000016F0  6000 0002                736                  BRA         DATAEALOOP2
000016F4                           737                 
000016F4  2002                     738  DATAEALOOP2     MOVE.L      D2, D0              *Move to D0 for backup
000016F6  C4BC 0000000F            739                  AND.L       #$F, D2             *Isolate first byte
000016FC  4241                     740                  CLR         D1
000016FE  1202                     741                  MOVE.B      D2, D1              *Move byte to D1
00001700  2400                     742                  MOVE.L      D0, D2              *Move original back to D2
00001702  C4BC FFFFFFF0            743                  AND.L       #$FFFFFFF0, D2      *Remove first 4 bits
00001708  5307                     744                  SUB.B       #$1, D7
0000170A                           745                  
0000170A  4EB9 00001914            746                  JSR         COMPAREADDRESS
00001710                           747                  
00001710  BE3C 0000                748                  CMP.B       #$0, D7
00001714  66B4                     749                  BNE         DATAEALOOP
00001716                           750                  
00001716  4E75                     751                  RTS
00001718                           752  
00001718                           753  *-----------------------------------Input----------------------------------------
00001718                           754  *Description: This branch handles the input part of the disassmbler
00001718                           755  *--------------------------------------------------------------------------------
00001718                           756  
00001718  43F9 000035EA            757  INPUT           LEA         INPUTMESSAGE, A1    *Show the first line
0000171E  103C 000D                758                  MOVE.B      #13, D0
00001722  4E4F                     759                  TRAP        #15    
00001724  43F9 00003634            760                  LEA         INPUTMESSAGE1, A1
0000172A  103C 000D                761                  MOVE.B      #13, D0
0000172E  4E4F                     762                  TRAP        #15  
00001730                           763  
00001730  103C 0005                764  INPUTLOOP       MOVE.B      #5, D0              *Wait for user input (character)
00001734  4E4F                     765                  TRAP        #15
00001736                           766                  
00001736  B23C 002C                767  CHECKIFCOMMA    CMP.B       #$2C, D1            *If not, check if it's a comma
0000173A  6700 006A                768                  BEQ         COMMAINPUT          *If yes, it's a comma
0000173E                           769                  
0000173E  B23C 002E                770  CHECKIFPERIOD   CMP.B       #$2E, D1            *If not, check if it's a period
00001742  6700 0066                771                  BEQ         PERIODINPUT         *If yes, it's a period
00001746                           772                  
00001746  B23C 0008                773  CHECKBACKSPACE  CMP.B       #$8, D1             *If not, check if backspace
0000174A  6700 0074                774                  BEQ         BACKSPACEINPUT
0000174E                           775                  
0000174E  B23C 0061                776  CHECKLCA        CMP.B       #$61, D1
00001752  6C00 0006                777                  BGE         CHECKLCZ
00001756                           778                  
00001756  6000 0016                779                  BRA         CHECKMOREA
0000175A                           780                  
0000175A  B23C 007A                781  CHECKLCZ        CMP.B       #$7A, D1
0000175E  6F00 0006                782                  BLE         DECREASELC
00001762                           783                  
00001762  6000 000A                784                  BRA         CHECKMOREA
00001766                           785                  
00001766  0441 0020                786  DECREASELC      SUB.W       #$20, D1
0000176A  6000 0002                787                  BRA         CHECKMOREA
0000176E                           788          
0000176E  B23C 0041                789  CHECKMOREA      CMP.B       #$41, D1            *Check if letter better than A
00001772  6C00 0006                790                  BGE         CHECKLESSF          *If yes, check if less than F
00001776                           791                  
00001776  6000 000A                792                  BRA         CHECKMORE0          *If not, check if number
0000177A                           793                  
0000177A  B23C 0046                794  CHECKLESSF      CMP.B       #$46, D1            *Check if less than F
0000177E  6F00 0016                795                  BLE         LETTERINPUT         *If yes, then it's an acceptable letter input
00001782                           796          
00001782  B23C 0030                797  CHECKMORE0      CMP.B       #$30, D1            *If not, then check if number better than 0
00001786  6C00 0004                798                  BGE         CHECKIFLESS9        *If yes, check if less than 9
0000178A                           799                  
0000178A  60A4                     800                  BRA         INPUTLOOP
0000178C                           801                  
0000178C  B23C 0039                802  CHECKIFLESS9    CMP.B       #$39, D1            *Check if less than 9
00001790  6F00 000C                803                  BLE         NUMBERINPUT         *If yes, then it's a number input
00001794                           804                  
00001794  609A                     805                  BRA         INPUTLOOP           *If not, then it's an unacceptable characher
00001796                           806          
00001796  0401 0037                807  LETTERINPUT     SUB.B       #$37, D1            *Subtract 37 from D1 (since it's in ASCII)
0000179A  6000 0050                808                  BRA         DOREST
0000179E                           809          
0000179E  0401 0030                810  NUMBERINPUT     SUB.B       #$30, D1            *Subtract 30 from D1 (since it's in ASCII)
000017A2  6000 0048                811                  BRA         DOREST
000017A6                           812                  
000017A6  5204                     813  COMMAINPUT      ADD.B       #$1, D4             *Add 1 to D4 to show that the ending address
000017A8  6086                     814                  BRA         INPUTLOOP 
000017AA                           815                  
000017AA  B682                     816  PERIODINPUT     CMP.L       D2, D3
000017AC  6D00 000A                817                  BLT         SWITCHINPUT
000017B0                           818                  
000017B0  2042                     819                  MOVEA.L     D2, A0              *Move the starting address to A0
000017B2  2843                     820                  MOVEA.L     D3, A4              *Move the ending address to A4
000017B4  6000 0058                821                  BRA         EMPTYLINE
000017B8                           822                  
000017B8  2842                     823  SWITCHINPUT     MOVEA.L     D2, A4              *Move the starting address to A0
000017BA  2043                     824                  MOVEA.L     D3, A0              *Move the ending address to A4
000017BC  6000 0050                825                  BRA         EMPTYLINE
000017C0                           826                  
000017C0  B83C 0000                827  BACKSPACEINPUT  CMP.B       #$0, D4             *Check if starting address or not
000017C4  6700 0006                828                  BEQ         BACKSTART
000017C8                           829                  
000017C8  6700 000C                830                  BEQ         BACKEND
000017CC                           831                  
000017CC  E882                     832  BACKSTART       ASR.L       #$4, D2             *Shift to right
000017CE  5385                     833                  SUB.L       #$1, D5             *Subtract size
000017D0  538D                     834                  SUBA.L       #$1, A5
000017D2                           835                  
000017D2  6000 FF5C                836                  BRA         INPUTLOOP
000017D6                           837                  
000017D6  BC3C 0000                838  BACKEND         CMP.B       #$0, D6
000017DA  6700 000A                839                  BEQ         BACKCOMMA
000017DE                           840                  
000017DE  E883                     841                  ASR.L       #$4, D3             *Shift to right
000017E0  5386                     842                  SUB.L       #$1, D6             *Subtract size
000017E2                           843                  
000017E2  6000 FF4C                844                  BRA         INPUTLOOP
000017E6                           845                  
000017E6  7800                     846  BACKCOMMA       MOVE.L      #$0, D4
000017E8  6000 FF46                847                  BRA         INPUTLOOP
000017EC                           848          
000017EC  B83C 0000                849  DOREST          CMP.B       #$0, D4             *Check if it's starting or ending
000017F0  6700 0006                850                  BEQ         STARTINGADDRESS     *If yes, it's part of starting address
000017F4                           851                  
000017F4  6000 000E                852                  BRA         ENDINGADDRESS       *If not, it's part of ending address
000017F8                           853                  
000017F8  E982                     854  STARTINGADDRESS ASL.L       #$4, D2             *Shift to left
000017FA  D481                     855                  ADD.L       D1, D2              *Add the number to D2
000017FC  5285                     856                  ADD.L       #$1, D5             *Add count in D5
000017FE  528D                     857                  ADDA.L      #$1, A5             *Add to A5 as well
00001800                           858          
00001800  6000 FF2E                859                  BRA         INPUTLOOP           *Go back to the input loop
00001804                           860                  
00001804  E983                     861  ENDINGADDRESS   ASL.L       #$4, D3             *Shift to left
00001806  D681                     862                  ADD.L       D1, D3              *Add the number to D3
00001808  5286                     863                  ADD.L       #$1, D6             *Add count in D6
0000180A                           864          
0000180A  6000 FF24                865                  BRA         INPUTLOOP           *Go back to the input loop
0000180E                           866              
0000180E  43F9 0000355C            867  EMPTYLINE       LEA         EMPTYLINEMESSAGE, A1  *Empty line
00001814  103C 000D                868                  MOVE.B      #13, D0
00001818  4E4F                     869                  TRAP        #15
0000181A                           870                  
0000181A  4E75                     871                  RTS
0000181C                           872  
0000181C                           873  *----------------------------------------------------------------------------------------------------
0000181C                           874  *                                           Subroutine: OUTPUTEND
0000181C                           875  *Description: Handles what happens when the dissassembler is done
0000181C                           876  *----------------------------------------------------------------------------------------------------
0000181C                           877  
0000181C  43F9 00003693            878  OUTPUTEND       LEA         ENDMESSAGE, A1
00001822  103C 000D                879                  MOVE.B      #13, D0
00001826  4E4F                     880                  TRAP        #15
00001828                           881  
00001828                           882                  
00001828                           883     
00001828                           884          
00001828                           885  
00001828                           886  ENDLOOP    
00001828  103C 0005                887                  MOVE.B #5, D0
0000182C  4E4F                     888                  TRAP #15
0000182E  B23C 006E                889                  CMP.B #$6E,D1
00001832                           890                  
00001832  6700 0020                891                  BEQ DONE
00001836                           892                  
00001836  B23C 0079                893                  CMP.B #$79,D1                
0000183A  6700 0004                894                  BEQ TESTNEWRANGE                
0000183E  60E8                     895                  BRA ENDLOOP
00001840                           896  TESTNEWRANGE    
00001840                           897                  *start next line on a new line
00001840  103C 000E                898                  MOVE.B #14,D0   
00001844  43F9 0000355D            899                  LEA NEWLINE,A1
0000184A  4E4F                     900                  TRAP #15          
0000184C                           901                  
0000184C                           902                  *zero out memory 
0000184C  4EB8 1174                903                  JSR CLEARALL      
00001850                           904                  
00001850                           905                  *start program over          
00001850  6000 F7AE                906                  BRA START
00001854                           907  
00001854  FFFF FFFF                908  DONE SIMHALT   
00001858                           909  
00001858                           910  
00001858                           911  *----------------------------------------------------------------------------------------------------*                                           
00001858                           912  *Subroutine: PRINTADDRESS
00001858                           913  *Description: Prints the current address the disassembler is on
00001858                           914  *----------------------------------------------------------------------------------------------------
00001858                           915  
00001858  2408                     916  PRINTADDRESS    MOVE.L      A0, D2              *Move current address to D2
0000185A  2A0D                     917                  MOVE.L      A5, D5              *Move address size
0000185C                           918                  *ADD.L       #$1, D5             *Add 1 to size
0000185C  BABC 00000004            919                  CMP.L       #$4, D5             *Check if the length is >4
00001862  6E00 0010                920                  BGT         PRINTLONGADDRESS    *If yes, it's a long address
00001866                           921  
00001866  BABC 00000002            922                  CMP.L       #$2, D5             *Check if the length is >2
0000186C  6E00 0038                923                  BGT         PRINTWORDADDRESS    *If yes, it's a word address
00001870                           924                  
00001870  6000 0064                925                  BRA         PRINTBYTEADDRESS    *If not, it's a byte address
00001874                           926                  
00001874  7E08                     927  PRINTLONGADDRESS    MOVE.L  #$8, D7
00001876  9E85                     928                      SUB.L   D5, D7
00001878  CFFC 0004                929                      MULS.W  #$4, D7
0000187C  EFBA                     930                      ROL.L   D7, D2
0000187E  E99A                     931  PLAL                ROL.L   #$4, D2             *Shift by 4 bits
00001880  2E02                     932                      MOVE.L  D2, D7              *Move to D7 for backup
00001882  C4BC 0000000F            933                      AND.L   #$F, D2             *Isolate first byte
00001888  1202                     934                      MOVE.B  D2, D1              *Move byte to D1
0000188A  2407                     935                      MOVE.L  D7, D2              *Move original back to D2
0000188C  C4BC FFFFFFF0            936                      AND.L   #$FFFFFFF0, D2      *Remove first 4 bits
00001892  5305                     937                      SUB.B   #$1, D5             *Subtract 1 from length of address
00001894                           938                      
00001894  4EB9 00001914            939                      JSR     COMPAREADDRESS        *Print the address
0000189A                           940                      
0000189A  BABC 00000000            941                      CMP.L   #$0, D5             *Check if the address length is 0
000018A0  66DC                     942                      BNE     PLAL                *If not, then loop again
000018A2                           943                      
000018A2  6000 0062                944                      BRA     PRINTSPACE          *If yes, then stop and print empty line
000018A6                           945                      
000018A6  7E04                     946  PRINTWORDADDRESS    MOVE.L  #$4, D7
000018A8  9E45                     947                      SUB.W   D5, D7
000018AA  CFFC 0004                948                      MULS.W  #$4, D7
000018AE  EF7A                     949                      ROL.W   D7, D2
000018B0  E95A                     950  PWAL                ROL.W   #$4, D2             *Shift by 4 bits
000018B2  2E02                     951                      MOVE.L  D2, D7              *Move to D7 for backup
000018B4  C4BC 0000000F            952                      AND.L   #$F, D2             *Isolate first byte
000018BA  1202                     953                      MOVE.B  D2, D1              *Move byte to D1
000018BC  2407                     954                      MOVE.L  D7, D2              *Move original back to D2
000018BE  C4BC FFFFFFF0            955                      AND.L   #$FFFFFFF0, D2      *Remove first 4 bits
000018C4  5305                     956                      SUB.B   #$1, D5             *Subtract 1 from length of address
000018C6                           957                      
000018C6  4EB9 00001914            958                      JSR     COMPAREADDRESS        *Print the address
000018CC                           959                      
000018CC  BA7C 0000                960                      CMP.W   #$0, D5             *Check if the address length is 0
000018D0  66DE                     961                      BNE     PWAL                *If not, then loop again
000018D2                           962                      
000018D2  6000 0032                963                      BRA     PRINTSPACE          *If yes, then stop and print empty line
000018D6                           964                      
000018D6  7E02                     965  PRINTBYTEADDRESS    MOVE.L  #$2, D7
000018D8  9E45                     966                      SUB.W   D5, D7
000018DA  CFFC 0004                967                      MULS.W  #$4, D7
000018DE  EF3A                     968                      ROL.B   D7, D2
000018E0  E91A                     969  PBAL                ROL.B   #$4, D2             *Shift by 4 bits
000018E2  2E02                     970                      MOVE.L  D2, D7              *Move to D7 for backup
000018E4  C4BC 0000000F            971                      AND.L   #$F, D2             *Isolate first byte
000018EA  1202                     972                      MOVE.B  D2, D1              *Move byte to D1
000018EC  2407                     973                      MOVE.L  D7, D2              *Move original back to D2
000018EE  C4BC FFFFFFF0            974                      AND.L   #$FFFFFFF0, D2      *Remove first 4 bits
000018F4  5305                     975                      SUB.B   #$1, D5             *Subtract 1 from length of address
000018F6                           976                      
000018F6  4EB9 00001914            977                      JSR     COMPAREADDRESS        *Print the address
000018FC                           978                      
000018FC  BA3C 0000                979                      CMP.B   #$0, D5             *Check if the address length is 0
00001900  66DE                     980                      BNE     PBAL                *If not, then loop again
00001902                           981                      
00001902  6000 0002                982                      BRA     PRINTSPACE          *If yes, then stop and print empty line
00001906                           983                      
00001906  43F9 000036D3            984  PRINTSPACE          LEA     SPACEMESSAGE, A1    *Display space
0000190C  103C 000E                985                      MOVE.B  #14, D0
00001910  4E4F                     986                      TRAP    #15
00001912                           987                      
00001912  4E75                     988                      RTS
00001914                           989                      
00001914  B23C 0000                990  COMPAREADDRESS      CMP.B   #$0, D1             *Check if 0
00001918  6700 007A                991                      BEQ     NUMBERZERO
0000191C                           992                      
0000191C  B23C 0001                993                      CMP.B   #$1, D1             *etc
00001920  6700 007C                994                      BEQ     NUMBERONE
00001924                           995                      
00001924  B23C 0002                996                      CMP.B   #$2, D1
00001928  6700 007E                997                      BEQ     NUMBERTWO
0000192C                           998                      
0000192C  B23C 0003                999                      CMP.B   #$3, D1
00001930  6700 0080               1000                      BEQ     NUMBERTHREE
00001934                          1001                      
00001934  B23C 0004               1002                      CMP.B   #$4, D1
00001938  6700 0082               1003                      BEQ     NUMBERFOUR
0000193C                          1004                      
0000193C  B23C 0005               1005                      CMP.B   #$5, D1
00001940  6700 0084               1006                      BEQ     NUMBERFIVE
00001944                          1007                      
00001944  B23C 0006               1008                      CMP.B   #$6, D1
00001948  6700 0086               1009                      BEQ     NUMBERSIX
0000194C                          1010                      
0000194C  B23C 0007               1011                      CMP.B   #$7, D1
00001950  6700 0088               1012                      BEQ     NUMBERSEVEN
00001954                          1013                      
00001954  B23C 0008               1014                      CMP.B   #$8, D1
00001958  6700 008A               1015                      BEQ     NUMBEREIGHT
0000195C                          1016                      
0000195C  B23C 0009               1017                      CMP.B   #$9, D1
00001960  6700 008C               1018                      BEQ     NUMBERNINE
00001964                          1019                      
00001964  B23C 000A               1020                      CMP.B   #$A, D1
00001968  6700 008E               1021                      BEQ     NUMBERA
0000196C                          1022                      
0000196C  B23C 000B               1023                      CMP.B   #$B, D1
00001970  6700 0090               1024                      BEQ     NUMBERB
00001974                          1025                      
00001974  B23C 000C               1026                      CMP.B   #$C, D1
00001978  6700 0092               1027                      BEQ     NUMBERC
0000197C                          1028                      
0000197C  B23C 000D               1029                      CMP.B   #$D, D1
00001980  6700 0094               1030                      BEQ     NUMBERD
00001984                          1031                      
00001984  B23C 000E               1032                      CMP.B   #$E, D1
00001988  6700 0096               1033                      BEQ     NUMBERE
0000198C                          1034                      
0000198C  B23C 000F               1035                      CMP.B   #$F, D1
00001990  6700 0098               1036                      BEQ     NUMBERF
00001994                          1037  
00001994  43F9 000036ED           1038  NUMBERZERO          LEA     ZEROMESSAGE, A1
0000199A  6000 0098               1039                      BRA     SHOWADDRESS
0000199E                          1040                      
0000199E  43F9 000036EF           1041  NUMBERONE           LEA     ONEMESSAGE, A1
000019A4  6000 008E               1042                      BRA     SHOWADDRESS
000019A8                          1043                      
000019A8  43F9 000036F1           1044  NUMBERTWO           LEA     TWOMESSAGE, A1
000019AE  6000 0084               1045                      BRA     SHOWADDRESS
000019B2                          1046                      
000019B2  43F9 000036F3           1047  NUMBERTHREE         LEA     THREEMESSAGE, A1
000019B8  6000 007A               1048                      BRA     SHOWADDRESS
000019BC                          1049                      
000019BC  43F9 000036F5           1050  NUMBERFOUR          LEA     FOURMESSAGE, A1
000019C2  6000 0070               1051                      BRA     SHOWADDRESS
000019C6                          1052                      
000019C6  43F9 000036F7           1053  NUMBERFIVE          LEA     FIVEMESSAGE, A1
000019CC  6000 0066               1054                      BRA     SHOWADDRESS
000019D0                          1055                      
000019D0  43F9 000036F9           1056  NUMBERSIX           LEA     SIXMESSAGE, A1
000019D6  6000 005C               1057                      BRA     SHOWADDRESS
000019DA                          1058                      
000019DA  43F9 000036FB           1059  NUMBERSEVEN         LEA     SEVENMESSAGE, A1
000019E0  6000 0052               1060                      BRA     SHOWADDRESS
000019E4                          1061                      
000019E4  43F9 000036FD           1062  NUMBEREIGHT         LEA     EIGHTMESSAGE, A1
000019EA  6000 0048               1063                      BRA     SHOWADDRESS
000019EE                          1064                      
000019EE  43F9 000036FF           1065  NUMBERNINE          LEA     NINEMESSAGE, A1
000019F4  6000 003E               1066                      BRA     SHOWADDRESS
000019F8                          1067                      
000019F8  43F9 00003701           1068  NUMBERA             LEA     AMESSAGE, A1
000019FE  6000 0034               1069                      BRA     SHOWADDRESS
00001A02                          1070                      
00001A02  43F9 00003703           1071  NUMBERB             LEA     BMESSAGE, A1
00001A08  6000 002A               1072                      BRA     SHOWADDRESS
00001A0C                          1073                      
00001A0C  43F9 00003705           1074  NUMBERC             LEA     CMESSAGE, A1
00001A12  6000 0020               1075                      BRA     SHOWADDRESS
00001A16                          1076                      
00001A16  43F9 00003707           1077  NUMBERD             LEA     DMESSAGE, A1
00001A1C  6000 0016               1078                      BRA     SHOWADDRESS
00001A20                          1079                      
00001A20  43F9 00003709           1080  NUMBERE             LEA     EMESSAGE, A1
00001A26  6000 000C               1081                      BRA     SHOWADDRESS
00001A2A                          1082                      
00001A2A  43F9 0000370B           1083  NUMBERF             LEA     FMESSAGE, A1
00001A30  6000 0002               1084                      BRA     SHOWADDRESS
00001A34                          1085                      
00001A34                          1086                      
00001A34  103C 000E               1087  SHOWADDRESS         MOVE.B  #14, D0             *Show number
00001A38  4E4F                    1088                      TRAP    #15
00001A3A                          1089                      
00001A3A  4E75                    1090                      RTS                         *Go back
00001A3C                          1091                      
00001A3C                          1092                      
00001A3C                          1093                                     
00001A3C                          1094  
00001A3C                          1095  *----------------------------------------------------------------------------------------------------
00001A3C                          1096  *                                           Subroutine: CHECK1100
00001A3C                          1097  *Description: Checks if opcode word starts with the binary 1100. If true it checks if it is AND or MULS
00001A3C                          1098  *----------------------------------------------------------------------------------------------------
00001A3C  C27C F000               1099  CHECK1100       AND.W   #$F000, D1      *Isolates the first 4 spaces
00001A40  B27C C000               1100                  CMP.W   #$C000, D1      *Checks if the first 4 spaces are 1100
00001A44                          1101                  
00001A44  6700 0004               1102                  BEQ     CHECKANDMULS    *If equal, then go check if it's AND or MULS
00001A48                          1103                  
00001A48  4E75                    1104                  RTS
00001A4A                          1105              
00001A4A  3200                    1106  CHECKANDMULS    MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001A4C  C27C 01C0               1107                  AND.W   #$1C0, D1       *Isolate spaces 8 to 6
00001A50  B27C 01C0               1108                  CMP.W   #$1C0, D1       *Check if spaces 8 to 6 are 111
00001A54                          1109                  
00001A54  6700 0048               1110                  BEQ     OPMULS          *If yes, then it's MULS
00001A58                          1111                      
00001A58  6000 0002               1112                  BRA     OPAND          *If not, then it's AND
00001A5C  43F9 0000358D           1113  OPAND           LEA     ANDMESSAGE, A1  *Store the AND message
00001A62  183C 0013               1114                  MOVE.B  #$13, D4
00001A66                          1115                  
00001A66  3200                    1116                  MOVE.W  D0, D1
00001A68  C27C 01C0               1117                  AND.W   #$1C0, D1       *Isolate OPMODE part
00001A6C  B27C 0000               1118                  CMP.W   #$0, D1         *If OPMODE 000
00001A70  6700 0652               1119                  BEQ     SIZEB           *If yes, it's byte 
00001A74                          1120                  
00001A74  B27C 0100               1121                  CMP.W   #$100, D1       *If OPMODE 100
00001A78  6700 064A               1122                  BEQ     SIZEB           *If yes, it's byte
00001A7C                          1123                  
00001A7C  B27C 0040               1124                  CMP.W   #$40, D1        *If OPMODE 001
00001A80  6700 0648               1125                  BEQ     SIZEW           *If yes, it's word
00001A84                          1126                  
00001A84  B27C 0140               1127                  CMP.W   #$140, D1       *If OPMODE 101
00001A88  6700 0640               1128                  BEQ     SIZEW           *If yes, it's word
00001A8C                          1129                  
00001A8C  B27C 0080               1130                  CMP.W   #$80, D1        *If OPMODE 010
00001A90  6700 063E               1131                  BEQ     SIZEL           *If yes, it's long
00001A94                          1132                  
00001A94  B27C 0180               1133                  CMP.W   #$180, D1       *If OPMODE 110
00001A98  6700 0636               1134                  BEQ     SIZEL           *If yes, it's long
00001A9C                          1135                  
00001A9C  4E75                    1136                  RTS   
00001A9E                          1137                  
00001A9E  43F9 00003591           1138  OPMULS          LEA     MULSMESSAGE, A1 *Store the MULS message
00001AA4  183C 0009               1139                  MOVE.B  #$9, D4
00001AA8                          1140                  
00001AA8  6000 0620               1141                  BRA     SIZEW           *It's always a word
00001AAC                          1142                  
00001AAC  4E75                    1143                  RTS
00001AAE                          1144  *---------------------------------------------END_CHECK1100-----------------------------------------------------
00001AAE                          1145  
00001AAE                          1146  
00001AAE                          1147  
00001AAE                          1148  
00001AAE                          1149  *----------------------------------------------------------------------------------------------------
00001AAE                          1150  *                                                Subroutine: CHECK0000
00001AAE                          1151  *Description: Checks if opcode word starts with the binary 0000. If true it idendifies if it is ANDI, ADDI, BCHG,CMPI or MOVE
00001AAE                          1152  *----------------------------------------------------------------------------------------------------
00001AAE  3200                    1153  CHECK0000       MOVE.W D0,D1      
00001AB0  C27C F000               1154                  AND.W   #$F000, D1      *Isolates the first 4 spaces
00001AB4  B27C 0000               1155                  CMP.W   #$0000, D1      *Checks if the first 4 spaces are 0000
00001AB8                          1156                  
00001AB8  6700 0010               1157                  BEQ     CHECKAABC       *If equal, then go check if it's ANDI, ADDI, BCHG and CMPI
00001ABC                          1158                  
00001ABC  C27C C000               1159                  AND.W   #$C000, D1      *Isolate the first 2 spaces
00001AC0  B27C 0000               1160                  CMP.W   #$0000, D1      *Check if the first 2 spaces are 00
00001AC4                          1161                  
00001AC4  6700 0044               1162                  BEQ     OPMOVE          *If true, it's MOVE
00001AC8                          1163                  
00001AC8  4E75                    1164                  RTS
00001ACA                          1165              
00001ACA  3200                    1166  CHECKAABC       MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001ACC  C27C 0100               1167                  AND.W   #$100, D1       *Isolate space 8
00001AD0  B27C 0100               1168                  CMP.W   #$100, D1       *Check if space 8 is 1
00001AD4                          1169                  
00001AD4  6700 0062               1170                  BEQ     OPBCHGR         *If yes, then it's BCHG (register)
00001AD8                          1171                  
00001AD8  3200                    1172                  MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001ADA  C27C 0800               1173                  AND.W   #$800, D1       *Isolate space 11
00001ADE  B27C 0800               1174                  CMP.W   #$800, D1       *Check if space 11 is 1
00001AE2                          1175                  
00001AE2  6700 0014               1176                  BEQ     CHECKCBD        *If yes, then check if CMPI or BCHG (data)
00001AE6                          1177                  
00001AE6  3200                    1178                  MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001AE8  C27C 0400               1179                  AND.W   #$400, D1       *Isolate space 10
00001AEC  B27C 0400               1180                  CMP.W   #$400, D1       *Check if space 10 is 1
00001AF0                          1181                  
00001AF0  6700 0090               1182                  BEQ     OPADDI          *If true, then it's ADDI
00001AF4                          1183                  
00001AF4  6000 00B6               1184                  BRA     OPANDI          *If not, then it's ANDI
00001AF8                          1185                  
00001AF8  3200                    1186  CHECKCBD        MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001AFA  C27C 0400               1187                  AND.W   #$400, D1       *Isolate space 10
00001AFE  B27C 0400               1188                  CMP.W   #$400, D1       *Check if space 10 is 1
00001B02                          1189  
00001B02  6700 0054               1190                  BEQ     OPCMPI          *If yes, then it's CMPI
00001B06                          1191  
00001B06  6000 0040               1192                  BRA     OPBCHGD         *If not, then it's BCHG (data)
00001B0A                          1193  
00001B0A  43F9 00003596           1194  OPMOVE          LEA     MOVEMESSAGE, A1 *Store the MOVE message
00001B10  183C 0001               1195                  MOVE.B  #$1, D4
00001B14  1E3C 0001               1196                  MOVE.B  #$1, D7
00001B18                          1197                  
00001B18  3200                    1198                  MOVE.W  D0, D1
00001B1A  C27C 3000               1199                  AND.W   #$3000, D1      *Isolate SIZE
00001B1E                          1200                  
00001B1E  B27C 1000               1201                  CMP.W   #$1000, D1      *Check if size is 01
00001B22  6700 05A0               1202                  BEQ     SIZEB           *If yes, it's a byte
00001B26                          1203                  
00001B26  B27C 3000               1204                  CMP.W   #$3000, D1      *Check if size is 11
00001B2A  6700 059E               1205                  BEQ     SIZEW           *If yes, it's a word
00001B2E                          1206                  
00001B2E  B27C 2000               1207                  CMP.W   #$2000, D1      *Check if size is 10
00001B32  6700 059C               1208                  BEQ     SIZEL           *If yes, it's a long
00001B36                          1209                  
00001B36  4E75                    1210                  RTS
00001B38                          1211  
00001B38  43F9 0000359B           1212  OPBCHGR         LEA     BCHGMESSAGE, A1 *Store the BCHG message
00001B3E  183C 0018               1213                  MOVE.B  #$18, D4
00001B42                          1214                  
00001B42  6000 0580               1215                  BRA     SIZEB           *When it's register, it's always byte
00001B46                          1216                  
00001B46  4E75                    1217                  RTS
00001B48                          1218                  
00001B48  43F9 0000359B           1219  OPBCHGD         LEA     BCHGMESSAGE, A1 *Store the BCHG message
00001B4E  183C 0024               1220                  MOVE.B  #$24, D4
00001B52                          1221                  
00001B52  6000 057C               1222                  BRA     SIZEL           *When data, it's always long
00001B56                          1223                  
00001B56  4E75                    1224                  RTS
00001B58                          1225                  
00001B58  43F9 000035A0           1226  OPCMPI          LEA     CMPIMESSAGE, A1 *Store the CMPI message
00001B5E  183C 0020               1227                  MOVE.B  #$20, D4
00001B62                          1228                  
00001B62  3200                    1229                  MOVE.W  D0, D1
00001B64  C27C 00C0               1230                  AND.W   #$C0, D1      *Isolate SIZE
00001B68                          1231                  
00001B68  B27C 0000               1232                  CMP.W   #$0, D1         *Check if size is 00
00001B6C  6700 0556               1233                  BEQ     SIZEB        *If yes, it's a byte
00001B70                          1234                  
00001B70  B27C 0040               1235                  CMP.W   #$40, D1      *Check if size is 01
00001B74  6700 0554               1236                  BEQ     SIZEW         *If yes, it's a word
00001B78                          1237                  
00001B78  B27C 0080               1238                  CMP.W   #$80, D1      *Check if size is 10
00001B7C  6700 0552               1239                  BEQ     SIZEL         *If yes, it's a long
00001B80                          1240                  
00001B80  4E75                    1241                  RTS
00001B82                          1242                  
00001B82  43F9 000035A5           1243  OPADDI          LEA     ADDIMESSAGE, A1 *Store the ADDI message
00001B88  183C 0006               1244                  MOVE.B  #$6, D4
00001B8C                          1245                  
00001B8C  3200                    1246                  MOVE.W  D0, D1
00001B8E  C27C 00C0               1247                  AND.W   #$C0, D1      *Isolate SIZE
00001B92                          1248                  
00001B92  B27C 0000               1249                  CMP.W   #$0, D1         *Check if size is 00
00001B96  6700 052C               1250                  BEQ     SIZEB        *If yes, it's a byte
00001B9A                          1251                  
00001B9A  B27C 0040               1252                  CMP.W   #$40, D1      *Check if size is 01
00001B9E  6700 052A               1253                  BEQ     SIZEW         *If yes, it's a word
00001BA2                          1254                  
00001BA2  B27C 0080               1255                  CMP.W   #$80, D1      *Check if size is 10
00001BA6  6700 0528               1256                  BEQ     SIZEL         *If yes, it's a long
00001BAA                          1257                  
00001BAA  4E75                    1258                  RTS
00001BAC                          1259                  
00001BAC  43F9 000035AA           1260  OPANDI          LEA     ANDIMESSAGE, A1 *Store the ANDI message
00001BB2  183C 0014               1261                  MOVE.B  #$14, D4
00001BB6                          1262                  
00001BB6  3200                    1263                  MOVE.W  D0, D1
00001BB8  C27C 00C0               1264                  AND.W   #$C0, D1      *Isolate SIZE
00001BBC                          1265                  
00001BBC  B27C 0000               1266                  CMP.W   #$0, D1         *Check if size is 00
00001BC0  6700 0502               1267                  BEQ     SIZEB        *If yes, it's a byte
00001BC4                          1268                  
00001BC4  B27C 0040               1269                  CMP.W   #$40, D1      *Check if size is 01
00001BC8  6700 0500               1270                  BEQ     SIZEW         *If yes, it's a word
00001BCC                          1271                  
00001BCC  B27C 0080               1272                  CMP.W   #$80, D1      *Check if size is 10
00001BD0  6700 04FE               1273                  BEQ     SIZEL         *If yes, it's a long
00001BD4                          1274                  
00001BD4  4E75                    1275                  RTS
00001BD6                          1276  
00001BD6                          1277  *---------------------------------------END_CHECK0000--------------------------------------------------------
00001BD6                          1278  
00001BD6                          1279  *-----------------------------------------------------------------------------------------------------
00001BD6                          1280  *                                            Subroutine: CHECK1110
00001BD6                          1281  *Description: Checks if opcode word starts with the binary 1110. If true it identifies if it is LSR/LSL,ASR/ASL,ROR/ROL
00001BD6                          1282  *----------------------------------------------------------------------------------------------------
00001BD6  3200                    1283  CHECK1110       MOVE.W  D0, D1
00001BD8  C27C F000               1284                  AND.W   #$F000, D1      *Isolates the first 4 spaces
00001BDC  B27C E000               1285                  CMP.W   #$E000, D1      *Checks if the first 4 spaces are 1110
00001BE0                          1286                  
00001BE0  6700 0004               1287                  BEQ     CHECKLAR        *If true, then it's LSR, ASR or ROR (and left versions)
00001BE4                          1288                  
00001BE4  4E75                    1289                  RTS
00001BE6                          1290                  
00001BE6  3200                    1291  CHECKLAR        MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001BE8  C27C 00C0               1292                  AND.W   #$C0, D1        *Isolate spaces 7-6
00001BEC  B27C 00C0               1293                  CMP.W   #$C0, D1        *Check if spaces 7-6 are 11
00001BF0                          1294                  
00001BF0  6700 0006               1295                  BEQ     CHECKLARM       *If true, then it's LSR, ASR or ROR (memory shift)
00001BF4                          1296                  
00001BF4  6000 0020               1297                  BRA     CHECKLARR       *If not, then it's LRS, ASR or ROR (register shift)
00001BF8                          1298                  
00001BF8  3200                    1299  CHECKLARM       MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001BFA  C27C 0600               1300                  AND.W   #$600, D1       *Isolate spaces 10-9
00001BFE  B27C 0200               1301                  CMP.W   #$200, D1       *Check if spaces 10-9 are 01
00001C02                          1302                  
00001C02  6700 0030               1303                  BEQ     CHECKLSM        *If true, it's LS (memory)
00001C06                          1304                  
00001C06  B27C 0000               1305                  CMP.W   #$0000, D1      *Check if spaces 10-9 are 00
00001C0A                          1306                  
00001C0A  6700 003A               1307                  BEQ     CHECKASM        *If true, it's AS (memory)
00001C0E                          1308                  
00001C0E  B27C 0600               1309                  CMP.W   #$600, D1       *Check if spaces 10-9 are 11
00001C12                          1310                  
00001C12  6700 0044               1311                  BEQ     CHECKROM        *If true, it's RO (memory)
00001C16                          1312                  
00001C16  3200                    1313  CHECKLARR       MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001C18  C27C 0018               1314                  AND.W   #$18, D1        *Isolate spaces 4-3
00001C1C  B27C 0008               1315                  CMP.W   #$8, D1         *Check if spaces 4-3 are 01
00001C20                          1316                  
00001C20  6700 0048               1317                  BEQ     CHECKLSRE       *If true, it's LS (register)
00001C24                          1318                  
00001C24  B27C 0000               1319                  CMP.W   #$0000, D1      *Check if spaces 4-3 are 00
00001C28                          1320                  
00001C28  6700 0052               1321                  BEQ     CHECKASRE       *If true, it's AS (register)
00001C2C                          1322                  
00001C2C  B27C 0018               1323                  CMP.W   #$18, D1        *Check if spaces 4-3 are 11
00001C30                          1324                  
00001C30  6700 005C               1325                  BEQ     CHECKRORE       *If true, it's RO (register)
00001C34                          1326                  
00001C34  3200                    1327  CHECKLSM        MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001C36  C27C 0100               1328                  AND.W   #$100, D1       *Isolate space 8 
00001C3A  B27C 0100               1329                  CMP.W   #$100, D1       *Check if space 8 is 1
00001C3E                          1330                  
00001C3E  6700 0060               1331                  BEQ     OPLSLM          *If true, it's LSL (memory)
00001C42                          1332                  
00001C42  6000 0096               1333                  BRA     OPLSRM          *If not, it's LSR (memory)
00001C46                          1334                  
00001C46  3200                    1335  CHECKASM        MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001C48  C27C 0100               1336                  AND.W   #$100, D1       *Isolate space 8 
00001C4C  B27C 0100               1337                  CMP.W   #$100, D1       *Check if space 8 is 1
00001C50                          1338                  
00001C50  6700 00C2               1339                  BEQ     OPASLM          *If true, it's ASL (memory)
00001C54                          1340                  
00001C54  6000 00DA               1341                  BRA     OPASRM          *If not, it's ASR (memory)
00001C58                          1342                  
00001C58  3200                    1343  CHECKROM        MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001C5A  C27C 0100               1344                  AND.W   #$100, D1       *Isolate space 8 
00001C5E  B27C 0100               1345                  CMP.W   #$100, D1       *Check if space 8 is 1
00001C62                          1346                  
00001C62  6700 0106               1347                  BEQ     OPROLM          *If true, it's ROL (memory)
00001C66                          1348                  
00001C66  6000 013C               1349                  BRA     OPRORM          *If not, it's ROR (memory)
00001C6A                          1350                  
00001C6A  3200                    1351  CHECKLSRE       MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001C6C  C27C 0100               1352                  AND.W   #$100, D1       *Isolate space 8 
00001C70  B27C 0100               1353                  CMP.W   #$100, D1       *Check if space 8 is 1
00001C74                          1354                  
00001C74  6700 003A               1355                  BEQ     OPLSLR          *If true, it's LSL (register)
00001C78                          1356                  
00001C78  6000 0070               1357                  BRA     OPLSRR          *If not, it's LSR (register)
00001C7C                          1358                  
00001C7C  3200                    1359  CHECKASRE       MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001C7E  C27C 0100               1360                  AND.W   #$100, D1       *Isolate space 8 
00001C82  B27C 0100               1361                  CMP.W   #$100, D1       *Check if space 8 is 1
00001C86                          1362                  
00001C86  6700 009C               1363                  BEQ     OPASLR          *If true, it's ASL (register)
00001C8A                          1364                  
00001C8A  6000 00B4               1365                  BRA     OPASRR          *If not, it's ASR (register)
00001C8E                          1366                  
00001C8E  3200                    1367  CHECKRORE       MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001C90  C27C 0100               1368                  AND.W   #$100, D1       *Isolate space 8 
00001C94  B27C 0100               1369                  CMP.W   #$100, D1       *Check if space 8 is 1
00001C98                          1370                  
00001C98  6700 00E0               1371                  BEQ     OPROLR          *If true, it's ROL (register)
00001C9C                          1372                  
00001C9C  6000 0116               1373                  BRA     OPRORR          *If not, it's ROR (register)
00001CA0                          1374                  
00001CA0  43F9 000035D1           1375  OPLSLM          LEA     LSLMESSAGE, A1 *Store the LSL (memory) message
00001CA6  183C 0025               1376                  MOVE.B  #$25, D4
00001CAA                          1377                  
00001CAA  6000 041E               1378                  BRA     SIZEW           *It's always a word when memory
00001CAE                          1379                  
00001CAE  4E75                    1380                  RTS
00001CB0                          1381                  
00001CB0  43F9 000035D1           1382  OPLSLR          LEA     LSLMESSAGE, A1 *Store the LSL (register) message
00001CB6  183C 0015               1383                  MOVE.B  #$15, D4
00001CBA                          1384                  
00001CBA  3200                    1385                  MOVE.W  D0, D1
00001CBC  C27C 00C0               1386                  AND.W   #$C0, D1      *Isolate SIZE
00001CC0                          1387                  
00001CC0  B27C 0000               1388                  CMP.W   #$0, D1         *Check if size is 00
00001CC4  6700 03FE               1389                  BEQ     SIZEB        *If yes, it's a byte
00001CC8                          1390                  
00001CC8  B27C 0040               1391                  CMP.W   #$40, D1      *Check if size is 01
00001CCC  6700 03FC               1392                  BEQ     SIZEW         *If yes, it's a word
00001CD0                          1393                  
00001CD0  B27C 0080               1394                  CMP.W   #$80, D1      *Check if size is 10
00001CD4  6700 03FA               1395                  BEQ     SIZEL         *If yes, it's a long
00001CD8                          1396                  
00001CD8  4E75                    1397                  RTS
00001CDA                          1398                  
00001CDA  43F9 000035D5           1399  OPLSRM          LEA     LSRMESSAGE, A1 *Store the LSR (memory) message
00001CE0  183C 0025               1400                  MOVE.B  #$25, D4
00001CE4                          1401                  
00001CE4  6000 03E4               1402                  BRA     SIZEW           *It's always a word when memory
00001CE8                          1403                  
00001CE8  4E75                    1404                  RTS
00001CEA                          1405                  
00001CEA  43F9 000035D5           1406  OPLSRR          LEA     LSRMESSAGE, A1 *Store the LSR (register) message
00001CF0  183C 0015               1407                  MOVE.B  #$15, D4
00001CF4                          1408                  
00001CF4  3200                    1409                  MOVE.W  D0, D1
00001CF6  C27C 00C0               1410                  AND.W   #$C0, D1      *Isolate SIZE
00001CFA                          1411                  
00001CFA  B27C 0000               1412                  CMP.W   #$0, D1         *Check if size is 00
00001CFE  6700 03C4               1413                  BEQ     SIZEB        *If yes, it's a byte
00001D02                          1414                  
00001D02  B27C 0040               1415                  CMP.W   #$40, D1      *Check if size is 01
00001D06  6700 03C2               1416                  BEQ     SIZEW         *If yes, it's a word
00001D0A                          1417                  
00001D0A  B27C 0080               1418                  CMP.W   #$80, D1      *Check if size is 10
00001D0E  6700 03C0               1419                  BEQ     SIZEL         *If yes, it's a long
00001D12                          1420                  
00001D12  4E75                    1421                  RTS
00001D14                          1422  
00001D14  43F9 000035CD           1423  OPASLM          LEA     ASLMESSAGE, A1 *Store the ASL (memory) message
00001D1A  183C 0026               1424                  MOVE.B  #$26, D4
00001D1E                          1425                  
00001D1E  6000 03AA               1426                  BRA     SIZEW           *It's always a word when memory
00001D22                          1427                  
00001D22  4E75                    1428                  RTS
00001D24                          1429  
00001D24  43F9 000035CD           1430  OPASLR          LEA     ASLMESSAGE, A1 *Store the ASL (register) message
00001D2A  183C 0016               1431                  MOVE.B  #$16, D4
00001D2E  4E75                    1432                  RTS
00001D30                          1433  
00001D30  43F9 000035C9           1434  OPASRM          LEA     ASRMESSAGE, A1 *Store the ASR (memory) message
00001D36  183C 0026               1435                  MOVE.B  #$26, D4
00001D3A                          1436                  
00001D3A  6000 038E               1437                  BRA     SIZEW           *It's always a word when memory
00001D3E                          1438                  
00001D3E  4E75                    1439                  RTS
00001D40                          1440  
00001D40  43F9 000035C9           1441  OPASRR          LEA     ASRMESSAGE, A1 *Store the ASR (register) message
00001D46  183C 0016               1442                  MOVE.B  #$16, D4
00001D4A                          1443                  
00001D4A  3200                    1444                  MOVE.W  D0, D1
00001D4C  C27C 00C0               1445                  AND.W   #$C0, D1      *Isolate SIZE
00001D50                          1446                  
00001D50  B27C 0000               1447                  CMP.W   #$0, D1         *Check if size is 00
00001D54  6700 036E               1448                  BEQ     SIZEB        *If yes, it's a byte
00001D58                          1449                  
00001D58  B27C 0040               1450                  CMP.W   #$40, D1      *Check if size is 01
00001D5C  6700 036C               1451                  BEQ     SIZEW         *If yes, it's a word
00001D60                          1452                  
00001D60  B27C 0080               1453                  CMP.W   #$80, D1      *Check if size is 10
00001D64  6700 036A               1454                  BEQ     SIZEL         *If yes, it's a long
00001D68                          1455                  
00001D68  4E75                    1456                  RTS
00001D6A                          1457  
00001D6A  43F9 000035DD           1458  OPROLM          LEA     ROLMESSAGE, A1 *Store the ROL (memory) message
00001D70  183C 0027               1459                  MOVE.B  #$27, D4
00001D74                          1460                  
00001D74  6000 0354               1461                  BRA     SIZEW           *It's always a word when memory
00001D78                          1462                  
00001D78  4E75                    1463                  RTS
00001D7A                          1464  
00001D7A  43F9 000035DD           1465  OPROLR          LEA     ROLMESSAGE, A1 *Store the ROL (register) message
00001D80  183C 0017               1466                  MOVE.B  #$17, D4
00001D84                          1467                  
00001D84  3200                    1468                  MOVE.W  D0, D1
00001D86  C27C 00C0               1469                  AND.W   #$C0, D1      *Isolate SIZE
00001D8A                          1470                  
00001D8A  B27C 0000               1471                  CMP.W   #$0, D1         *Check if size is 00
00001D8E  6700 0334               1472                  BEQ     SIZEB        *If yes, it's a byte
00001D92                          1473                  
00001D92  B27C 0040               1474                  CMP.W   #$40, D1      *Check if size is 01
00001D96  6700 0332               1475                  BEQ     SIZEW         *If yes, it's a word
00001D9A                          1476                  
00001D9A  B27C 0080               1477                  CMP.W   #$80, D1      *Check if size is 10
00001D9E  6700 0330               1478                  BEQ     SIZEL         *If yes, it's a long
00001DA2                          1479                  
00001DA2  4E75                    1480                  RTS
00001DA4                          1481  
00001DA4  43F9 000035D9           1482  OPRORM          LEA     RORMESSAGE, A1 *Store the ROR (memory) message
00001DAA  183C 0027               1483                  MOVE.B  #$27, D4
00001DAE                          1484                  
00001DAE  6000 031A               1485                  BRA     SIZEW           *It's always a word when memory
00001DB2                          1486                  
00001DB2  4E75                    1487                  RTS
00001DB4                          1488  
00001DB4  43F9 000035D9           1489  OPRORR          LEA     RORMESSAGE, A1 *Store the ROR (register) message
00001DBA  183C 0017               1490                  MOVE.B  #$17, D4
00001DBE                          1491                  
00001DBE  3200                    1492                  MOVE.W  D0, D1
00001DC0  C27C 00C0               1493                  AND.W   #$C0, D1      *Isolate SIZE
00001DC4                          1494                  
00001DC4  B27C 0000               1495                  CMP.W   #$0, D1         *Check if size is 00
00001DC8  6700 02FA               1496                  BEQ     SIZEB        *If yes, it's a byte
00001DCC                          1497                  
00001DCC  B27C 0040               1498                  CMP.W   #$40, D1      *Check if size is 01
00001DD0  6700 02F8               1499                  BEQ     SIZEW         *If yes, it's a word
00001DD4                          1500                  
00001DD4  B27C 0080               1501                  CMP.W   #$80, D1      *Check if size is 10
00001DD8  6700 02F6               1502                  BEQ     SIZEL         *If yes, it's a long
00001DDC                          1503                  
00001DDC  4E75                    1504                  RTS
00001DDE                          1505  
00001DDE                          1506  *---------------------------------------END_CHECK1110--------------------------------------------------------
00001DDE                          1507  
00001DDE                          1508  
00001DDE                          1509  *-----------------------------------------------------------------------------------------------------
00001DDE                          1510  *                                            Subroutine: CHECK1010
00001DDE                          1511  *Description: Checks if opcode word starts with the binary 1010. If true it identifies if it is CMP
00001DDE                          1512  *----------------------------------------------------------------------------------------------------
00001DDE  3200                    1513  CHECK1010       MOVE.W D0,D1 *restore the opcode to d1
00001DE0  C27C F000               1514                  AND.W #$F000,D1
00001DE4  B27C B000               1515                  CMP.W #$B000,D1
00001DE8  6700 0004               1516                  BEQ OPCMP
00001DEC  4E75                    1517                  RTS
00001DEE                          1518                  
00001DEE  43F9 00003565           1519  OPCMP           LEA CMPMESSAGE, A1
00001DF4  183C 0019               1520                  MOVE.B  #$19, D4
00001DF8                          1521                  
00001DF8  3200                    1522                  MOVE.W  D0, D1
00001DFA  C27C 01C0               1523                  AND.W   #$1C0, D1       *Isolate OPMODE part
00001DFE                          1524                  
00001DFE  B27C 0000               1525                  CMP.W   #$0, D1         *If OPMODE 000
00001E02  6700 02C0               1526                  BEQ     SIZEB           *If yes, it's byte 
00001E06                          1527                  
00001E06  B27C 0040               1528                  CMP.W   #$40, D1        *If OPMODE 001
00001E0A  6700 02BE               1529                  BEQ     SIZEW           *If yes, it's word
00001E0E                          1530                  
00001E0E  B27C 0080               1531                  CMP.W   #$80, D1        *If OPMODE 010
00001E12  6700 02BC               1532                  BEQ     SIZEL           *If yes, it's long
00001E16                          1533                  
00001E16  4E75                    1534                  RTS
00001E18                          1535  *---------------------------------------------- CHECK1011-----------------------------------------------
00001E18                          1536  
00001E18                          1537  
00001E18                          1538  *-----------------------------------------------------------------------------------------------------
00001E18                          1539  *                                        Subroutine: CHECK0111
00001E18                          1540  *Description: Checks if opcode word starts with the binary 0111. If true it identifies if it is MOVEQ
00001E18                          1541  *----------------------------------------------------------------------------------------------------
00001E18                          1542  
00001E18                          1543  CHECK0111       *Check for MOVEQ opcode
00001E18  3200                    1544                  MOVE.W D0,D1 *restore the opcode to d1
00001E1A  C27C F000               1545                  AND.W #$F000,D1
00001E1E  B27C 7000               1546                  CMP.W #$7000,D1
00001E22  6700 0004               1547                  BEQ OPMOVEQ
00001E26  4E75                    1548                  RTS
00001E28                          1549                  
00001E28  43F9 00003575           1550  OPMOVEQ         LEA MOVEQMESSAGE, A1
00001E2E  183C 0002               1551                  MOVE.B  #$2, D4
00001E32                          1552                  
00001E32  6000 029C               1553                  BRA     SIZEL           *It's always a long operation
00001E36                          1554                  
00001E36  4E75                    1555                  RTS
00001E38                          1556  
00001E38                          1557  *------------------------------------------------CHECK0111----------------------------------------------
00001E38                          1558  
00001E38                          1559  
00001E38                          1560  *-----------------------------------------------------------------------------------------------------
00001E38                          1561  *                                        Subroutine: CHECK0110
00001E38                          1562  *Description: Checks if opcode word starts with the binary 0110. If true it identifies if it is BCC
00001E38                          1563  *----------------------------------------------------------------------------------------------------
00001E38                          1564  
00001E38                          1565  CHECK0110       *Check for BCC opcode
00001E38  3200                    1566                  MOVE.W D0,D1 *restore the opcode to d1
00001E3A  C27C F000               1567                  AND.W #$F000,D1
00001E3E  B27C 6000               1568                  CMP.W #$6000,D1
00001E42  6700 0004               1569                  BEQ OPBXX
00001E46  4E75                    1570                  RTS
00001E48                          1571                  
00001E48                          1572  OPBXX          * check bit 11,10,9,8 for what bcc codition code                 
00001E48                          1573               
00001E48                          1574                  
00001E48                          1575                                   
00001E48                          1576                  *check if 11,10,9,8 is 1111
00001E48  3200                    1577                  MOVE.W D0,D1 *restore the opcode to d1
00001E4A  C27C 0F00               1578                  AND.W #$F00,D1 *isolate bit 11-8
00001E4E  B27C 0F00               1579                  CMP.W #$F00,D1                
00001E52  6700 0038               1580                  BEQ OPBLE 1111
00001E56                          1581  
00001E56                          1582              
00001E56  3200                    1583                  MOVE.W D0,D1
00001E58  C27C 0E00               1584                  AND.W #$E00,D1
00001E5C  B27C 0E00               1585                  CMP.W #$E00,D1
00001E60  6700 001E               1586                  BEQ OPBGT
00001E64                          1587                  
00001E64                          1588              
00001E64  3200                    1589                  MOVE.W D0,D1
00001E66  C27C 0400               1590                  AND.W #$400,D1
00001E6A  B27C 0400               1591                  CMP.W #$400,D1
00001E6E  6700 0004               1592                  BEQ OPBCC
00001E72                          1593                  
00001E72  4E75                    1594                  RTS
00001E74                          1595                  
00001E74  43F9 00003569           1596  OPBCC    LEA BCCMESSAGE, A1   
00001E7A  183C 0021               1597           MOVE.B  #$21, D4
00001E7E  4E75                    1598           RTS
00001E80                          1599           
00001E80  43F9 0000356D           1600  OPBGT    LEA BGTMESSAGE, A1 
00001E86  183C 0021               1601           MOVE.B  #$21, D4  
00001E8A  4E75                    1602           RTS
00001E8C                          1603  
00001E8C  43F9 00003571           1604  OPBLE    LEA BLEMESSAGE, A1   
00001E92  183C 0021               1605           MOVE.B  #$21, D4
00001E96  4E75                    1606           RTS
00001E98                          1607                  
00001E98                          1608  *------------------------------------------CHECK0110-------------------------------------------------------
00001E98                          1609  
00001E98                          1610  
00001E98                          1611  
00001E98                          1612  *-----------------------------------------------------------------------------------------------------
00001E98                          1613  *                                    Subroutine: CHECK1101
00001E98                          1614  *Description: Checks if opcode word starts with the binary 1101. If true it identifies if it is ADD or ADDA
00001E98                          1615  *----------------------------------------------------------------------------------------------------
00001E98                          1616  CHECK1101       *Check for ADD or ADDA
00001E98  3200                    1617                  MOVE.W D0,D1 *restore the opcode to d1
00001E9A  C27C F000               1618                  AND.W #$F000,D1
00001E9E  B27C D000               1619                  CMP.W #$D000, D1
00001EA2  6700 0004               1620                  BEQ CHECKADDADDA
00001EA6  4E75                    1621                  RTS
00001EA8  C27C 01C0               1622  CHECKADDADDA    AND.W #$1C0, D1
00001EAC  B27C 01C0               1623                  CMP.W #$1C0, D1
00001EB0  6700 0014               1624                  BEQ OPADDA
00001EB4                          1625              
00001EB4  3200                    1626                  MOVE.W D0,D1 *restore the opcode to d1          
00001EB6  C27C 00C0               1627                  AND.W #$C0,D1  *check for 011 in 8-6.
00001EBA  B27C 00C0               1628                  CMP.W #$C0,D1 
00001EBE  6700 0006               1629                  BEQ OPADDA
00001EC2                          1630                  
00001EC2  6000 0024               1631                  BRA OPADD
00001EC6                          1632                  
00001EC6  43F9 0000357B           1633  OPADDA          LEA ADDAMESSAGE,A1
00001ECC  183C 0005               1634                  MOVE.B  #$5, D4
00001ED0                          1635                  
00001ED0  3200                    1636                  MOVE.W  D0, D1
00001ED2  C27C 01C0               1637                  AND.W   #$1C0, D1       *Isolate OPMODE part
00001ED6  B27C 00C0               1638                  CMP.W   #$C0, D1         *If OPMODE 011
00001EDA  6700 01EE               1639                  BEQ     SIZEW           *If yes, it's word 
00001EDE                          1640                  
00001EDE  B27C 01C0               1641                  CMP.W   #$1C0, D1       *If OPMODE 111
00001EE2  6700 01EC               1642                  BEQ     SIZEL           *If yes, it's long
00001EE6                          1643                  
00001EE6  4E75                    1644                  RTS
00001EE8                          1645                  
00001EE8  43F9 00003580           1646  OPADD           LEA ADDMESSAGE,A1
00001EEE  183C 0004               1647                  MOVE.B  #$4, D4
00001EF2                          1648                  
00001EF2  3200                    1649                  MOVE.W  D0, D1
00001EF4  C27C 01C0               1650                  AND.W   #$1C0, D1       *Isolate OPMODE part
00001EF8  B27C 0000               1651                  CMP.W   #$0, D1         *If OPMODE 000
00001EFC  6700 01C6               1652                  BEQ     SIZEB           *If yes, it's byte 
00001F00                          1653                  
00001F00  B27C 0100               1654                  CMP.W   #$100, D1       *If OPMODE 100
00001F04  6700 01BE               1655                  BEQ     SIZEB           *If yes, it's byte
00001F08                          1656                  
00001F08  B27C 0040               1657                  CMP.W   #$40, D1        *If OPMODE 001
00001F0C  6700 01BC               1658                  BEQ     SIZEW           *If yes, it's word
00001F10                          1659                  
00001F10  B27C 0140               1660                  CMP.W   #$140, D1       *If OPMODE 101
00001F14  6700 01B4               1661                  BEQ     SIZEW           *If yes, it's word
00001F18                          1662                  
00001F18  B27C 0080               1663                  CMP.W   #$80, D1        *If OPMODE 010
00001F1C  6700 01B2               1664                  BEQ     SIZEL           *If yes, it's long
00001F20                          1665                  
00001F20  B27C 0180               1666                  CMP.W   #$180, D1       *If OPMODE 110
00001F24  6700 01AA               1667                  BEQ     SIZEL           *If yes, it's long
00001F28                          1668                  
00001F28  4E75                    1669                  RTS
00001F2A                          1670  *--------------------------------------------CHECK1101--------------------------------------------------
00001F2A                          1671  
00001F2A                          1672  
00001F2A                          1673  *-----------------------------------------------------------------------------------------------------
00001F2A                          1674  *                                        Subroutine: CHECK1001
00001F2A                          1675  *Description: Checks if opcode word starts with the binary 1001. If true it identifies if it is SUB or SUBA
00001F2A                          1676  *----------------------------------------------------------------------------------------------------
00001F2A                          1677  
00001F2A                          1678  CHECK1001       *Check for sub or suba
00001F2A                          1679  
00001F2A  3200                    1680                  MOVE.W D0,D1 *restore the opcode to d1
00001F2C  C27C F000               1681                  AND.W #$F000,D1
00001F30  B27C 9000               1682                  CMP.W #$9000, D1
00001F34  6700 0004               1683                  BEQ CHECKSUBSUBA
00001F38  4E75                    1684                  RTS
00001F3A                          1685                  
00001F3A  C27C 01C0               1686  CHECKSUBSUBA    AND.W #$1C0, D1
00001F3E  B27C 01C0               1687                  CMP.W #$1C0, D1
00001F42  6700 0014               1688                  BEQ OPSUBA
00001F46                          1689              
00001F46  3200                    1690                  MOVE.W D0,D1 *restore the opcode to d1          
00001F48  C27C 00C0               1691                  AND.W #$C0,D1  *check for 011 in 8-6.
00001F4C  B27C 00C0               1692                  CMP.W #$C0,D1 
00001F50  6700 0006               1693                  BEQ OPSUBA
00001F54  6000 0024               1694                  BRA OPSUB
00001F58  43F9 00003584           1695  OPSUBA          LEA SUBAMESSAGE,A1
00001F5E  183C 0008               1696                  MOVE.B  #$8, D4
00001F62                          1697                  
00001F62  3200                    1698                  MOVE.W  D0, D1
00001F64  C27C 01C0               1699                  AND.W   #$1C0, D1       *Isolate OPMODE part
00001F68  B27C 00C0               1700                  CMP.W   #$C0, D1         *If OPMODE 011
00001F6C  6700 015C               1701                  BEQ     SIZEW           *If yes, it's word 
00001F70                          1702                  
00001F70  B27C 01C0               1703                  CMP.W   #$1C0, D1       *If OPMODE 111
00001F74  6700 015A               1704                  BEQ     SIZEL           *If yes, it's long
00001F78                          1705                  
00001F78  4E75                    1706                  RTS
00001F7A                          1707                  
00001F7A  43F9 00003589           1708  OPSUB           LEA SUBMESSAGE,A1
00001F80  183C 0007               1709                  MOVE.B  #$7, D4
00001F84                          1710                  
00001F84  3200                    1711                  MOVE.W  D0, D1
00001F86  C27C 01C0               1712                  AND.W   #$1C0, D1       *Isolate OPMODE part
00001F8A  B27C 0000               1713                  CMP.W   #$0, D1         *If OPMODE 000
00001F8E  6700 0134               1714                  BEQ     SIZEB           *If yes, it's byte 
00001F92                          1715                  
00001F92  B27C 0100               1716                  CMP.W   #$100, D1       *If OPMODE 100
00001F96  6700 012C               1717                  BEQ     SIZEB           *If yes, it's byte
00001F9A                          1718                  
00001F9A  B27C 0040               1719                  CMP.W   #$40, D1        *If OPMODE 001
00001F9E  6700 012A               1720                  BEQ     SIZEW           *If yes, it's word
00001FA2                          1721                  
00001FA2  B27C 0140               1722                  CMP.W   #$140, D1       *If OPMODE 101
00001FA6  6700 0122               1723                  BEQ     SIZEW           *If yes, it's word
00001FAA                          1724                  
00001FAA  B27C 0080               1725                  CMP.W   #$80, D1        *If OPMODE 010
00001FAE  6700 0120               1726                  BEQ     SIZEL           *If yes, it's long
00001FB2                          1727                  
00001FB2  B27C 0180               1728                  CMP.W   #$180, D1       *If OPMODE 110
00001FB6  6700 0118               1729                  BEQ     SIZEL           *If yes, it's long
00001FBA                          1730                  
00001FBA  4E75                    1731                  RTS
00001FBC                          1732  *--------------------------------------------------------CHECK1001----------------------------------------
00001FBC                          1733  
00001FBC                          1734  
00001FBC                          1735  *-----------------------------------------------------------------------------------------------------
00001FBC                          1736  *                                    Subroutine: CHECK1000
00001FBC                          1737  *Description: Checks if opcode word starts with the binary 1000. If true it identifies if it is DIVS
00001FBC                          1738  *----------------------------------------------------------------------------------------------------
00001FBC                          1739  CHECK1000       *Check for DIVS word
00001FBC  3200                    1740                  MOVE.W D0,D1 *restore the opcode to d1
00001FBE  C27C F000               1741                  AND.W #$F000,D1
00001FC2  B27C 8000               1742                  CMP.W #$8000,D1
00001FC6  6700 0004               1743                  BEQ OPDIVS
00001FCA  4E75                    1744                  RTS
00001FCC                          1745                  
00001FCC  43F9 00003560           1746  OPDIVS          LEA DIVSMESSAGE,A1
00001FD2  183C 0010               1747                  MOVE.B  #$10, D4
00001FD6                          1748                  
00001FD6  6000 00F2               1749                  BRA     SIZEW           *It's always a word
00001FDA                          1750                  
00001FDA  4E75                    1751                  RTS
00001FDC                          1752                  
00001FDC                          1753  *--------------------------------------CHECK1000-----------------------------------------------------------
00001FDC                          1754  
00001FDC                          1755  *-----------------------------------------------------------------------------------------------------
00001FDC                          1756  *                                    Subroutine: CHECK0100
00001FDC                          1757  *Description: Checks if opcode word starts with the binary 0100. If true it identifies if it is JSR, RTS, NOP, MOVEM, LEA or CLR
00001FDC                          1758  *----------------------------------------------------------------------------------------------------
00001FDC                          1759  
00001FDC                          1760  CHECK0100   * check for JSR, RTS, NOP, MOVEM, LEA, CLR
00001FDC  3200                    1761                  MOVE.W D0,D1 *RESTORE OPCODE
00001FDE  C27C F000               1762                  AND.W #$F000,D1
00001FE2  B27C 4000               1763                  CMP.W #$4000,D1
00001FE6  6700 0004               1764                  BEQ CHECKOPS *check all posible ops in the 0100 category
00001FEA  4E75                    1765                  RTS
00001FEC                          1766  
00001FEC                          1767  CHECKOPS        *******Check for NOP and RTS since they are constant
00001FEC  3200                    1768                   MOVE.W D0,D1 *RESTORE OPCODE
00001FEE  B27C 4E75               1769                   CMP #$4E75,D1
00001FF2  6700 0096               1770                   BEQ OPRTS
00001FF6  B27C 4E71               1771                   CMP #$4E71,D1
00001FFA  6700 003C               1772                   BEQ OPNOP
00001FFE                          1773  
00001FFE                          1774                  
00001FFE                          1775                  
00001FFE                          1776                  *******Check for lea*******                
00001FFE  C27C 0100               1777                  AND.W #$100,D1  *mask every bit but the 8th
00002002  B27C 0100               1778                  CMP.W #$100, D1 *check if bit 8 is 1 
00002006  6700 0050               1779                  BEQ OPLEA
0000200A                          1780                  
0000200A  3200                    1781                  MOVE.W  D0, D1
0000200C  C27C 0800               1782                  AND.W   #$800, D1   *Isolate 11 bit
00002010  B27C 0000               1783                  CMP.W   #$0, D1
00002014  6700 0084               1784                  BEQ     OPCLR
00002018                          1785                  
00002018  3200                    1786                  MOVE.W  D0, D1
0000201A  C27C 0200               1787                  AND.W   #$200, D1   *Isolate 9 bit
0000201E  B27C 0000               1788                  CMP.W   #$0, D1
00002022  6700 0044               1789                  BEQ     OPMOVEM
00002026                          1790                  
00002026  3200                    1791                  MOVE.W  D0, D1
00002028  C27C 0038               1792                  AND.W   #$38, D1   *Isolate 5, 4 and 3 bits
0000202C  B27C 0110               1793                  CMP.W   #$110, D1
00002030  6600 0016               1794                  BNE     OPJSR
00002034                          1795                
00002034  6000 F0F2               1796                  BRA     INVALIDOPCODE
00002038                          1797                  
00002038                          1798   
00002038  43F9 000035BD           1799  OPNOP           LEA NOPMESSAGE,A1
0000203E  183C 0000               1800                  MOVE.B  #$0, D4
00002042  1E3C 0000               1801                  MOVE.B  #$0, D7
00002046  4E75                    1802                  RTS    
00002048                          1803  OPJSR
00002048  43F9 000035C1           1804                  LEA JSRMESSAGE,A1
0000204E  183C 0022               1805                  MOVE.B  #$22, D4
00002052  1E3C 0000               1806                  MOVE.B  #$0, D7
00002056  4E75                    1807                  RTS
00002058                          1808  OPLEA  
00002058  43F9 000035AF           1809                  LEA LEAMESSAGE,A1
0000205E  183C 0011               1810                  MOVE.B  #$11, D4
00002062                          1811                  
00002062  1E3C 0000               1812                  MOVE.B  #$0, D7
00002066  4E75                    1813                  RTS
00002068                          1814                  *BRA     SIZEL           *It's always long
00002068                          1815                  
00002068  43F9 000035B3           1816  OPMOVEM         LEA OPMOVEMMESSAGE,A1
0000206E  183C 0003               1817                  MOVE.B  #$3, D4
00002072                          1818                  
00002072  3200                    1819                  MOVE.W  D0, D1
00002074  C27C 0040               1820                  AND.W   #$40, D1       *Isolate SIZE part
00002078  B27C 0000               1821                  CMP.W   #$0, D1         *If SIZE 0
0000207C  6700 004C               1822                  BEQ     SIZEW           *If yes, it's word 
00002080                          1823                  
00002080  B27C 0040               1824                  CMP.W   #$40, D1       *If SIZE 1
00002084  6700 004A               1825                  BEQ     SIZEL           *If yes, it's long
00002088                          1826                  
00002088  4E75                    1827                  RTS
0000208A                          1828                  
0000208A  43F9 000035B9           1829  OPRTS           LEA RTSMESSAGE,A1
00002090  183C 0023               1830                  MOVE.B  #$23, D4
00002094  1E3C 0000               1831                  MOVE.B  #$0, D7
00002098  4E75                    1832                  RTS
0000209A                          1833                  
0000209A  43F9 000035C5           1834  OPCLR           LEA CLRMESSAGE,A1
000020A0  183C 0012               1835                  MOVE.B  #$12, D4
000020A4                          1836                  
000020A4  3200                    1837                  MOVE.W  D0, D1
000020A6  C27C 00C0               1838                  AND.W   #$C0, D1       *Isolate SIZE part
000020AA                          1839                  
000020AA  B27C 0000               1840                  CMP.W   #$0, D1         *If SIZE 0
000020AE  6700 0014               1841                  BEQ     SIZEB           *If yes, it's byte 
000020B2                          1842                  
000020B2  B27C 0040               1843                  CMP.W   #$40, D1       *If SIZE 1
000020B6  6700 0012               1844                  BEQ     SIZEW           *If yes, it's word
000020BA                          1845                  
000020BA  B27C 0080               1846                  CMP.W   #$80, D1       *If SIZE 1
000020BE  6700 0010               1847                  BEQ     SIZEL           *If yes, it's byte
000020C2                          1848                  
000020C2  4E75                    1849                  RTS
000020C4                          1850  *----------------------------------------CHECK0100-------------------------------------------------------
000020C4                          1851  
000020C4                          1852  
000020C4                          1853  *--------------------------------------------------------------------------------------------------------
000020C4                          1854  *                                Subroutines for size of OPCode
000020C4                          1855  * Description: Display following in D7: $0 if it's a byte opration, $1 if it's a word operation and $2 if
000020C4                          1856  *              it's a long operation.
000020C4                          1857  *--------------------------------------------------------------------------------------------------------
000020C4  1E3C 0001               1858  SIZEB           MOVE.B  #$1, D7
000020C8  4E75                    1859                  RTS
000020CA                          1860                  
000020CA  1E3C 0002               1861  SIZEW           MOVE.B  #$2, D7
000020CE  4E75                    1862                  RTS
000020D0                          1863                  
000020D0  1E3C 0003               1864  SIZEL           MOVE.B  #$3, D7
000020D4  4E75                    1865                  RTS
000020D6                          1866  *-------------------------------------OPCode sizes end---------------------------------------------------
000020D6                          1867  
000020D6                          1868  
000020D6                          1869  
000020D6                          1870  
000020D6                          1871  
000020D6                          1872  
000020D6                          1873  
000020D6                          1874  
000020D6                          1875  *-------------------------------------EA Code begins-----------------------------------------------------
000020D6  B83C 0000               1876  CHECKEAS        CMP.B   #$0, D4
000020DA  6700 00B2               1877                  BEQ     NOPEA
000020DE                          1878  
000020DE  B83C 0001               1879                  CMP.B   #$1, D4
000020E2  6700 00B6               1880                  BEQ     MOVEEA
000020E6                          1881                  
000020E6  B83C 0002               1882                  CMP.B   #$2, D4
000020EA  6700 0276               1883                  BEQ     MOVEQEA
000020EE                          1884                  
000020EE  B83C 0003               1885                  CMP.B   #$3, D4
000020F2  6700 02CC               1886                  BEQ     MOVEMEA
000020F6                          1887                  
000020F6  B83C 0004               1888                  CMP.B   #$4, D4
000020FA  6700 0456               1889                  BEQ     ADDEA
000020FE                          1890                  
000020FE  B83C 0005               1891                  CMP.B   #$5, D4
00002102  6700 063E               1892                  BEQ     ADDAEA
00002106                          1893                  
00002106  B83C 0006               1894                  CMP.B   #$6, D4
0000210A  6700 0768               1895                  BEQ     ADDIEA
0000210E                          1896  
0000210E  B83C 0007               1897                  CMP.B   #$7, D4
00002112  6700 084E               1898                  BEQ     SUBEA
00002116                          1899                  
00002116  B83C 0009               1900                  CMP.B   #$9, D4
0000211A  6700 0A36               1901                  BEQ     MULSEA
0000211E                          1902                  
0000211E  B83C 0010               1903                  CMP.B   #$10, D4
00002122  6700 0B44               1904                  BEQ     DIVUEA
00002126                          1905                  
00002126  B83C 0011               1906                  CMP.B   #$11, D4
0000212A  6700 0C52               1907                  BEQ     LEAEA
0000212E                          1908                  
0000212E  B83C 0012               1909                  CMP.B   #$12, D4
00002132  6700 0CC2               1910                  BEQ     CLREA
00002136                          1911                  
00002136  B83C 0013               1912                  CMP.B   #$13, D4
0000213A  6700 0D6E               1913                  BEQ     ANDEA
0000213E                          1914                  
0000213E  B83C 0015               1915                  CMP.B   #$15, D4
00002142  6700 0F3A               1916                  BEQ     LSREA
00002146                          1917                  
00002146  B83C 0016               1918                  CMP.B   #$16, D4
0000214A  6700 1014               1919                  BEQ     ASREA
0000214E                          1920                  
0000214E  B83C 0017               1921                  CMP.B   #$17, D4
00002152  6700 10EE               1922                  BEQ     ROREA
00002156                          1923                  
00002156  B83C 0019               1924                  CMP.B   #$19, D4
0000215A  6700 11C8               1925                  BEQ     CMPEA
0000215E                          1926                  
0000215E  B83C 0021               1927                  CMP.B   #$21, D4
00002162  6700 12F2               1928                  BEQ     BCCEA
00002166                          1929                  
00002166  B83C 0022               1930                  CMP.B   #$22, D4
0000216A  6700 1388               1931                  BEQ     JSREA
0000216E                          1932                  
0000216E  B83C 0023               1933                  CMP.B   #$23, D4
00002172  6700 0020               1934                  BEQ     RTSEA
00002176                          1935                  
00002176  B83C 0025               1936                  CMP.B   #$25, D4
0000217A  6700 0F4A               1937                  BEQ     LSMEA
0000217E                          1938                  
0000217E  B83C 0026               1939                  CMP.B   #$26, D4
00002182  6700 1024               1940                  BEQ     ASMEA
00002186                          1941                  
00002186  B83C 0027               1942                  CMP.B   #$27, D4
0000218A  6700 10FE               1943                  BEQ     ROMEA
0000218E                          1944                  
0000218E                          1945  
0000218E                          1946  
0000218E  1A3C 00FF               1947  NOPEA       MOVE.B  #-1, D5
00002192  4E75                    1948              RTS
00002194                          1949              
00002194  1A3C 00FF               1950  RTSEA       MOVE.B  #-1, D5
00002198  4E75                    1951              RTS
0000219A                          1952  
0000219A  2200                    1953  MOVEEA      MOVE.L  D0, D1
0000219C  C2BC 00000038           1954              AND.L   #$38, D1    *Isolate source mode
000021A2                          1955              
000021A2  B2BC 00000000           1956              CMP.L   #$0, D1     *Check if 000
000021A8  6700 0038               1957              BEQ     MOVEDATAREG
000021AC                          1958              
000021AC  B2BC 00000008           1959              CMP.L   #$8, D1     *Check if 001
000021B2  6700 0040               1960              BEQ     MOVEADDRREG
000021B6                          1961              
000021B6  B2BC 00000010           1962              CMP.L   #$10, D1    *Check if 010
000021BC  6700 0048               1963              BEQ     MOVEINADDRREG
000021C0                          1964              
000021C0  B2BC 00000018           1965              CMP.L   #$18, D1    *Check if 011
000021C6  6700 0050               1966              BEQ     MOVEPLUSADDRREG
000021CA                          1967              
000021CA  B2BC 00000020           1968              CMP.L   #$20, D1    *Check if 100
000021D0  6700 0058               1969              BEQ     MOVEMINUSADDRREG
000021D4                          1970              
000021D4  B2BC 00000038           1971              CMP.L   #$38, D1     *Check if 111
000021DA  6700 0060               1972              BEQ     MOVEADDRESSDATA
000021DE                          1973              
000021DE  6000 EF48               1974              BRA     INVALIDOPCODE
000021E2                          1975              
000021E2  2200                    1976  MOVEDATAREG MOVE.L  D0, D1
000021E4  C2BC 00000007           1977              AND.L   #$7, D1     *Isolate register
000021EA  2401                    1978              MOVE.L  D1, D2      *Move value of Dn
000021EC  1A3C 0000               1979              MOVE.B  #$0, D5     *Move type of source
000021F0                          1980              
000021F0  6000 00C8               1981              BRA     MOVEDEST
000021F4                          1982              
000021F4  2200                    1983  MOVEADDRREG MOVE.L  D0, D1
000021F6  C2BC 00000007           1984              AND.L   #$7, D1     *Isolate register
000021FC  2401                    1985              MOVE.L  D1, D2      *Move value of An
000021FE  1A3C 0001               1986              MOVE.B  #$1, D5     *Move type of source
00002202                          1987              
00002202  6000 00B6               1988              BRA     MOVEDEST
00002206                          1989              
00002206  2200                    1990  MOVEINADDRREG MOVE.L  D0, D1
00002208  C2BC 00000007           1991              AND.L   #$7, D1     *Isolate register
0000220E  2401                    1992              MOVE.L  D1, D2      *Move value of an
00002210  1A3C 0003               1993              MOVE.B  #$3, D5     *Move type of source
00002214                          1994              
00002214  6000 00A4               1995              BRA     MOVEDEST
00002218                          1996              
00002218  2200                    1997  MOVEPLUSADDRREG MOVE.L  D0, D1
0000221A  C2BC 00000007           1998              AND.L   #$7, D1     *Isolate register
00002220  2401                    1999              MOVE.L  D1, D2      *Move value of an
00002222  1A3C 0004               2000              MOVE.B  #$4, D5     *Move type of source
00002226                          2001              
00002226  6000 0092               2002              BRA     MOVEDEST
0000222A                          2003              
0000222A  2200                    2004  MOVEMINUSADDRREG MOVE.L  D0, D1
0000222C  C2BC 00000007           2005              AND.L   #$7, D1     *Isolate register
00002232  2401                    2006              MOVE.L  D1, D2      *Move value of an
00002234  1A3C 0005               2007              MOVE.B  #$5, D5     *Move type of source
00002238                          2008              
00002238  6000 0080               2009              BRA     MOVEDEST
0000223C                          2010              
0000223C  2200                    2011  MOVEADDRESSDATA MOVE.L  D0, D1
0000223E  C2BC 00000007           2012              AND.L   #$7, D1     *Isolate register
00002244                          2013              
00002244  B2BC 00000000           2014              CMP.L   #$0, D1     *Check if 000
0000224A  6700 001A               2015              BEQ     MOVEADDRW
0000224E                          2016              
0000224E  B2BC 00000001           2017              CMP.L   #$1, D1     *Check if 001
00002254  6700 001C               2018              BEQ     MOVEADDRL
00002258                          2019              
00002258  B2BC 00000004           2020              CMP.L   #$4, D1     *Check if 100
0000225E  6700 001E               2021              BEQ     MOVEDATA
00002262                          2022              
00002262  6000 EEC4               2023              BRA     INVALIDOPCODE
00002266                          2024              
00002266  3410                    2025  MOVEADDRW   MOVE.W  (A0),D2     *Move addr
00002268  1A3C 0006               2026              MOVE.B  #$6, D5     *Store type
0000226C  5488                    2027              ADDA.L  #$2, A0 
0000226E                          2028              
0000226E  6000 004A               2029              BRA     MOVEDEST
00002272                          2030  
00002272  2410                    2031  MOVEADDRL   MOVE.L  (A0),D2     *Move addr
00002274  1A3C 0007               2032              MOVE.B  #$7, D5     *Store type
00002278  5888                    2033              ADDA.L  #$4, A0 
0000227A                          2034              
0000227A  6000 003E               2035              BRA     MOVEDEST
0000227E                          2036              
0000227E  BE3C 0001               2037  MOVEDATA    CMP.B   #$1,D7     *Compare if the size is a byte  
00002282  6700 0012               2038              BEQ     MOVESIZEB
00002286                          2039      
00002286  BE3C 0002               2040              CMP.B   #$2,D7     *Compare if the size is a word 
0000228A  6700 0016               2041              BEQ     MOVESIZEW
0000228E                          2042      
0000228E  BE3C 0003               2043              CMP.B   #$3,D7     *Compare if the size is a long 
00002292  6700 001A               2044              BEQ     MOVESIZEL 
00002296                          2045  
00002296  3410                    2046  MOVESIZEB   MOVE.W  (A0),D2 
00002298  1A3C 0008               2047              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
0000229C  5488                    2048              ADDA.L  #$2, A0 
0000229E                          2049          
0000229E  6000 001A               2050              BRA     MOVEDEST    *Branches to destination
000022A2                          2051  
000022A2  3410                    2052  MOVESIZEW   MOVE.W  (A0),D2 
000022A4  1A3C 0008               2053              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
000022A8  5488                    2054              ADDA.L  #$2, A0 
000022AA                          2055          
000022AA  6000 000E               2056              BRA     MOVEDEST    *Branches to destination
000022AE                          2057  
000022AE  2410                    2058  MOVESIZEL   MOVE.L  (A0),D2 
000022B0  1A3C 0008               2059              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
000022B4  5888                    2060              ADDA.L  #$4, A0 
000022B6                          2061          
000022B6  6000 0002               2062              BRA     MOVEDEST    *Branches to destination
000022BA                          2063  
000022BA  3200                    2064  MOVEDEST    MOVE.W  D0, D1
000022BC  C27C 01C0               2065              AND.W   #$1C0, D1 *Moves hex value to D1 for Comparison 00000111000000
000022C0  B27C 0000               2066              CMP.W   #$0, D1   *Checks to see if the size is Dn(Data Register) 
000022C4  6700 0026               2067              BEQ     MOVEDATAREGD  *Goes to Dn Process 
000022C8                          2068          
000022C8  B27C 0080               2069              CMP.W   #$80, D1   *Checks (An)
000022CC  6700 0030               2070              BEQ     MOVEINADDRD
000022D0                          2071          
000022D0  B27C 0018               2072              CMP.W   #$18, D1 *Checks (An)+
000022D4  6700 003A               2073              BEQ     MOVEPOSTADDRD
000022D8                          2074          
000022D8  B27C 0020               2075              CMP.W   #$20, D1 *Checks -(An)
000022DC  6700 0044               2076              BEQ     MOVEPREADDRD
000022E0                          2077          
000022E0  B27C 01C0               2078              CMP.W   #$1C0, D1 *Checks Addressing Mode
000022E4  6700 004E               2079              BEQ     MOVEADDRD
000022E8                          2080              
000022E8  6000 EE3E               2081              BRA     INVALIDOPCODE
000022EC                          2082              
000022EC  3200                    2083  MOVEDATAREGD    MOVE.W  D0, D1
000022EE  C27C 0E00               2084                  AND.W   #$E00, D1   *Isolate register
000022F2  E081                    2085                  ASR.L   #8, D1
000022F4  E281                    2086                  ASR.L   #1, D1
000022F6  3601                    2087                  MOVE.W  D1, D3
000022F8  1C3C 0000               2088                  MOVE.B  #$0, D6
000022FC                          2089                  
000022FC  4E75                    2090                  RTS
000022FE                          2091                  
000022FE  3200                    2092  MOVEINADDRD     MOVE.W  D0, D1
00002300  C27C 0E00               2093                  AND.W   #$E00, D1   *Isolate register
00002304  E081                    2094                  ASR.L   #8, D1
00002306  E281                    2095                  ASR.L   #1, D1
00002308  3601                    2096                  MOVE.W  D1, D3
0000230A  1C3C 0001               2097                  MOVE.B  #$1, D6
0000230E                          2098                  
0000230E  4E75                    2099                  RTS
00002310                          2100                  
00002310  3200                    2101  MOVEPOSTADDRD   MOVE.W  D0, D1
00002312  C27C 0E00               2102                  AND.W   #$E00, D1   *Isolate register
00002316  E081                    2103                  ASR.L   #8, D1
00002318  E281                    2104                  ASR.L   #1, D1
0000231A  3601                    2105                  MOVE.W  D1, D3
0000231C  1C3C 0003               2106                  MOVE.B  #$3, D6
00002320                          2107                  
00002320  4E75                    2108                  RTS
00002322                          2109                  
00002322  3200                    2110  MOVEPREADDRD    MOVE.W  D0, D1
00002324  C27C 0E00               2111                  AND.W   #$E00, D1   *Isolate register
00002328  E081                    2112                  ASR.L   #8, D1
0000232A  E281                    2113                  ASR.L   #1, D1
0000232C  3601                    2114                  MOVE.W  D1, D3
0000232E  1C3C 0004               2115                  MOVE.B  #$4, D6
00002332                          2116                  
00002332  4E75                    2117                  RTS
00002334                          2118                  
00002334  3200                    2119  MOVEADDRD       MOVE.W  D0, D1
00002336  C27C 0E00               2120                  AND.W   #$E00, D1   *Isolate register
0000233A                          2121                  
0000233A  B27C 0000               2122                  CMP.W   #$0, D1     *Check if 000
0000233E  6700 000E               2123                  BEQ     MOVEADDRWD  
00002342                          2124                  
00002342  B27C 0200               2125                  CMP.W   #$200, D1     *Check if 001
00002346  6700 0010               2126                  BEQ     MOVEADDRLD  
0000234A                          2127                  
0000234A  6000 EDDC               2128                  BRA     INVALIDOPCODE
0000234E                          2129                  
0000234E  3610                    2130  MOVEADDRWD      MOVE.W  (A0), D3
00002350  1C3C 0006               2131                  MOVE.B  #$6, D6
00002354  5488                    2132                  ADDA.L  #$2, A0
00002356                          2133                  
00002356  4E75                    2134                  RTS
00002358                          2135                  
00002358  2610                    2136  MOVEADDRLD      MOVE.L  (A0), D3
0000235A  1C3C 0007               2137                  MOVE.B  #$7, D6
0000235E  5888                    2138                  ADDA.L  #$4, A0
00002360                          2139                  
00002360  4E75                    2140                  RTS
00002362                          2141  
00002362                          2142  
00002362                          2143  
00002362                          2144  
00002362                          2145  
00002362                          2146  
00002362                          2147  
00002362  2200                    2148  MOVEQEA         MOVE.L  D0, D1
00002364  C27C 00FF               2149                  AND.W   #$FF, D1    *Isolate data
00002368  3401                    2150                  MOVE.W  D1, D2
0000236A  1A3C 0008               2151                  MOVE.B  #$8, D5
0000236E                          2152                  
0000236E  2200                    2153                  MOVE.L  D0, D1
00002370  C27C 0E00               2154                  AND.W   #$E00, D1    *Isolate register
00002374  E081                    2155                  ASR.L   #8, D1
00002376  E281                    2156                  ASR.L   #1, D1
00002378  3601                    2157                  MOVE.W  D1, D3
0000237A  1C3C 0000               2158                  MOVE.B  #$0, D6
0000237E                          2159                  
0000237E  4E75                    2160                  RTS
00002380                          2161                  
00002380                          2162                  
00002380                          2163                  
00002380                          2164  registers       DS.L    16
000023C0                          2165                  
000023C0  2200                    2166  MOVEMEA         MOVE.L  D0, D1
000023C2  C27C 0400               2167                  AND.W   #$400, D1       *Isolate dr field 
000023C6                          2168                  
000023C6  B27C 0400               2169                  CMP.W   #$400, D1       *Check if it's 1
000023CA  6700 00C8               2170                  BEQ     MOVEMMR
000023CE                          2171                  
000023CE  6000 0002               2172                  BRA     MOVEMRM
000023D2                          2173                  
000023D2  3410                    2174  MOVEMRM         MOVE.W  (A0), D2
000023D4  5488                    2175                  ADDA.L  #$2, A0
000023D6  45F8 2380               2176                  LEA     registers, A2   *Store array
000023DA  7A10                    2177                  MOVE.L  #$10, D5
000023DC  7C00                    2178                  MOVE.L  #$0, D6     *Counter
000023DE  3202                    2179  MOVEMRLOOP      MOVE.W  D2, D1      *For editing
000023E0  C27C 0001               2180                  AND.W   #$1, D1
000023E4                          2181                  
000023E4  B27C 0001               2182                  CMP.W   #$1, D1
000023E8  6600 0016               2183                  BNE     MOVEMNOONES
000023EC                          2184                  
000023EC  15BC 0001 6000          2185                  MOVE.B  #$1, (A2, D6)   *Insert 1 to array
000023F2  5246                    2186                  ADD.W   #1, D6
000023F4  E242                    2187                  ASR.W   #$1, D2     *Shift to right
000023F6                          2188                  
000023F6  BC7C 0010               2189                  CMP.W   #16, D6
000023FA  66E2                    2190                  BNE     MOVEMRLOOP
000023FC                          2191                  
000023FC  6000 0016               2192                  BRA     MOVEMMDEST
00002400                          2193                  
00002400  15BC 0000 6000          2194  MOVEMNOONES     MOVE.B  #$0, (A2, D6)
00002406  5246                    2195                  ADD.W  #1, D6     *Add counter
00002408  E242                    2196                  ASR.W   #$1, D2     *Shift to right
0000240A                          2197                  
0000240A  BC7C 0010               2198                  CMP.W   #16, D6
0000240E  66CE                    2199                  BNE     MOVEMRLOOP
00002410                          2200                  
00002410  6000 0002               2201                  BRA     MOVEMMDEST
00002414                          2202                  
00002414  4246                    2203  MOVEMMDEST      CLR     D6
00002416  2200                    2204                  MOVE.L  D0, D1
00002418  C2BC 00000038           2205                  AND.L   #$38, D1    *Isolate source mode
0000241E                          2206              
0000241E  B2BC 00000010           2207                  CMP.L   #$10, D1    *Check if 010
00002424  6700 0018               2208                  BEQ     MOVEMINADDRREGD
00002428                          2209                  
00002428  B27C 0020               2210                  CMP.W   #$20, D1 *Checks -(An)
0000242C  6700 0020               2211                  BEQ     MOVEMPREADDRD
00002430                          2212              
00002430  B2BC 00000038           2213                  CMP.L   #$38, D1     *Check if 111
00002436  6700 0028               2214                  BEQ     MOVEMADDRESSD
0000243A                          2215                  
0000243A  6000 ECEC               2216                  BRA     INVALIDOPCODE
0000243E                          2217                  
0000243E  2200                    2218  MOVEMINADDRREGD MOVE.L  D0, D1
00002440  C2BC 00000007           2219                  AND.L   #$7, D1     *Isolate register
00002446  2601                    2220                  MOVE.L  D1, D3      *Move value of an
00002448  1C3C 0003               2221                  MOVE.B  #$3, D6     *Move type of dest
0000244C                          2222              
0000244C  4E75                    2223                  RTS
0000244E                          2224                  
0000244E  2200                    2225  MOVEMPREADDRD   MOVE.L  D0, D1
00002450  C2BC 00000007           2226                  AND.L   #$7, D1     *Isolate register
00002456  2601                    2227                  MOVE.L  D1, D3      *Move value of an
00002458  1C3C 0005               2228                  MOVE.B  #$5, D6     *Move type of dest
0000245C  7A11                    2229                  MOVE.L  #$11, D5    *flip mask
0000245E                          2230              
0000245E  4E75                    2231                  RTS
00002460                          2232              
00002460  2200                    2233  MOVEMADDRESSD   MOVE.L  D0, D1
00002462  C2BC 00000007           2234                  AND.L   #$7, D1     *Isolate register
00002468                          2235              
00002468  B2BC 00000000           2236                  CMP.L   #$0, D1     *Check if 000
0000246E  6700 0010               2237                  BEQ     MOVEMADDRWD
00002472                          2238              
00002472  B2BC 00000001           2239                  CMP.L   #$1, D1     *Check if 001
00002478  6700 0010               2240                  BEQ     MOVEMADDRLD
0000247C                          2241                  
0000247C  6000 ECAA               2242                  BRA     INVALIDOPCODE
00002480                          2243              
00002480  3610                    2244  MOVEMADDRWD     MOVE.W  (A0),D3     *Move addr
00002482  1C3C 0006               2245                  MOVE.B  #$6, D6     *Store type
00002486  5488                    2246                  ADDA.L  #$2, A0 
00002488                          2247              
00002488  4E75                    2248                  RTS
0000248A                          2249  
0000248A  2610                    2250  MOVEMADDRLD     MOVE.L  (A0),D3     *Move addr
0000248C  1C3C 0007               2251                  MOVE.B  #$7, D6     *Store type
00002490  5888                    2252                  ADDA.L  #$4, A0
00002492                          2253              
00002492  4E75                    2254                  RTS
00002494                          2255                  
00002494                          2256                  
00002494                          2257                  
00002494                          2258       
00002494  3610                    2259  MOVEMMR         MOVE.W  (A0), D3
00002496  5488                    2260                  ADDA.L  #$2, A0
00002498  45F8 2380               2261                  LEA     registers, A2   *Store array
0000249C  7C10                    2262                  MOVE.L  #$10, D6
0000249E  7A00                    2263                  MOVE.L  #$0, D5     *Counter
000024A0  3203                    2264  MOVEMRLOOPD     MOVE.W  D3, D1      *For editing
000024A2  C27C 0001               2265                  AND.W   #$1, D1
000024A6                          2266                  
000024A6  B27C 0001               2267                  CMP.W   #$1, D1
000024AA  6600 0016               2268                  BNE     MOVEMNOONE
000024AE                          2269                  
000024AE  15BC 0001 5000          2270                  MOVE.B  #$1, (A2, D5)   *Insert 1 to array
000024B4  5245                    2271                  ADD.W   #1, D5
000024B6  E243                    2272                  ASR.W   #$1, D3     *Shift to right
000024B8                          2273                  
000024B8  BA7C 0010               2274                  CMP.W   #16, D5
000024BC  66E2                    2275                  BNE     MOVEMRLOOPD
000024BE                          2276                  
000024BE  6000 0016               2277                  BRA     MOVEMRDEST
000024C2                          2278                  
000024C2  15BC 0000 5000          2279  MOVEMNOONE      MOVE.B  #$0, (A2, D5)
000024C8  5245                    2280                  ADD.W  #1, D5     *Add counter
000024CA  E243                    2281                  ASR.W   #$1, D3     *Shift to right
000024CC                          2282                  
000024CC  BA7C 0010               2283                  CMP.W   #16, D5
000024D0  66CE                    2284                  BNE     MOVEMRLOOPD
000024D2                          2285                  
000024D2  6000 0002               2286                  BRA     MOVEMRDEST
000024D6                          2287                  
000024D6  2200                    2288  MOVEMRDEST      MOVE.L  D0, D1
000024D8  C2BC 00000038           2289                  AND.L   #$38, D1    *Isolate source mode
000024DE                          2290              
000024DE  B2BC 00000010           2291                  CMP.L   #$10, D1    *Check if 010
000024E4  6700 001A               2292                  BEQ     MOVEMINADDRREG
000024E8                          2293                  
000024E8  B2BC 00000018           2294                  CMP.L   #$18, D1    *Check if 011
000024EE  6700 0020               2295                  BEQ     MOVEMPLUSADDRREG
000024F2                          2296              
000024F2  B2BC 00000038           2297                  CMP.L   #$38, D1     *Check if 111
000024F8  6700 0026               2298                  BEQ     MOVEMADDRESS
000024FC                          2299                  
000024FC  6000 EC2A               2300                  BRA     INVALIDOPCODE
00002500                          2301              
00002500  2200                    2302  MOVEMINADDRREG  MOVE.L  D0, D1
00002502  C2BC 00000007           2303                  AND.L   #$7, D1     *Isolate register
00002508  2401                    2304                  MOVE.L  D1, D2      *Move value of an
0000250A  1A3C 0003               2305                  MOVE.B  #$3, D5     *Move type of source
0000250E                          2306              
0000250E  4E75                    2307                  RTS 
00002510                          2308                  
00002510  2200                    2309  MOVEMPLUSADDRREG MOVE.L  D0, D1
00002512  C2BC 00000007           2310                  AND.L   #$7, D1     *Isolate register
00002518  2401                    2311                  MOVE.L  D1, D2      *Move value of an
0000251A  1A3C 0004               2312                  MOVE.B  #$4, D5     *Move type of source
0000251E                          2313              
0000251E  4E75                    2314                  RTS
00002520                          2315              
00002520  2200                    2316  MOVEMADDRESS    MOVE.L  D0, D1
00002522  C2BC 00000007           2317                  AND.L   #$7, D1     *Isolate register
00002528                          2318              
00002528  B2BC 00000000           2319                  CMP.L   #$0, D1     *Check if 000
0000252E  6700 000E               2320                  BEQ     MOVEMADDRW
00002532                          2321              
00002532  B2BC 00000001           2322                  CMP.L   #$1, D1     *Check if 001
00002538  6700 000E               2323                  BEQ     MOVEMADDRL
0000253C                          2324                  
0000253C  4E75                    2325                  RTS
0000253E                          2326              
0000253E  3410                    2327  MOVEMADDRW      MOVE.W  (A0),D2     *Move addr
00002540  1A3C 0006               2328                  MOVE.B  #$6, D5     *Store type
00002544  5488                    2329                  ADDA.L  #$2, A0 
00002546                          2330              
00002546  4E75                    2331                  RTS
00002548                          2332  
00002548  2410                    2333  MOVEMADDRL      MOVE.L  (A0),D2     *Move addr
0000254A  1A3C 0007               2334                  MOVE.B  #$7, D5     *Store type
0000254E  5888                    2335                  ADDA.L  #$4, A0
00002550                          2336              
00002550  4E75                    2337                  RTS
00002552                          2338  
00002552                          2339                  
00002552                          2340                  
00002552                          2341                  
00002552                          2342                  
00002552                          2343                  
00002552                          2344  
00002552                          2345                 
00002552                          2346                  
00002552                          2347                  
00002552                          2348                  
00002552                          2349                  
00002552                          2350                  
00002552  3200                    2351  ADDEA           MOVE.W  D0, D1
00002554  C27C 01C0               2352                  AND.W   #$1C0, D1     *Isolate opmode
00002558                          2353                  
00002558  B27C 0100               2354                  CMP.W   #$100, D1     *Check if < 100
0000255C  6D00 00B2               2355                  BLT     ADDEADN
00002560                          2356                  
00002560  6000 0002               2357                  BRA     ADDDNEA
00002564                          2358                  
00002564  3200                    2359  ADDDNEA         MOVE.W  D0, D1
00002566  C27C 0E00               2360                  AND.W   #$E00, D1   *Isolate register
0000256A  E081                    2361                  ASR.L   #8, D1
0000256C  E281                    2362                  ASR.L   #1, D1
0000256E  3401                    2363                  MOVE.W  D1, D2      *Move register to d2
00002570  1A3C 0000               2364                  MOVE.B  #$0, D5
00002574                          2365                  
00002574  6000 0002               2366                  BRA     ADDDNEADEST
00002578                          2367                  
00002578  2200                    2368  ADDDNEADEST     MOVE.L  D0, D1
0000257A  C2BC 00000038           2369                  AND.L   #$38, D1    *Isolate mode
00002580                          2370              
00002580  B2BC 00000010           2371                  CMP.L   #$10, D1    *Check if 010
00002586  6700 0024               2372                  BEQ     ADDINADDRREGD
0000258A                          2373              
0000258A  B2BC 00000018           2374                  CMP.L   #$18, D1    *Check if 011
00002590  6700 002A               2375                  BEQ     ADDPLUSADDRREGD
00002594                          2376              
00002594  B2BC 00000020           2377                  CMP.L   #$20, D1    *Check if 100
0000259A  6700 0030               2378                  BEQ     ADDMINUSADDRREGD
0000259E                          2379              
0000259E  B2BC 00000038           2380                  CMP.L   #$38, D1     *Check if 111
000025A4  6700 0036               2381                  BEQ     ADDADDRESSD
000025A8                          2382                  
000025A8  6000 EB7E               2383                  BRA     INVALIDOPCODE
000025AC                          2384                  
000025AC                          2385              
000025AC  2200                    2386  ADDINADDRREGD MOVE.L  D0, D1
000025AE  C2BC 00000007           2387              AND.L   #$7, D1     *Isolate register
000025B4  2601                    2388              MOVE.L  D1, D3      *Move value of an
000025B6  1C3C 0003               2389              MOVE.B  #$3, D6     *Move type of source
000025BA                          2390              
000025BA  4E75                    2391              RTS
000025BC                          2392              
000025BC  2200                    2393  ADDPLUSADDRREGD MOVE.L  D0, D1
000025BE  C2BC 00000007           2394              AND.L   #$7, D1     *Isolate register
000025C4  2601                    2395              MOVE.L  D1, D3      *Move value of an
000025C6  1C3C 0004               2396              MOVE.B  #$4, D6     *Move type of source
000025CA                          2397              
000025CA  4E75                    2398              RTS
000025CC                          2399              
000025CC  2200                    2400  ADDMINUSADDRREGD MOVE.L  D0, D1
000025CE  C2BC 00000007           2401              AND.L   #$7, D1     *Isolate register
000025D4  2601                    2402              MOVE.L  D1, D3      *Move value of an
000025D6  1C3C 0005               2403              MOVE.B  #$5, D6     *Move type of source
000025DA                          2404              
000025DA  4E75                    2405              RTS
000025DC                          2406              
000025DC  2200                    2407  ADDADDRESSD MOVE.L  D0, D1
000025DE  C2BC 00000007           2408              AND.L   #$7, D1     *Isolate register
000025E4                          2409              
000025E4  B2BC 00000000           2410              CMP.L   #$0, D1     *Check if 000
000025EA  6700 0010               2411              BEQ     ADDADDRWD
000025EE                          2412              
000025EE  B2BC 00000001           2413              CMP.L   #$1, D1     *Check if 001
000025F4  6700 0010               2414              BEQ     ADDADDRLD
000025F8                          2415              
000025F8  6000 EB2E               2416              BRA     INVALIDOPCODE
000025FC                          2417              
000025FC  3610                    2418  ADDADDRWD   MOVE.W  (A0),D3     *Move addr
000025FE  1C3C 0006               2419              MOVE.B  #$6, D6     *Store type
00002602  5488                    2420              ADDA.L  #$2, A0 
00002604                          2421              
00002604  4E75                    2422              RTS
00002606                          2423  
00002606  2610                    2424  ADDADDRLD   MOVE.L  (A0),D3     *Move addr
00002608  1C3C 0007               2425              MOVE.B  #$7, D6     *Store type
0000260C  5888                    2426              ADDA.L  #$4, A0
0000260E                          2427              
0000260E  4E75                    2428              RTS
00002610                          2429                  
00002610  2200                    2430  ADDEADN     MOVE.L  D0, D1
00002612  C2BC 00000038           2431              AND.L   #$38, D1    *Isolate source mode
00002618                          2432              
00002618  B2BC 00000000           2433              CMP.L   #$0, D1     *Check if 000
0000261E  6700 0038               2434              BEQ     ADDDATAREG
00002622                          2435              
00002622  B2BC 00000008           2436              CMP.L   #$8, D1     *Check if 001
00002628  6700 0040               2437              BEQ     ADDADDRREG
0000262C                          2438              
0000262C  B2BC 00000010           2439              CMP.L   #$10, D1    *Check if 010
00002632  6700 0048               2440              BEQ     ADDINADDRREG
00002636                          2441              
00002636  B2BC 00000018           2442              CMP.L   #$18, D1    *Check if 011
0000263C  6700 0050               2443              BEQ     ADDPLUSADDRREG
00002640                          2444              
00002640  B2BC 00000020           2445              CMP.L   #$20, D1    *Check if 100
00002646  6700 0058               2446              BEQ     ADDMINUSADDRREG
0000264A                          2447              
0000264A  B2BC 00000038           2448              CMP.L   #$38, D1     *Check if 111
00002650  6700 0060               2449              BEQ     ADDADDRESSDATA
00002654                          2450              
00002654  6000 EAD2               2451              BRA     INVALIDOPCODE
00002658                          2452                  
00002658  2200                    2453  ADDDATAREG  MOVE.L  D0, D1
0000265A  C2BC 00000007           2454              AND.L   #$7, D1     *Isolate register
00002660  2401                    2455              MOVE.L  D1, D2      *Move value of Dn
00002662  1A3C 0000               2456              MOVE.B  #$0, D5     *Move type of source
00002666                          2457              
00002666  6000 00C8               2458              BRA     ADDDNDEST
0000266A                          2459              
0000266A  2200                    2460  ADDADDRREG  MOVE.L  D0, D1
0000266C  C2BC 00000007           2461              AND.L   #$7, D1     *Isolate register
00002672  2401                    2462              MOVE.L  D1, D2      *Move value of An
00002674  1A3C 0001               2463              MOVE.B  #$1, D5     *Move type of source
00002678                          2464              
00002678  6000 00B6               2465              BRA     ADDDNDEST
0000267C                          2466              
0000267C  2200                    2467  ADDINADDRREG MOVE.L  D0, D1
0000267E  C2BC 00000007           2468              AND.L   #$7, D1     *Isolate register
00002684  2401                    2469              MOVE.L  D1, D2      *Move value of an
00002686  1A3C 0003               2470              MOVE.B  #$3, D5     *Move type of source
0000268A                          2471              
0000268A  6000 00A4               2472              BRA     ADDDNDEST
0000268E                          2473              
0000268E  2200                    2474  ADDPLUSADDRREG MOVE.L  D0, D1
00002690  C2BC 00000007           2475              AND.L   #$7, D1     *Isolate register
00002696  2401                    2476              MOVE.L  D1, D2      *Move value of an
00002698  1A3C 0004               2477              MOVE.B  #$4, D5     *Move type of source
0000269C                          2478              
0000269C  6000 0092               2479              BRA     ADDDNDEST
000026A0                          2480              
000026A0  2200                    2481  ADDMINUSADDRREG MOVE.L  D0, D1
000026A2  C2BC 00000007           2482              AND.L   #$7, D1     *Isolate register
000026A8  2401                    2483              MOVE.L  D1, D2      *Move value of an
000026AA  1A3C 0005               2484              MOVE.B  #$5, D5     *Move type of source
000026AE                          2485              
000026AE  6000 0080               2486              BRA     ADDDNDEST
000026B2                          2487              
000026B2  2200                    2488  ADDADDRESSDATA MOVE.L  D0, D1
000026B4  C2BC 00000007           2489              AND.L   #$7, D1     *Isolate register
000026BA                          2490              
000026BA  B2BC 00000000           2491              CMP.L   #$0, D1     *Check if 000
000026C0  6700 001A               2492              BEQ     ADDADDRW
000026C4                          2493              
000026C4  B2BC 00000001           2494              CMP.L   #$1, D1     *Check if 001
000026CA  6700 001C               2495              BEQ     ADDADDRL
000026CE                          2496              
000026CE  B2BC 00000004           2497              CMP.L   #$4, D1     *Check if 100
000026D4  6700 001E               2498              BEQ     ADDDATA
000026D8                          2499              
000026D8  6000 EA4E               2500              BRA     INVALIDOPCODE
000026DC                          2501              
000026DC  3410                    2502  ADDADDRW    MOVE.W  (A0),D2     *Move addr
000026DE  1A3C 0006               2503              MOVE.B  #$6, D5     *Store type
000026E2  5488                    2504              ADDA.L  #$2, A0 
000026E4                          2505              
000026E4  6000 004A               2506              BRA     ADDDNDEST
000026E8                          2507  
000026E8  2410                    2508  ADDADDRL    MOVE.L  (A0),D2     *Move addr
000026EA  1A3C 0007               2509              MOVE.B  #$7, D5     *Store type
000026EE  5888                    2510              ADDA.L  #$4, A0 
000026F0                          2511              
000026F0  6000 003E               2512              BRA     ADDDNDEST
000026F4                          2513              
000026F4  BE3C 0001               2514  ADDDATA     CMP.B   #$1,D7     *Compare if the size is a byte  
000026F8  6700 0012               2515              BEQ     ADDSIZEB
000026FC                          2516      
000026FC  BE3C 0002               2517              CMP.B   #$2,D7     *Compare if the size is a word 
00002700  6700 0016               2518              BEQ     ADDSIZEW
00002704                          2519      
00002704  BE3C 0003               2520              CMP.B   #$3,D7     *Compare if the size is a long 
00002708  6700 001A               2521              BEQ     ADDSIZEL 
0000270C                          2522  
0000270C  3410                    2523  ADDSIZEB    MOVE.W  (A0),D2 
0000270E  1A3C 0008               2524              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002712  5488                    2525              ADDA.L  #$2, A0 
00002714                          2526          
00002714  6000 001A               2527              BRA     ADDDNDEST *Branches to destination
00002718                          2528  
00002718  3410                    2529  ADDSIZEW    MOVE.W  (A0),D2 
0000271A  1A3C 0008               2530              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
0000271E  5488                    2531              ADDA.L  #$2, A0 
00002720                          2532          
00002720  6000 000E               2533              BRA     ADDDNDEST *Branches to destination
00002724                          2534  
00002724  2410                    2535  ADDSIZEL    MOVE.L  (A0),D2 
00002726  1A3C 0008               2536              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
0000272A  5888                    2537              ADDA.L  #$4, A0 
0000272C                          2538          
0000272C  6000 0002               2539              BRA     ADDDNDEST *Branches to destination
00002730                          2540              
00002730  3200                    2541  ADDDNDEST   MOVE.W  D0, D1
00002732  C27C 0E00               2542              AND.W   #$E00, D1   *Isolate register
00002736  E081                    2543              ASR.L   #8, D1
00002738  E281                    2544              ASR.L   #1, D1
0000273A  3601                    2545              MOVE.W  D1, D3      *Move register to d3
0000273C  1C3C 0000               2546              MOVE.B  #$0, D6
00002740                          2547              
00002740  4E75                    2548              RTS
00002742                          2549              *Check add size
00002742                          2550              
00002742                          2551              
00002742                          2552              
00002742                          2553              
00002742  2200                    2554  ADDAEA      MOVE.L  D0, D1
00002744  C2BC 00000038           2555              AND.L   #$38, D1    *Isolate source mode
0000274A                          2556              
0000274A  B2BC 00000000           2557              CMP.L   #$0, D1     *Check if 000
00002750  6700 0038               2558              BEQ     ADDADATAREG
00002754                          2559              
00002754  B2BC 00000008           2560              CMP.L   #$8, D1     *Check if 001
0000275A  6700 0040               2561              BEQ     ADDAADDRREG
0000275E                          2562              
0000275E  B2BC 00000010           2563              CMP.L   #$10, D1    *Check if 010
00002764  6700 0048               2564              BEQ     ADDAINADDRREG
00002768                          2565              
00002768  B2BC 00000018           2566              CMP.L   #$18, D1    *Check if 011
0000276E  6700 0050               2567              BEQ     ADDAPLUSADDRREG
00002772                          2568              
00002772  B2BC 00000020           2569              CMP.L   #$20, D1    *Check if 100
00002778  6700 0058               2570              BEQ     ADDAMINUSADDRREG
0000277C                          2571              
0000277C  B2BC 00000038           2572              CMP.L   #$38, D1     *Check if 111
00002782  6700 0060               2573              BEQ     ADDAADDRESSDATA
00002786                          2574              
00002786  6000 E9A0               2575              BRA     INVALIDOPCODE
0000278A                          2576              
0000278A  2200                    2577  ADDADATAREG MOVE.L  D0, D1
0000278C  C2BC 00000007           2578              AND.L   #$7, D1     *Isolate register
00002792  2401                    2579              MOVE.L  D1, D2      *Move value of Dn
00002794  1A3C 0000               2580              MOVE.B  #$0, D5     *Move type of source
00002798                          2581              
00002798  6000 00C8               2582              BRA     ADDADEST 
0000279C                          2583              
0000279C  2200                    2584  ADDAADDRREG MOVE.L  D0, D1
0000279E  C2BC 00000007           2585              AND.L   #$7, D1     *Isolate register
000027A4  2401                    2586              MOVE.L  D1, D2      *Move value of An
000027A6  1A3C 0001               2587              MOVE.B  #$1, D5     *Move type of source
000027AA                          2588              
000027AA  6000 00B6               2589              BRA     ADDADEST 
000027AE                          2590              
000027AE  2200                    2591  ADDAINADDRREG MOVE.L  D0, D1
000027B0  C2BC 00000007           2592              AND.L   #$7, D1     *Isolate register
000027B6  2401                    2593              MOVE.L  D1, D2      *Move value of an
000027B8  1A3C 0003               2594              MOVE.B  #$3, D5     *Move type of source
000027BC                          2595              
000027BC  6000 00A4               2596              BRA     ADDADEST 
000027C0                          2597              
000027C0  2200                    2598  ADDAPLUSADDRREG MOVE.L  D0, D1
000027C2  C2BC 00000007           2599              AND.L   #$7, D1     *Isolate register
000027C8  2401                    2600              MOVE.L  D1, D2      *Move value of an
000027CA  1A3C 0004               2601              MOVE.B  #$4, D5     *Move type of source
000027CE                          2602              
000027CE  6000 0092               2603              BRA     ADDADEST 
000027D2                          2604              
000027D2  2200                    2605  ADDAMINUSADDRREG MOVE.L  D0, D1
000027D4  C2BC 00000007           2606              AND.L   #$7, D1     *Isolate register
000027DA  2401                    2607              MOVE.L  D1, D2      *Move value of an
000027DC  1A3C 0005               2608              MOVE.B  #$5, D5     *Move type of source
000027E0                          2609              
000027E0  6000 0080               2610              BRA     ADDADEST 
000027E4                          2611              
000027E4  2200                    2612  ADDAADDRESSDATA MOVE.L  D0, D1
000027E6  C2BC 00000007           2613              AND.L   #$7, D1     *Isolate register
000027EC                          2614              
000027EC  B2BC 00000000           2615              CMP.L   #$0, D1     *Check if 000
000027F2  6700 001A               2616              BEQ     ADDAADDRW
000027F6                          2617              
000027F6  B2BC 00000001           2618              CMP.L   #$1, D1     *Check if 001
000027FC  6700 001C               2619              BEQ     ADDAADDRL
00002800                          2620              
00002800  B2BC 00000004           2621              CMP.L   #$4, D1     *Check if 100
00002806  6700 001E               2622              BEQ     ADDADATA
0000280A                          2623              
0000280A  6000 E91C               2624              BRA     INVALIDOPCODE
0000280E                          2625              
0000280E  3410                    2626  ADDAADDRW   MOVE.W  (A0),D2     *Move addr
00002810  1A3C 0006               2627              MOVE.B  #$6, D5     *Store type
00002814  5488                    2628              ADDA.L  #$2, A0 
00002816                          2629              
00002816  6000 004A               2630              BRA     ADDADEST 
0000281A                          2631  
0000281A  2410                    2632  ADDAADDRL   MOVE.L  (A0),D2     *Move addr
0000281C  1A3C 0007               2633              MOVE.B  #$7, D5     *Store type
00002820  5888                    2634              ADDA.L  #$4, A0 
00002822                          2635              
00002822  6000 003E               2636              BRA     ADDADEST 
00002826                          2637              
00002826  BE3C 0001               2638  ADDADATA    CMP.B   #$1,D7     *Compare if the size is a byte  
0000282A  6700 0012               2639              BEQ     ADDASIZEB
0000282E                          2640      
0000282E  BE3C 0002               2641              CMP.B   #$2,D7     *Compare if the size is a word 
00002832  6700 0016               2642              BEQ     ADDASIZEW
00002836                          2643      
00002836  BE3C 0003               2644              CMP.B   #$3,D7     *Compare if the size is a long 
0000283A  6700 001A               2645              BEQ     ADDASIZEL 
0000283E                          2646  
0000283E  3410                    2647  ADDASIZEB   MOVE.W  (A0),D2 
00002840  1A3C 0008               2648              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002844  5488                    2649              ADDA.L  #$2, A0 
00002846                          2650          
00002846  6000 001A               2651              BRA     ADDADEST *Branches to destination
0000284A                          2652  
0000284A  3410                    2653  ADDASIZEW   MOVE.W  (A0),D2 
0000284C  1A3C 0008               2654              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002850  5488                    2655              ADDA.L  #$2, A0 
00002852                          2656          
00002852  6000 000E               2657              BRA     ADDADEST *Branches to destination
00002856                          2658  
00002856  2410                    2659  ADDASIZEL   MOVE.L  (A0),D2 
00002858  1A3C 0008               2660              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
0000285C  5888                    2661              ADDA.L  #$4, A0 
0000285E                          2662          
0000285E  6000 0002               2663              BRA     ADDADEST 
00002862                          2664  
00002862  3200                    2665  ADDADEST    MOVE.W  D0, D1
00002864  C27C 0E00               2666              AND.W   #$E00, D1   *Isolate register
00002868  E081                    2667              ASR.L   #8, D1
0000286A  E281                    2668              ASR.L   #1, D1
0000286C  3601                    2669              MOVE.W  D1, D3
0000286E  1C3C 0001               2670              MOVE.B  #$1, D6
00002872                          2671              
00002872  4E75                    2672              RTS
00002874                          2673              
00002874                          2674              
00002874  BE3C 0001               2675  ADDIEA      CMP.B   #$1,D7     *Compare if the size is a byte  
00002878  6700 0012               2676              BEQ     ADDISIZEB
0000287C                          2677      
0000287C  BE3C 0002               2678              CMP.B   #$2,D7     *Compare if the size is a word 
00002880  6700 0016               2679              BEQ     ADDISIZEW
00002884                          2680      
00002884  BE3C 0003               2681              CMP.B   #$3,D7     *Compare if the size is a long 
00002888  6700 001A               2682              BEQ     ADDISIZEL 
0000288C                          2683  
0000288C  3410                    2684  ADDISIZEB   MOVE.W  (A0),D2 
0000288E  1A3C 0008               2685              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002892  5488                    2686              ADDA.L  #$2, A0 
00002894                          2687          
00002894  6000 001A               2688              BRA     ADDIDEST *Branches to destination
00002898                          2689  
00002898  3410                    2690  ADDISIZEW   MOVE.W  (A0),D2 
0000289A  1A3C 0008               2691              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
0000289E  5488                    2692              ADDA.L  #$2, A0 
000028A0                          2693          
000028A0  6000 000E               2694              BRA     ADDIDEST *Branches to destination
000028A4                          2695  
000028A4  2410                    2696  ADDISIZEL   MOVE.L  (A0),D2 
000028A6  1A3C 0008               2697              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
000028AA  5888                    2698              ADDA.L  #$4, A0
000028AC                          2699              
000028AC  6000 0002               2700              BRA     ADDIDEST
000028B0                          2701              
000028B0  2200                    2702  ADDIDEST    MOVE.L  D0, D1
000028B2  C2BC 00000038           2703              AND.L   #$38, D1    *Isolate source mode
000028B8                          2704              
000028B8  B2BC 00000000           2705              CMP.L   #$0, D1     *Check if 000
000028BE  6700 002E               2706              BEQ     ADDIDATAREG
000028C2                          2707              
000028C2  B2BC 00000010           2708              CMP.L   #$10, D1    *Check if 010
000028C8  6700 0034               2709              BEQ     ADDIINADDRREG
000028CC                          2710              
000028CC  B2BC 00000018           2711              CMP.L   #$18, D1    *Check if 011
000028D2  6700 003A               2712              BEQ     ADDIPLUSADDRREG
000028D6                          2713              
000028D6  B2BC 00000020           2714              CMP.L   #$20, D1    *Check if 100
000028DC  6700 0040               2715              BEQ     ADDIMINUSADDRREG
000028E0                          2716              
000028E0  B2BC 00000038           2717              CMP.L   #$38, D1     *Check if 111
000028E6  6700 0046               2718              BEQ     ADDIADDRESS
000028EA                          2719              
000028EA  6000 E83C               2720              BRA     INVALIDOPCODE
000028EE                          2721              
000028EE  2200                    2722  ADDIDATAREG MOVE.L  D0, D1
000028F0  C2BC 00000007           2723              AND.L   #$7, D1     *Isolate register
000028F6  2401                    2724              MOVE.L  D1, D2      *Move value of Dn
000028F8  1A3C 0000               2725              MOVE.B  #$0, D5     *Move type of source
000028FC                          2726              
000028FC  4E75                    2727              RTS
000028FE                          2728              
000028FE  2200                    2729  ADDIINADDRREG MOVE.L  D0, D1
00002900  C2BC 00000007           2730              AND.L   #$7, D1     *Isolate register
00002906  2401                    2731              MOVE.L  D1, D2      *Move value of an
00002908  1A3C 0003               2732              MOVE.B  #$3, D5     *Move type of source
0000290C                          2733              
0000290C  4E75                    2734              RTS
0000290E                          2735              
0000290E  2200                    2736  ADDIPLUSADDRREG MOVE.L  D0, D1
00002910  C2BC 00000007           2737              AND.L   #$7, D1     *Isolate register
00002916  2401                    2738              MOVE.L  D1, D2      *Move value of an
00002918  1A3C 0004               2739              MOVE.B  #$4, D5     *Move type of source
0000291C                          2740              
0000291C  4E75                    2741              RTS
0000291E                          2742              
0000291E  2200                    2743  ADDIMINUSADDRREG MOVE.L  D0, D1
00002920  C2BC 00000007           2744              AND.L   #$7, D1     *Isolate register
00002926  2401                    2745              MOVE.L  D1, D2      *Move value of an
00002928  1A3C 0005               2746              MOVE.B  #$5, D5     *Move type of source
0000292C                          2747              
0000292C  4E75                    2748              RTS
0000292E                          2749              
0000292E  2200                    2750  ADDIADDRESS MOVE.L  D0, D1
00002930  C2BC 00000007           2751              AND.L   #$7, D1     *Isolate register
00002936                          2752              
00002936  B2BC 00000000           2753              CMP.L   #$0, D1     *Check if 000
0000293C  6700 0010               2754              BEQ     ADDIADDRW
00002940                          2755              
00002940  B2BC 00000001           2756              CMP.L   #$1, D1     *Check if 001
00002946  6700 0010               2757              BEQ     ADDIADDRL
0000294A                          2758              
0000294A  6000 E7DC               2759              BRA     INVALIDOPCODE
0000294E                          2760              
0000294E  3410                    2761  ADDIADDRW   MOVE.W  (A0),D2     *Move addr
00002950  1A3C 0006               2762              MOVE.B  #$6, D5     *Store type
00002954  5488                    2763              ADDA.L  #$2, A0 
00002956                          2764              
00002956  4E75                    2765              RTS
00002958                          2766  
00002958  2410                    2767  ADDIADDRL   MOVE.L  (A0),D2     *Move addr
0000295A  1A3C 0007               2768              MOVE.B  #$7, D5     *Store type
0000295E  5888                    2769              ADDA.L  #$4, A0 
00002960                          2770              
00002960  4E75                    2771              RTS
00002962                          2772  
00002962                          2773  
00002962                          2774  
00002962                          2775              
00002962                          2776              
00002962  3200                    2777  SUBEA           MOVE.W  D0, D1
00002964  C27C 01C0               2778                  AND.W   #$1C0, D1     *Isolate opmode
00002968                          2779                  
00002968  B27C 0100               2780                  CMP.W   #$100, D1     *Check if < 100
0000296C  6D00 00B2               2781                  BLT     SUBEADN
00002970                          2782                  
00002970  6000 0002               2783                  BRA     SUBDNEA
00002974                          2784                  
00002974  3200                    2785  SUBDNEA         MOVE.W  D0, D1
00002976  C27C 0E00               2786                  AND.W   #$E00, D1   *Isolate register
0000297A  E081                    2787                  ASR.L   #8, D1
0000297C  E281                    2788                  ASR.L   #1, D1
0000297E  3401                    2789                  MOVE.W  D1, D2      *Move register to d2
00002980  1A3C 0000               2790                  MOVE.B  #$0, D5
00002984                          2791                  
00002984  6000 0002               2792                  BRA     SUBEADEST
00002988                          2793                  
00002988  2200                    2794  SUBEADEST       MOVE.L  D0, D1
0000298A  C2BC 00000038           2795                  AND.L   #$38, D1    *Isolate mode
00002990                          2796              
00002990  B2BC 00000010           2797                  CMP.L   #$10, D1    *Check if 010
00002996  6700 0024               2798                  BEQ     SUBINADDRREGD
0000299A                          2799              
0000299A  B2BC 00000018           2800                  CMP.L   #$18, D1    *Check if 011
000029A0  6700 002A               2801                  BEQ     SUBPLUSADDRREGD
000029A4                          2802              
000029A4  B2BC 00000020           2803                  CMP.L   #$20, D1    *Check if 100
000029AA  6700 0030               2804                  BEQ     SUBMINUSADDRREGD
000029AE                          2805              
000029AE  B2BC 00000038           2806                  CMP.L   #$38, D1     *Check if 111
000029B4  6700 0036               2807                  BEQ     SUBADDRESSD
000029B8                          2808                  
000029B8  6000 E76E               2809                  BRA     INVALIDOPCODE
000029BC                          2810                  
000029BC                          2811              
000029BC  2200                    2812  SUBINADDRREGD MOVE.L  D0, D1
000029BE  C2BC 00000007           2813              AND.L   #$7, D1     *Isolate register
000029C4  2601                    2814              MOVE.L  D1, D3      *Move value of an
000029C6  1C3C 0003               2815              MOVE.B  #$3, D6     *Move type of source
000029CA                          2816              
000029CA  4E75                    2817              RTS
000029CC                          2818              
000029CC  2200                    2819  SUBPLUSADDRREGD MOVE.L  D0, D1
000029CE  C2BC 00000007           2820              AND.L   #$7, D1     *Isolate register
000029D4  2601                    2821              MOVE.L  D1, D3      *Move value of an
000029D6  1C3C 0004               2822              MOVE.B  #$4, D6     *Move type of source
000029DA                          2823              
000029DA  4E75                    2824              RTS
000029DC                          2825              
000029DC  2200                    2826  SUBMINUSADDRREGD MOVE.L  D0, D1
000029DE  C2BC 00000007           2827              AND.L   #$7, D1     *Isolate register
000029E4  2601                    2828              MOVE.L  D1, D3      *Move value of an
000029E6  1C3C 0005               2829              MOVE.B  #$5, D6     *Move type of source
000029EA                          2830              
000029EA  4E75                    2831              RTS
000029EC                          2832              
000029EC  2200                    2833  SUBADDRESSD MOVE.L  D0, D1
000029EE  C2BC 00000007           2834              AND.L   #$7, D1     *Isolate register
000029F4                          2835              
000029F4  B2BC 00000000           2836              CMP.L   #$0, D1     *Check if 000
000029FA  6700 0010               2837              BEQ     SUBADDRWD
000029FE                          2838              
000029FE  B2BC 00000001           2839              CMP.L   #$1, D1     *Check if 001
00002A04  6700 0010               2840              BEQ     SUBADDRLD
00002A08                          2841              
00002A08  6000 E71E               2842              BRA     INVALIDOPCODE
00002A0C                          2843              
00002A0C  3610                    2844  SUBADDRWD   MOVE.W  (A0),D3     *Move addr
00002A0E  1C3C 0006               2845              MOVE.B  #$6, D6     *Store type
00002A12  5488                    2846              ADDA.L  #$2, A0 
00002A14                          2847              
00002A14  4E75                    2848              RTS
00002A16                          2849  
00002A16  2610                    2850  SUBADDRLD   MOVE.L  (A0),D3     *Move addr
00002A18  1C3C 0007               2851              MOVE.B  #$7, D6     *Store type
00002A1C  5888                    2852              ADDA.L  #$4, A0
00002A1E                          2853              
00002A1E  4E75                    2854              RTS
00002A20                          2855                  
00002A20  2200                    2856  SUBEADN     MOVE.L  D0, D1
00002A22  C2BC 00000038           2857              AND.L   #$38, D1    *Isolate source mode
00002A28                          2858              
00002A28  B2BC 00000000           2859              CMP.L   #$0, D1     *Check if 000
00002A2E  6700 0038               2860              BEQ     SUBDATAREG
00002A32                          2861              
00002A32  B2BC 00000008           2862              CMP.L   #$8, D1     *Check if 001
00002A38  6700 0040               2863              BEQ     SUBADDRREG
00002A3C                          2864              
00002A3C  B2BC 00000010           2865              CMP.L   #$10, D1    *Check if 010
00002A42  6700 0048               2866              BEQ     SUBINADDRREG
00002A46                          2867              
00002A46  B2BC 00000018           2868              CMP.L   #$18, D1    *Check if 011
00002A4C  6700 0050               2869              BEQ     SUBPLUSADDRREG
00002A50                          2870              
00002A50  B2BC 00000020           2871              CMP.L   #$20, D1    *Check if 100
00002A56  6700 0058               2872              BEQ     SUBMINUSADDRREG
00002A5A                          2873              
00002A5A  B2BC 00000038           2874              CMP.L   #$38, D1     *Check if 111
00002A60  6700 0060               2875              BEQ     SUBADDRESSDATA
00002A64                          2876              
00002A64  6000 E6C2               2877              BRA     INVALIDOPCODE
00002A68                          2878                  
00002A68  2200                    2879  SUBDATAREG  MOVE.L  D0, D1
00002A6A  C2BC 00000007           2880              AND.L   #$7, D1     *Isolate register
00002A70  2401                    2881              MOVE.L  D1, D2      *Move value of Dn
00002A72  1A3C 0000               2882              MOVE.B  #$0, D5     *Move type of source
00002A76                          2883              
00002A76  6000 00C8               2884              BRA     SUBDNDEST
00002A7A                          2885              
00002A7A  2200                    2886  SUBADDRREG  MOVE.L  D0, D1
00002A7C  C2BC 00000007           2887              AND.L   #$7, D1     *Isolate register
00002A82  2401                    2888              MOVE.L  D1, D2      *Move value of An
00002A84  1A3C 0001               2889              MOVE.B  #$1, D5     *Move type of source
00002A88                          2890              
00002A88  6000 00B6               2891              BRA     SUBDNDEST
00002A8C                          2892              
00002A8C  2200                    2893  SUBINADDRREG MOVE.L  D0, D1
00002A8E  C2BC 00000007           2894              AND.L   #$7, D1     *Isolate register
00002A94  2401                    2895              MOVE.L  D1, D2      *Move value of an
00002A96  1A3C 0003               2896              MOVE.B  #$3, D5     *Move type of source
00002A9A                          2897              
00002A9A  6000 00A4               2898              BRA     SUBDNDEST
00002A9E                          2899              
00002A9E  2200                    2900  SUBPLUSADDRREG MOVE.L  D0, D1
00002AA0  C2BC 00000007           2901              AND.L   #$7, D1     *Isolate register
00002AA6  2401                    2902              MOVE.L  D1, D2      *Move value of an
00002AA8  1A3C 0004               2903              MOVE.B  #$4, D5     *Move type of source
00002AAC                          2904              
00002AAC  6000 0092               2905              BRA     SUBDNDEST
00002AB0                          2906              
00002AB0  2200                    2907  SUBMINUSADDRREG MOVE.L  D0, D1
00002AB2  C2BC 00000007           2908              AND.L   #$7, D1     *Isolate register
00002AB8  2401                    2909              MOVE.L  D1, D2      *Move value of an
00002ABA  1A3C 0005               2910              MOVE.B  #$5, D5     *Move type of source
00002ABE                          2911              
00002ABE  6000 0080               2912              BRA     SUBDNDEST
00002AC2                          2913              
00002AC2  2200                    2914  SUBADDRESSDATA MOVE.L  D0, D1
00002AC4  C2BC 00000007           2915              AND.L   #$7, D1     *Isolate register
00002ACA                          2916              
00002ACA  B2BC 00000000           2917              CMP.L   #$0, D1     *Check if 000
00002AD0  6700 001A               2918              BEQ     SUBADDRW
00002AD4                          2919              
00002AD4  B2BC 00000001           2920              CMP.L   #$1, D1     *Check if 001
00002ADA  6700 001C               2921              BEQ     SUBADDRL
00002ADE                          2922              
00002ADE  B2BC 00000004           2923              CMP.L   #$4, D1     *Check if 100
00002AE4  6700 001E               2924              BEQ     SUBDATA
00002AE8                          2925              
00002AE8  6000 E63E               2926              BRA     INVALIDOPCODE
00002AEC                          2927              
00002AEC  3410                    2928  SUBADDRW    MOVE.W  (A0),D2     *Move addr
00002AEE  1A3C 0006               2929              MOVE.B  #$6, D5     *Store type
00002AF2  5488                    2930              ADDA.L  #$2, A0 
00002AF4                          2931              
00002AF4  6000 004A               2932              BRA     SUBDNDEST
00002AF8                          2933  
00002AF8  2410                    2934  SUBADDRL    MOVE.L  (A0),D2     *Move addr
00002AFA  1A3C 0007               2935              MOVE.B  #$7, D5     *Store type
00002AFE  5888                    2936              ADDA.L  #$4, A0 
00002B00                          2937              
00002B00  6000 003E               2938              BRA     SUBDNDEST
00002B04                          2939              
00002B04  BE3C 0001               2940  SUBDATA     CMP.B   #$1,D7     *Compare if the size is a byte  
00002B08  6700 0012               2941              BEQ     SUBSIZEB
00002B0C                          2942      
00002B0C  BE3C 0002               2943              CMP.B   #$2,D7     *Compare if the size is a word 
00002B10  6700 0016               2944              BEQ     SUBSIZEW
00002B14                          2945      
00002B14  BE3C 0003               2946              CMP.B   #$3,D7     *Compare if the size is a long 
00002B18  6700 001A               2947              BEQ     SUBSIZEL 
00002B1C                          2948  
00002B1C  3410                    2949  SUBSIZEB    MOVE.W  (A0),D2 
00002B1E  1A3C 0008               2950              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002B22  5488                    2951              ADDA.L  #$2, A0 
00002B24                          2952          
00002B24  6000 001A               2953              BRA     SUBDNDEST *Branches to destination
00002B28                          2954  
00002B28  3410                    2955  SUBSIZEW    MOVE.W  (A0),D2 
00002B2A  1A3C 0008               2956              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002B2E  5488                    2957              ADDA.L  #$2, A0 
00002B30                          2958          
00002B30  6000 000E               2959              BRA     SUBDNDEST *Branches to destination
00002B34                          2960  
00002B34  2410                    2961  SUBSIZEL    MOVE.L  (A0),D2 
00002B36  1A3C 0008               2962              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002B3A  5888                    2963              ADDA.L  #$4, A0 
00002B3C                          2964          
00002B3C  6000 0002               2965              BRA     SUBDNDEST *Branches to destination
00002B40                          2966              
00002B40  3200                    2967  SUBDNDEST   MOVE.W  D0, D1
00002B42  C27C 0E00               2968              AND.W   #$E00, D1   *Isolate register
00002B46  E081                    2969              ASR.L   #8, D1
00002B48  E281                    2970              ASR.L   #1, D1
00002B4A  3601                    2971              MOVE.W  D1, D3      *Move register to d3
00002B4C  1C3C 0000               2972              MOVE.B  #$0, D6
00002B50                          2973              
00002B50  4E75                    2974              RTS
00002B52                          2975  
00002B52                          2976  
00002B52                          2977  
00002B52  2200                    2978  MULSEA      MOVE.L  D0, D1
00002B54  C2BC 00000038           2979              AND.L   #$38, D1    *Isolate source mode
00002B5A                          2980              
00002B5A  B2BC 00000000           2981              CMP.L   #$0, D1     *Check if 000
00002B60  6700 002E               2982              BEQ     MULSDATAREG
00002B64                          2983              
00002B64  B2BC 00000010           2984              CMP.L   #$10, D1    *Check if 010
00002B6A  6700 0036               2985              BEQ     MULSINADDRREG
00002B6E                          2986              
00002B6E  B2BC 00000018           2987              CMP.L   #$18, D1    *Check if 011
00002B74  6700 003E               2988              BEQ     MULSPLUSADDRREG
00002B78                          2989              
00002B78  B2BC 00000020           2990              CMP.L   #$20, D1    *Check if 100
00002B7E  6700 0046               2991              BEQ     MULSMINUSADDRREG
00002B82                          2992              
00002B82  B2BC 00000038           2993              CMP.L   #$38, D1     *Check if 111
00002B88  6700 004E               2994              BEQ     MULSADDRESSDATA
00002B8C                          2995              
00002B8C  6000 E59A               2996              BRA     INVALIDOPCODE
00002B90                          2997                  
00002B90  2200                    2998  MULSDATAREG MOVE.L  D0, D1
00002B92  C2BC 00000007           2999              AND.L   #$7, D1     *Isolate register
00002B98  2401                    3000              MOVE.L  D1, D2      *Move value of Dn
00002B9A  1A3C 0000               3001              MOVE.B  #$0, D5     *Move type of source
00002B9E                          3002              
00002B9E  6000 00B6               3003              BRA     MULSDEST
00002BA2                          3004              
00002BA2  2200                    3005  MULSINADDRREG MOVE.L  D0, D1
00002BA4  C2BC 00000007           3006              AND.L   #$7, D1     *Isolate register
00002BAA  2401                    3007              MOVE.L  D1, D2      *Move value of an
00002BAC  1A3C 0003               3008              MOVE.B  #$3, D5     *Move type of source
00002BB0                          3009              
00002BB0  6000 00A4               3010              BRA     MULSDEST 
00002BB4                          3011             
00002BB4  2200                    3012  MULSPLUSADDRREG MOVE.L  D0, D1
00002BB6  C2BC 00000007           3013              AND.L   #$7, D1     *Isolate register
00002BBC  2401                    3014              MOVE.L  D1, D2      *Move value of an
00002BBE  1A3C 0004               3015              MOVE.B  #$4, D5     *Move type of source
00002BC2                          3016              
00002BC2  6000 0092               3017              BRA     MULSDEST 
00002BC6                          3018              
00002BC6  2200                    3019  MULSMINUSADDRREG MOVE.L  D0, D1
00002BC8  C2BC 00000007           3020              AND.L   #$7, D1     *Isolate register
00002BCE  2401                    3021              MOVE.L  D1, D2      *Move value of an
00002BD0  1A3C 0005               3022              MOVE.B  #$5, D5     *Move type of source
00002BD4                          3023              
00002BD4  6000 0080               3024              BRA     MULSDEST 
00002BD8                          3025              
00002BD8  2200                    3026  MULSADDRESSDATA MOVE.L  D0, D1
00002BDA  C2BC 00000007           3027              AND.L   #$7, D1     *Isolate register
00002BE0                          3028              
00002BE0  B2BC 00000000           3029              CMP.L   #$0, D1     *Check if 000
00002BE6  6700 001A               3030              BEQ     MULSADDRW
00002BEA                          3031              
00002BEA  B2BC 00000001           3032              CMP.L   #$1, D1     *Check if 001
00002BF0  6700 001C               3033              BEQ     MULSADDRL
00002BF4                          3034              
00002BF4  B2BC 00000004           3035              CMP.L   #$4, D1     *Check if 100
00002BFA  6700 001E               3036              BEQ     MULSDATA
00002BFE                          3037              
00002BFE  6000 E528               3038              BRA     INVALIDOPCODE
00002C02                          3039              
00002C02  3410                    3040  MULSADDRW   MOVE.W  (A0),D2     *Move addr
00002C04  1A3C 0006               3041              MOVE.B  #$6, D5     *Store type
00002C08  5488                    3042              ADDA.L  #$2, A0 
00002C0A                          3043              
00002C0A  6000 004A               3044              BRA     MULSDEST
00002C0E                          3045  
00002C0E  2410                    3046  MULSADDRL   MOVE.L  (A0),D2     *Move addr
00002C10  1A3C 0007               3047              MOVE.B  #$7, D5     *Store type
00002C14  5888                    3048              ADDA.L  #$4, A0 
00002C16                          3049              
00002C16  6000 003E               3050              BRA     MULSDEST
00002C1A                          3051              
00002C1A  BE3C 0001               3052  MULSDATA    CMP.B   #$1,D7     *Compare if the size is a byte  
00002C1E  6700 0012               3053              BEQ     MULSSIZEB
00002C22                          3054      
00002C22  BE3C 0002               3055              CMP.B   #$2,D7     *Compare if the size is a word 
00002C26  6700 0016               3056              BEQ     MULSSIZEW
00002C2A                          3057      
00002C2A  BE3C 0003               3058              CMP.B   #$3,D7     *Compare if the size is a long 
00002C2E  6700 001A               3059              BEQ     MULSSIZEL 
00002C32                          3060  
00002C32  3410                    3061  MULSSIZEB   MOVE.W  (A0),D2 
00002C34  1A3C 0008               3062              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002C38  5488                    3063              ADDA.L  #$2, A0 
00002C3A                          3064          
00002C3A  6000 001A               3065              BRA     MULSDEST *Branches to destination
00002C3E                          3066  
00002C3E  3410                    3067  MULSSIZEW   MOVE.W  (A0),D2 
00002C40  1A3C 0008               3068              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002C44  5488                    3069              ADDA.L  #$2, A0 
00002C46                          3070          
00002C46  6000 000E               3071              BRA     MULSDEST *Branches to destination
00002C4A                          3072  
00002C4A  2410                    3073  MULSSIZEL   MOVE.L  (A0),D2 
00002C4C  1A3C 0008               3074              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002C50  5888                    3075              ADDA.L  #$4, A0 
00002C52                          3076          
00002C52  6000 0002               3077              BRA     MULSDEST *Branches to destination
00002C56                          3078              
00002C56  3200                    3079  MULSDEST    MOVE.W  D0, D1
00002C58  C27C 0E00               3080              AND.W   #$E00, D1   *Isolate register
00002C5C  E081                    3081              ASR.L   #8, D1
00002C5E  E281                    3082              ASR.L   #1, D1
00002C60  3601                    3083              MOVE.W  D1, D3      *Move register to d3
00002C62  1C3C 0000               3084              MOVE.B  #$0, D6
00002C66                          3085              
00002C66  4E75                    3086              RTS
00002C68                          3087  
00002C68                          3088  
00002C68                          3089  
00002C68                          3090  
00002C68  2200                    3091  DIVUEA      MOVE.L  D0, D1
00002C6A  C2BC 00000038           3092              AND.L   #$38, D1    *Isolate source mode
00002C70                          3093              
00002C70  B2BC 00000000           3094              CMP.L   #$0, D1     *Check if 000
00002C76  6700 002E               3095              BEQ     DIVUDATAREG
00002C7A                          3096              
00002C7A  B2BC 00000010           3097              CMP.L   #$10, D1    *Check if 010
00002C80  6700 0036               3098              BEQ     DIVUINADDRREG
00002C84                          3099              
00002C84  B2BC 00000018           3100              CMP.L   #$18, D1    *Check if 011
00002C8A  6700 003E               3101              BEQ     DIVUPLUSADDRREG
00002C8E                          3102              
00002C8E  B2BC 00000020           3103              CMP.L   #$20, D1    *Check if 100
00002C94  6700 0046               3104              BEQ     DIVUMINUSADDRREG
00002C98                          3105              
00002C98  B2BC 00000038           3106              CMP.L   #$38, D1     *Check if 111
00002C9E  6700 004E               3107              BEQ     DIVUADDRESSDATA
00002CA2                          3108              
00002CA2  6000 E484               3109              BRA     INVALIDOPCODE
00002CA6                          3110                  
00002CA6  2200                    3111  DIVUDATAREG MOVE.L  D0, D1
00002CA8  C2BC 00000007           3112              AND.L   #$7, D1     *Isolate register
00002CAE  2401                    3113              MOVE.L  D1, D2      *Move value of Dn
00002CB0  1A3C 0000               3114              MOVE.B  #$0, D5     *Move type of source
00002CB4                          3115              
00002CB4  6000 00B6               3116              BRA     DIVUDEST
00002CB8                          3117              
00002CB8  2200                    3118  DIVUINADDRREG MOVE.L  D0, D1
00002CBA  C2BC 00000007           3119              AND.L   #$7, D1     *Isolate register
00002CC0  2401                    3120              MOVE.L  D1, D2      *Move value of an
00002CC2  1A3C 0003               3121              MOVE.B  #$3, D5     *Move type of source
00002CC6                          3122              
00002CC6  6000 00A4               3123              BRA     DIVUDEST 
00002CCA                          3124             
00002CCA  2200                    3125  DIVUPLUSADDRREG MOVE.L  D0, D1
00002CCC  C2BC 00000007           3126              AND.L   #$7, D1     *Isolate register
00002CD2  2401                    3127              MOVE.L  D1, D2      *Move value of an
00002CD4  1A3C 0004               3128              MOVE.B  #$4, D5     *Move type of source
00002CD8                          3129              
00002CD8  6000 0092               3130              BRA     DIVUDEST 
00002CDC                          3131              
00002CDC  2200                    3132  DIVUMINUSADDRREG MOVE.L  D0, D1
00002CDE  C2BC 00000007           3133              AND.L   #$7, D1     *Isolate register
00002CE4  2401                    3134              MOVE.L  D1, D2      *Move value of an
00002CE6  1A3C 0005               3135              MOVE.B  #$5, D5     *Move type of source
00002CEA                          3136              
00002CEA  6000 0080               3137              BRA     DIVUDEST 
00002CEE                          3138              
00002CEE  2200                    3139  DIVUADDRESSDATA MOVE.L  D0, D1
00002CF0  C2BC 00000007           3140              AND.L   #$7, D1     *Isolate register
00002CF6                          3141              
00002CF6  B2BC 00000000           3142              CMP.L   #$0, D1     *Check if 000
00002CFC  6700 001A               3143              BEQ     DIVUADDRW
00002D00                          3144              
00002D00  B2BC 00000001           3145              CMP.L   #$1, D1     *Check if 001
00002D06  6700 001C               3146              BEQ     DIVUADDRL
00002D0A                          3147              
00002D0A  B2BC 00000004           3148              CMP.L   #$4, D1     *Check if 100
00002D10  6700 001E               3149              BEQ     DIVUDATA
00002D14                          3150              
00002D14  6000 E412               3151              BRA     INVALIDOPCODE
00002D18                          3152              
00002D18  3410                    3153  DIVUADDRW   MOVE.W  (A0),D2     *Move addr
00002D1A  1A3C 0006               3154              MOVE.B  #$6, D5     *Store type
00002D1E  5488                    3155              ADDA.L  #$2, A0 
00002D20                          3156              
00002D20  6000 004A               3157              BRA     DIVUDEST
00002D24                          3158  
00002D24  2410                    3159  DIVUADDRL   MOVE.L  (A0),D2     *Move addr
00002D26  1A3C 0007               3160              MOVE.B  #$7, D5     *Store type
00002D2A  5888                    3161              ADDA.L  #$4, A0 
00002D2C                          3162              
00002D2C  6000 003E               3163              BRA     DIVUDEST
00002D30                          3164              
00002D30  BE3C 0001               3165  DIVUDATA    CMP.B   #$1,D7     *Compare if the size is a byte  
00002D34  6700 0012               3166              BEQ     DIVUSIZEB
00002D38                          3167      
00002D38  BE3C 0002               3168              CMP.B   #$2,D7     *Compare if the size is a word 
00002D3C  6700 0016               3169              BEQ     DIVUSIZEW
00002D40                          3170      
00002D40  BE3C 0003               3171              CMP.B   #$3,D7     *Compare if the size is a long 
00002D44  6700 001A               3172              BEQ     DIVUSIZEL 
00002D48                          3173  
00002D48  3410                    3174  DIVUSIZEB   MOVE.W  (A0),D2 
00002D4A  1A3C 0008               3175              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002D4E  5488                    3176              ADDA.L  #$2, A0 
00002D50                          3177          
00002D50  6000 001A               3178              BRA     DIVUDEST *Branches to destination
00002D54                          3179  
00002D54  3410                    3180  DIVUSIZEW   MOVE.W  (A0),D2 
00002D56  1A3C 0008               3181              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002D5A  5488                    3182              ADDA.L  #$2, A0 
00002D5C                          3183          
00002D5C  6000 000E               3184              BRA     DIVUDEST *Branches to destination
00002D60                          3185  
00002D60  2410                    3186  DIVUSIZEL   MOVE.L  (A0),D2 
00002D62  1A3C 0008               3187              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002D66  5888                    3188              ADDA.L  #$4, A0 
00002D68                          3189          
00002D68  6000 0002               3190              BRA     DIVUDEST *Branches to destination
00002D6C                          3191              
00002D6C  3200                    3192  DIVUDEST    MOVE.W  D0, D1
00002D6E  C27C 0E00               3193              AND.W   #$E00, D1   *Isolate register
00002D72  E081                    3194              ASR.L   #8, D1
00002D74  E281                    3195              ASR.L   #1, D1
00002D76  3601                    3196              MOVE.W  D1, D3      *Move register to d3
00002D78  1C3C 0000               3197              MOVE.B  #$0, D6
00002D7C                          3198              
00002D7C  4E75                    3199              RTS
00002D7E                          3200  
00002D7E                          3201  
00002D7E                          3202  
00002D7E  2200                    3203  LEAEA       MOVE.L  D0, D1
00002D80  C2BC 00000038           3204              AND.L   #$38, D1    *Isolate source mode
00002D86                          3205              
00002D86  B2BC 00000010           3206              CMP.L   #$10, D1    *Check if 010
00002D8C  6700 0010               3207              BEQ     LEAINADDRREG
00002D90                          3208              
00002D90  B2BC 00000038           3209              CMP.L   #$38, D1     *Check if 111
00002D96  6700 0018               3210              BEQ     LEAADDRESS
00002D9A                          3211              
00002D9A  6000 E38C               3212              BRA     INVALIDOPCODE
00002D9E                          3213              
00002D9E  2200                    3214  LEAINADDRREG MOVE.L  D0, D1
00002DA0  C2BC 00000007           3215              AND.L   #$7, D1     *Isolate register
00002DA6  2401                    3216              MOVE.L  D1, D2      *Move value of an
00002DA8  1A3C 0003               3217              MOVE.B  #$3, D5     *Move type of source
00002DAC                          3218              
00002DAC  6000 0036               3219              BRA     LEADEST 
00002DB0                          3220              
00002DB0  2200                    3221  LEAADDRESS  MOVE.L  D0, D1
00002DB2  C2BC 00000007           3222              AND.L   #$7, D1     *Isolate register
00002DB8                          3223              
00002DB8  B2BC 00000000           3224              CMP.L   #$0, D1     *Check if 000
00002DBE  6700 000C               3225              BEQ     LEAADDRW
00002DC2                          3226              
00002DC2  B2BC 00000001           3227              CMP.L   #$1, D1     *Check if 001
00002DC8  6700 000E               3228              BEQ     LEAADDRL
00002DCC                          3229              
00002DCC  3410                    3230  LEAADDRW    MOVE.W  (A0),D2     *Move addr
00002DCE  1A3C 0006               3231              MOVE.B  #$6, D5     *Store type
00002DD2  5488                    3232              ADDA.L  #$2, A0 
00002DD4                          3233              
00002DD4  6000 000E               3234              BRA     LEADEST 
00002DD8                          3235  
00002DD8  2410                    3236  LEAADDRL    MOVE.L  (A0),D2     *Move addr
00002DDA  1A3C 0007               3237              MOVE.B  #$7, D5     *Store type
00002DDE  5888                    3238              ADDA.L  #$4, A0
00002DE0                          3239              
00002DE0  6000 0002               3240              BRA     LEADEST 
00002DE4                          3241              
00002DE4  3200                    3242  LEADEST     MOVE.W  D0, D1
00002DE6  C27C 0E00               3243              AND.W   #$E00, D1   *Isolate register
00002DEA  E081                    3244              ASR.L   #8, D1
00002DEC  E281                    3245              ASR.L   #1, D1
00002DEE  3601                    3246              MOVE.W  D1, D3      *Move register to d3
00002DF0  1C3C 0001               3247              MOVE.B  #$1, D6
00002DF4                          3248              
00002DF4  4E75                    3249              RTS
00002DF6                          3250              
00002DF6                          3251              
00002DF6                          3252              
00002DF6  7CFF                    3253  CLREA       MOVE.L  #-1, D6
00002DF8  2200                    3254              MOVE.L  D0, D1
00002DFA  C2BC 00000038           3255              AND.L   #$38, D1    *Isolate source mode
00002E00                          3256              
00002E00  B2BC 00000000           3257              CMP.L   #$0, D1     *Check if 000
00002E06  6700 002E               3258              BEQ     CLRDATAREG
00002E0A                          3259              
00002E0A  B2BC 00000010           3260              CMP.L   #$10, D1    *Check if 010
00002E10  6700 0034               3261              BEQ     CLRINADDRREG
00002E14                          3262              
00002E14  B2BC 00000018           3263              CMP.L   #$18, D1    *Check if 011
00002E1A  6700 003A               3264              BEQ     CLRPLUSADDRREG
00002E1E                          3265              
00002E1E  B2BC 00000020           3266              CMP.L   #$20, D1    *Check if 100
00002E24  6700 0040               3267              BEQ     CLRMINUSADDRREG
00002E28                          3268              
00002E28  B2BC 00000038           3269              CMP.L   #$38, D1     *Check if 111
00002E2E  6700 0046               3270              BEQ     CLRADDRESS            
00002E32                          3271              
00002E32  6000 E2F4               3272              BRA     INVALIDOPCODE
00002E36                          3273  
00002E36  2200                    3274  CLRDATAREG  MOVE.L  D0, D1
00002E38  C2BC 00000007           3275              AND.L   #$7, D1     *Isolate register
00002E3E  2401                    3276              MOVE.L  D1, D2      *Move value of Dn
00002E40  1A3C 0000               3277              MOVE.B  #$0, D5     *Move type of source
00002E44                          3278              
00002E44  4E75                    3279              RTS
00002E46                          3280              
00002E46  2200                    3281  CLRINADDRREG MOVE.L  D0, D1
00002E48  C2BC 00000007           3282              AND.L   #$7, D1     *Isolate register
00002E4E  2401                    3283              MOVE.L  D1, D2      *Move value of an
00002E50  1A3C 0003               3284              MOVE.B  #$3, D5     *Move type of source
00002E54                          3285              
00002E54  4E75                    3286              RTS
00002E56                          3287             
00002E56  2200                    3288  CLRPLUSADDRREG MOVE.L  D0, D1
00002E58  C2BC 00000007           3289              AND.L   #$7, D1     *Isolate register
00002E5E  2401                    3290              MOVE.L  D1, D2      *Move value of an
00002E60  1A3C 0004               3291              MOVE.B  #$4, D5     *Move type of source
00002E64                          3292              
00002E64  4E75                    3293              RTS
00002E66                          3294              
00002E66  2200                    3295  CLRMINUSADDRREG MOVE.L  D0, D1
00002E68  C2BC 00000007           3296              AND.L   #$7, D1     *Isolate register
00002E6E  2401                    3297              MOVE.L  D1, D2      *Move value of an
00002E70  1A3C 0005               3298              MOVE.B  #$5, D5     *Move type of source
00002E74                          3299              
00002E74  4E75                    3300              RTS
00002E76                          3301              
00002E76  2200                    3302  CLRADDRESS  MOVE.L  D0, D1
00002E78  C2BC 00000007           3303              AND.L   #$7, D1     *Isolate register
00002E7E                          3304              
00002E7E  B2BC 00000000           3305              CMP.L   #$0, D1     *Check if 000
00002E84  6700 FE92               3306              BEQ     DIVUADDRW
00002E88                          3307              
00002E88  B2BC 00000001           3308              CMP.L   #$1, D1     *Check if 001
00002E8E  6700 FE94               3309              BEQ     DIVUADDRL
00002E92                          3310              
00002E92  6000 E294               3311              BRA     INVALIDOPCODE
00002E96                          3312              
00002E96  3410                    3313  CLRADDRW    MOVE.W  (A0),D2     *Move addr
00002E98  1A3C 0006               3314              MOVE.B  #$6, D5     *Store type
00002E9C  5488                    3315              ADDA.L  #$2, A0 
00002E9E                          3316              
00002E9E  4E75                    3317              RTS
00002EA0                          3318  
00002EA0  2410                    3319  CLRADDRL    MOVE.L  (A0),D2     *Move addr
00002EA2  1A3C 0007               3320              MOVE.B  #$7, D5     *Store type
00002EA6  5888                    3321              ADDA.L  #$4, A0
00002EA8                          3322              
00002EA8  4E75                    3323              RTS
00002EAA                          3324  
00002EAA                          3325  
00002EAA                          3326  
00002EAA                          3327  
00002EAA  3200                    3328  ANDEA           MOVE.W  D0, D1
00002EAC  C27C 01C0               3329                  AND.W   #$1C0, D1     *Isolate opmode
00002EB0                          3330                  
00002EB0  B27C 0100               3331                  CMP.W   #$100, D1     *Check if < 100
00002EB4  6D00 00B2               3332                  BLT     ANDEADN
00002EB8                          3333                  
00002EB8  6000 0002               3334                  BRA     ANDDNEA
00002EBC                          3335                  
00002EBC  3200                    3336  ANDDNEA         MOVE.W  D0, D1
00002EBE  C27C 0E00               3337                  AND.W   #$E00, D1   *Isolate register
00002EC2  E081                    3338                  ASR.L   #8, D1
00002EC4  E281                    3339                  ASR.L   #1, D1
00002EC6  3401                    3340                  MOVE.W  D1, D2      *Move register to d2
00002EC8  1A3C 0000               3341                  MOVE.B  #$0, D5
00002ECC                          3342                  
00002ECC  6000 0002               3343                  BRA     ANDEADEST
00002ED0                          3344                  
00002ED0  2200                    3345  ANDEADEST       MOVE.L  D0, D1
00002ED2  C2BC 00000038           3346                  AND.L   #$38, D1    *Isolate mode
00002ED8                          3347              
00002ED8  B2BC 00000010           3348                  CMP.L   #$10, D1    *Check if 010
00002EDE  6700 0024               3349                  BEQ     ANDINADDRREGD
00002EE2                          3350              
00002EE2  B2BC 00000018           3351                  CMP.L   #$18, D1    *Check if 011
00002EE8  6700 002A               3352                  BEQ     ANDPLUSADDRREGD
00002EEC                          3353              
00002EEC  B2BC 00000020           3354                  CMP.L   #$20, D1    *Check if 100
00002EF2  6700 0030               3355                  BEQ     ANDMINUSADDRREGD
00002EF6                          3356              
00002EF6  B2BC 00000038           3357                  CMP.L   #$38, D1     *Check if 111
00002EFC  6700 0036               3358                  BEQ     ANDADDRESSD
00002F00                          3359                  
00002F00  6000 E226               3360                  BRA     INVALIDOPCODE
00002F04                          3361                  
00002F04                          3362              
00002F04  2200                    3363  ANDINADDRREGD MOVE.L  D0, D1
00002F06  C2BC 00000007           3364              AND.L   #$7, D1     *Isolate register
00002F0C  2601                    3365              MOVE.L  D1, D3      *Move value of an
00002F0E  1C3C 0003               3366              MOVE.B  #$3, D6     *Move type of source
00002F12                          3367              
00002F12  4E75                    3368              RTS
00002F14                          3369              
00002F14  2200                    3370  ANDPLUSADDRREGD MOVE.L  D0, D1
00002F16  C2BC 00000007           3371              AND.L   #$7, D1     *Isolate register
00002F1C  2601                    3372              MOVE.L  D1, D3      *Move value of an
00002F1E  1C3C 0004               3373              MOVE.B  #$4, D6     *Move type of source
00002F22                          3374              
00002F22  4E75                    3375              RTS
00002F24                          3376              
00002F24  2200                    3377  ANDMINUSADDRREGD MOVE.L  D0, D1
00002F26  C2BC 00000007           3378              AND.L   #$7, D1     *Isolate register
00002F2C  2601                    3379              MOVE.L  D1, D3      *Move value of an
00002F2E  1C3C 0005               3380              MOVE.B  #$5, D6     *Move type of source
00002F32                          3381              
00002F32  4E75                    3382              RTS
00002F34                          3383              
00002F34  2200                    3384  ANDADDRESSD MOVE.L  D0, D1
00002F36  C2BC 00000007           3385              AND.L   #$7, D1     *Isolate register
00002F3C                          3386              
00002F3C  B2BC 00000000           3387              CMP.L   #$0, D1     *Check if 000
00002F42  6700 0010               3388              BEQ     ANDADDRWD
00002F46                          3389              
00002F46  B2BC 00000001           3390              CMP.L   #$1, D1     *Check if 001
00002F4C  6700 0010               3391              BEQ     ANDADDRLD
00002F50                          3392              
00002F50  6000 E1D6               3393              BRA     INVALIDOPCODE
00002F54                          3394              
00002F54  3610                    3395  ANDADDRWD   MOVE.W  (A0),D3     *Move addr
00002F56  1C3C 0006               3396              MOVE.B  #$6, D6     *Store type
00002F5A  5488                    3397              ADDA.L  #$2, A0 
00002F5C                          3398              
00002F5C  4E75                    3399              RTS
00002F5E                          3400  
00002F5E  2610                    3401  ANDADDRLD   MOVE.L  (A0),D3     *Move addr
00002F60  1C3C 0007               3402              MOVE.B  #$7, D6     *Store type
00002F64  5888                    3403              ADDA.L  #$4, A0
00002F66                          3404              
00002F66  4E75                    3405              RTS
00002F68                          3406                  
00002F68  2200                    3407  ANDEADN     MOVE.L  D0, D1
00002F6A  C2BC 00000038           3408              AND.L   #$38, D1    *Isolate source mode
00002F70                          3409              
00002F70  B2BC 00000000           3410              CMP.L   #$0, D1     *Check if 000
00002F76  6700 002E               3411              BEQ     ANDDATAREG
00002F7A                          3412              
00002F7A  B2BC 00000010           3413              CMP.L   #$10, D1    *Check if 010
00002F80  6700 0036               3414              BEQ     ANDINADDRREG
00002F84                          3415              
00002F84  B2BC 00000018           3416              CMP.L   #$18, D1    *Check if 011
00002F8A  6700 003E               3417              BEQ     ANDPLUSADDRREG
00002F8E                          3418              
00002F8E  B2BC 00000020           3419              CMP.L   #$20, D1    *Check if 100
00002F94  6700 0046               3420              BEQ     ANDMINUSADDRREG
00002F98                          3421              
00002F98  B2BC 00000038           3422              CMP.L   #$38, D1     *Check if 111
00002F9E  6700 004E               3423              BEQ     ANDADDRESSDATA
00002FA2                          3424              
00002FA2  6000 E184               3425              BRA     INVALIDOPCODE
00002FA6                          3426                  
00002FA6  2200                    3427  ANDDATAREG  MOVE.L  D0, D1
00002FA8  C2BC 00000007           3428              AND.L   #$7, D1     *Isolate register
00002FAE  2401                    3429              MOVE.L  D1, D2      *Move value of Dn
00002FB0  1A3C 0000               3430              MOVE.B  #$0, D5     *Move type of source
00002FB4                          3431              
00002FB4  6000 00B6               3432              BRA     ANDDNDEST
00002FB8                          3433              
00002FB8  2200                    3434  ANDINADDRREG MOVE.L  D0, D1
00002FBA  C2BC 00000007           3435              AND.L   #$7, D1     *Isolate register
00002FC0  2401                    3436              MOVE.L  D1, D2      *Move value of an
00002FC2  1A3C 0003               3437              MOVE.B  #$3, D5     *Move type of source
00002FC6                          3438              
00002FC6  6000 00A4               3439              BRA     ANDDNDEST
00002FCA                          3440              
00002FCA  2200                    3441  ANDPLUSADDRREG MOVE.L  D0, D1
00002FCC  C2BC 00000007           3442              AND.L   #$7, D1     *Isolate register
00002FD2  2401                    3443              MOVE.L  D1, D2      *Move value of an
00002FD4  1A3C 0004               3444              MOVE.B  #$4, D5     *Move type of source
00002FD8                          3445              
00002FD8  6000 0092               3446              BRA     ANDDNDEST
00002FDC                          3447              
00002FDC  2200                    3448  ANDMINUSADDRREG MOVE.L  D0, D1
00002FDE  C2BC 00000007           3449              AND.L   #$7, D1     *Isolate register
00002FE4  2401                    3450              MOVE.L  D1, D2      *Move value of an
00002FE6  1A3C 0005               3451              MOVE.B  #$5, D5     *Move type of source
00002FEA                          3452              
00002FEA  6000 0080               3453              BRA     ANDDNDEST
00002FEE                          3454              
00002FEE  2200                    3455  ANDADDRESSDATA MOVE.L  D0, D1
00002FF0  C2BC 00000007           3456              AND.L   #$7, D1     *Isolate register
00002FF6                          3457              
00002FF6  B2BC 00000000           3458              CMP.L   #$0, D1     *Check if 000
00002FFC  6700 001A               3459              BEQ     ANDADDRW
00003000                          3460              
00003000  B2BC 00000001           3461              CMP.L   #$1, D1     *Check if 001
00003006  6700 001C               3462              BEQ     ANDADDRL
0000300A                          3463              
0000300A  B2BC 00000004           3464              CMP.L   #$4, D1     *Check if 100
00003010  6700 001E               3465              BEQ     ANDDATA
00003014                          3466              
00003014  6000 E112               3467              BRA     INVALIDOPCODE
00003018                          3468              
00003018  3410                    3469  ANDADDRW    MOVE.W  (A0),D2     *Move addr
0000301A  1A3C 0006               3470              MOVE.B  #$6, D5     *Store type
0000301E  5488                    3471              ADDA.L  #$2, A0 
00003020                          3472              
00003020  6000 004A               3473              BRA     ANDDNDEST
00003024                          3474  
00003024  2410                    3475  ANDADDRL    MOVE.L  (A0),D2     *Move addr
00003026  1A3C 0007               3476              MOVE.B  #$7, D5     *Store type
0000302A  5888                    3477              ADDA.L  #$4, A0 
0000302C                          3478              
0000302C  6000 003E               3479              BRA     ANDDNDEST
00003030                          3480              
00003030  BE3C 0001               3481  ANDDATA     CMP.B   #$1,D7     *Compare if the size is a byte  
00003034  6700 0012               3482              BEQ     ANDSIZEB
00003038                          3483      
00003038  BE3C 0002               3484              CMP.B   #$2,D7     *Compare if the size is a word 
0000303C  6700 0016               3485              BEQ     ANDSIZEW
00003040                          3486      
00003040  BE3C 0003               3487              CMP.B   #$3,D7     *Compare if the size is a long 
00003044  6700 001A               3488              BEQ     ANDSIZEL 
00003048                          3489  
00003048  3410                    3490  ANDSIZEB    MOVE.W  (A0),D2 
0000304A  1A3C 0008               3491              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
0000304E  5488                    3492              ADDA.L  #$2, A0 
00003050                          3493          
00003050  6000 001A               3494              BRA     ANDDNDEST *Branches to destination
00003054                          3495  
00003054  3410                    3496  ANDSIZEW    MOVE.W  (A0),D2 
00003056  1A3C 0008               3497              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
0000305A  5488                    3498              ADDA.L  #$2, A0 
0000305C                          3499          
0000305C  6000 000E               3500              BRA     ANDDNDEST *Branches to destination
00003060                          3501  
00003060  2410                    3502  ANDSIZEL    MOVE.L  (A0),D2 
00003062  1A3C 0008               3503              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00003066  5888                    3504              ADDA.L  #$4, A0 
00003068                          3505          
00003068  6000 0002               3506              BRA     ANDDNDEST *Branches to destination
0000306C                          3507              
0000306C  3200                    3508  ANDDNDEST   MOVE.W  D0, D1
0000306E  C27C 0E00               3509              AND.W   #$E00, D1   *Isolate register
00003072  E081                    3510              ASR.L   #8, D1
00003074  E281                    3511              ASR.L   #1, D1
00003076  3601                    3512              MOVE.W  D1, D3      *Move register to d3
00003078  1C3C 0000               3513              MOVE.B  #$0, D6
0000307C                          3514              
0000307C  4E75                    3515              RTS
0000307E                          3516  
0000307E                          3517  
0000307E                          3518  
0000307E  3200                    3519  LSREA       MOVE.W  D0, D1
00003080  C27C 0020               3520              AND.W   #$20, D1    *Isolate ir
00003084                          3521              
00003084  B27C 0020               3522              CMP.W   #$20, D1    *Check if 1
00003088  6700 0006               3523              BEQ     LSRD
0000308C                          3524              
0000308C  6000 0016               3525              BRA     LSRC
00003090                          3526  
00003090  3200                    3527  LSRD        MOVE.W  D0, D1
00003092  C27C 0E00               3528              AND.W   #$E00, D1   *Isolate count/register
00003096  E081                    3529              ASR.L   #8, D1
00003098  E281                    3530              ASR.L   #1, D1
0000309A  3401                    3531              MOVE.W  D1, D2
0000309C  1A3C 0000               3532              MOVE.B  #$0, D5
000030A0                          3533              
000030A0  6000 0016               3534              BRA     LSRDEST
000030A4                          3535              
000030A4  3200                    3536  LSRC        MOVE.W  D0, D1
000030A6  C27C 0E00               3537              AND.W   #$E00, D1   *Isolate count/register
000030AA  E081                    3538              ASR.L   #8, D1
000030AC  E281                    3539              ASR.L   #1, D1
000030AE  3401                    3540              MOVE.W  D1, D2
000030B0  1A3C 0008               3541              MOVE.B  #$8, D5
000030B4                          3542              
000030B4  6000 0002               3543              BRA     LSRDEST 
000030B8                          3544              
000030B8  3200                    3545  LSRDEST     MOVE.W  D0, D1
000030BA  C27C 0007               3546              AND.W   #$7, D1     *Isolate register
000030BE  3601                    3547              MOVE.W  D1, D3
000030C0  1C3C 0000               3548              MOVE.B  #$0, D6
000030C4                          3549              
000030C4  4E75                    3550              RTS
000030C6                          3551              
000030C6  7CFF                    3552  LSMEA       MOVE.L  #-1, D6
000030C8  2200                    3553              MOVE.L  D0, D1
000030CA  C2BC 00000038           3554              AND.L   #$38, D1    *Isolate source mode
000030D0                          3555              
000030D0  B2BC 00000010           3556              CMP.L   #$10, D1    *Check if 010
000030D6  6700 0024               3557              BEQ     LSMINADDRREG
000030DA                          3558              
000030DA  B2BC 00000018           3559              CMP.L   #$18, D1    *Check if 011
000030E0  6700 002A               3560              BEQ     LSMPLUSADDRREG
000030E4                          3561              
000030E4  B2BC 00000020           3562              CMP.L   #$20, D1    *Check if 100
000030EA  6700 0030               3563              BEQ     LSMMINUSADDRREG
000030EE                          3564              
000030EE  B2BC 00000038           3565              CMP.L   #$38, D1     *Check if 111
000030F4  6700 0036               3566              BEQ     LSMADDRESS
000030F8                          3567              
000030F8  6000 E02E               3568              BRA     INVALIDOPCODE
000030FC                          3569              
000030FC  2200                    3570  LSMINADDRREG MOVE.L  D0, D1
000030FE  C2BC 00000007           3571              AND.L   #$7, D1     *Isolate register
00003104  2401                    3572              MOVE.L  D1, D2      *Move value of an
00003106  1A3C 0003               3573              MOVE.B  #$3, D5     *Move type of source
0000310A                          3574              
0000310A  4E75                    3575              RTS
0000310C                          3576              
0000310C  2200                    3577  LSMPLUSADDRREG MOVE.L  D0, D1
0000310E  C2BC 00000007           3578              AND.L   #$7, D1     *Isolate register
00003114  2401                    3579              MOVE.L  D1, D2      *Move value of an
00003116  1A3C 0004               3580              MOVE.B  #$4, D5     *Move type of source
0000311A                          3581              
0000311A  4E75                    3582              RTS
0000311C                          3583              
0000311C  2200                    3584  LSMMINUSADDRREG MOVE.L  D0, D1
0000311E  C2BC 00000007           3585              AND.L   #$7, D1     *Isolate register
00003124  2401                    3586              MOVE.L  D1, D2      *Move value of an
00003126  1A3C 0005               3587              MOVE.B  #$5, D5     *Move type of source
0000312A                          3588              
0000312A  4E75                    3589              RTS
0000312C                          3590              
0000312C  2200                    3591  LSMADDRESS  MOVE.L  D0, D1
0000312E  C2BC 00000007           3592              AND.L   #$7, D1     *Isolate register
00003134                          3593              
00003134  B2BC 00000000           3594              CMP.L   #$0, D1     *Check if 000
0000313A  6700 0010               3595              BEQ     LSMADDRW
0000313E                          3596              
0000313E  B2BC 00000001           3597              CMP.L   #$1, D1     *Check if 001
00003144  6700 0010               3598              BEQ     LSMADDRL
00003148                          3599              
00003148  6000 DFDE               3600              BRA     INVALIDOPCODE
0000314C                          3601              
0000314C  3410                    3602  LSMADDRW    MOVE.W  (A0),D2     *Move addr
0000314E  1A3C 0006               3603              MOVE.B  #$6, D5     *Store type
00003152  5488                    3604              ADDA.L  #$2, A0 
00003154                          3605              
00003154  4E75                    3606              RTS
00003156                          3607  
00003156  2410                    3608  LSMADDRL    MOVE.L  (A0),D2     *Move addr
00003158  1A3C 0007               3609              MOVE.B  #$7, D5     *Store type
0000315C  5888                    3610              ADDA.L  #$4, A0
0000315E                          3611              
0000315E  4E75                    3612              RTS
00003160                          3613              
00003160                          3614              
00003160                          3615              
00003160  3200                    3616  ASREA       MOVE.W  D0, D1
00003162  C27C 0020               3617              AND.W   #$20, D1    *Isolate ir
00003166                          3618              
00003166  B27C 0020               3619              CMP.W   #$20, D1    *Check if 1
0000316A  6700 0006               3620              BEQ     ASRD
0000316E                          3621              
0000316E  6000 0016               3622              BRA     ASRC
00003172                          3623  
00003172  3200                    3624  ASRD        MOVE.W  D0, D1
00003174  C27C 0E00               3625              AND.W   #$E00, D1   *Isolate count/register
00003178  E081                    3626              ASR.L   #8, D1
0000317A  E281                    3627              ASR.L   #1, D1
0000317C  3401                    3628              MOVE.W  D1, D2
0000317E  1A3C 0000               3629              MOVE.B  #$0, D5
00003182                          3630              
00003182  6000 0016               3631              BRA     ASRDEST
00003186                          3632              
00003186  3200                    3633  ASRC        MOVE.W  D0, D1
00003188  C27C 0E00               3634              AND.W   #$E00, D1   *Isolate count/register
0000318C  E081                    3635              ASR.L   #8, D1
0000318E  E281                    3636              ASR.L   #1, D1
00003190  3401                    3637              MOVE.W  D1, D2
00003192  1A3C 0008               3638              MOVE.B  #$8, D5
00003196                          3639              
00003196  6000 0002               3640              BRA     ASRDEST 
0000319A                          3641              
0000319A  3200                    3642  ASRDEST     MOVE.W  D0, D1
0000319C  C27C 0007               3643              AND.W   #$7, D1     *Isolate register
000031A0  3601                    3644              MOVE.W  D1, D3
000031A2  1C3C 0000               3645              MOVE.B  #$0, D6
000031A6                          3646              
000031A6  4E75                    3647              RTS
000031A8                          3648              
000031A8  7CFF                    3649  ASMEA       MOVE.L  #-1, D6
000031AA  2200                    3650              MOVE.L  D0, D1
000031AC  C2BC 00000038           3651              AND.L   #$38, D1    *Isolate source mode
000031B2                          3652              
000031B2  B2BC 00000010           3653              CMP.L   #$10, D1    *Check if 010
000031B8  6700 0024               3654              BEQ     ASMINADDRREG
000031BC                          3655              
000031BC  B2BC 00000018           3656              CMP.L   #$18, D1    *Check if 011
000031C2  6700 002A               3657              BEQ     ASMPLUSADDRREG
000031C6                          3658              
000031C6  B2BC 00000020           3659              CMP.L   #$20, D1    *Check if 100
000031CC  6700 0030               3660              BEQ     ASMMINUSADDRREG
000031D0                          3661              
000031D0  B2BC 00000038           3662              CMP.L   #$38, D1     *Check if 111
000031D6  6700 0036               3663              BEQ     ASMADDRESS
000031DA                          3664              
000031DA  6000 DF4C               3665              BRA     INVALIDOPCODE
000031DE                          3666              
000031DE  2200                    3667  ASMINADDRREG MOVE.L  D0, D1
000031E0  C2BC 00000007           3668              AND.L   #$7, D1     *Isolate register
000031E6  2401                    3669              MOVE.L  D1, D2      *Move value of an
000031E8  1A3C 0003               3670              MOVE.B  #$3, D5     *Move type of source
000031EC                          3671              
000031EC  4E75                    3672              RTS
000031EE                          3673              
000031EE  2200                    3674  ASMPLUSADDRREG MOVE.L  D0, D1
000031F0  C2BC 00000007           3675              AND.L   #$7, D1     *Isolate register
000031F6  2401                    3676              MOVE.L  D1, D2      *Move value of an
000031F8  1A3C 0004               3677              MOVE.B  #$4, D5     *Move type of source
000031FC                          3678              
000031FC  4E75                    3679              RTS
000031FE                          3680              
000031FE  2200                    3681  ASMMINUSADDRREG MOVE.L  D0, D1
00003200  C2BC 00000007           3682              AND.L   #$7, D1     *Isolate register
00003206  2401                    3683              MOVE.L  D1, D2      *Move value of an
00003208  1A3C 0005               3684              MOVE.B  #$5, D5     *Move type of source
0000320C                          3685              
0000320C  4E75                    3686              RTS
0000320E                          3687              
0000320E  2200                    3688  ASMADDRESS  MOVE.L  D0, D1
00003210  C2BC 00000007           3689              AND.L   #$7, D1     *Isolate register
00003216                          3690              
00003216  B2BC 00000000           3691              CMP.L   #$0, D1     *Check if 000
0000321C  6700 FF2E               3692              BEQ     LSMADDRW
00003220                          3693              
00003220  B2BC 00000001           3694              CMP.L   #$1, D1     *Check if 001
00003226  6700 FF2E               3695              BEQ     LSMADDRL
0000322A                          3696              
0000322A  6000 DEFC               3697              BRA     INVALIDOPCODE
0000322E                          3698              
0000322E  3410                    3699  ASMADDRW    MOVE.W  (A0),D2     *Move addr
00003230  1A3C 0006               3700              MOVE.B  #$6, D5     *Store type
00003234  5488                    3701              ADDA.L  #$2, A0 
00003236                          3702              
00003236  4E75                    3703              RTS
00003238                          3704  
00003238  2410                    3705  ASMADDRL    MOVE.L  (A0),D2     *Move addr
0000323A  1A3C 0007               3706              MOVE.B  #$7, D5     *Store type
0000323E  5888                    3707              ADDA.L  #$4, A0
00003240                          3708              
00003240  4E75                    3709              RTS
00003242                          3710  
00003242                          3711  
00003242                          3712  
00003242                          3713  
00003242  3200                    3714  ROREA       MOVE.W  D0, D1
00003244  C27C 0020               3715              AND.W   #$20, D1    *Isolate ir
00003248                          3716              
00003248  B27C 0020               3717              CMP.W   #$20, D1    *Check if 1
0000324C  6700 0006               3718              BEQ     RORD
00003250                          3719              
00003250  6000 0016               3720              BRA     RORC
00003254                          3721  
00003254  3200                    3722  RORD        MOVE.W  D0, D1
00003256  C27C 0E00               3723              AND.W   #$E00, D1   *Isolate count/register
0000325A  E081                    3724              ASR.L   #8, D1
0000325C  E281                    3725              ASR.L   #1, D1
0000325E  3401                    3726              MOVE.W  D1, D2
00003260  1A3C 0000               3727              MOVE.B  #$0, D5
00003264                          3728              
00003264  6000 0016               3729              BRA     RORDEST
00003268                          3730              
00003268  3200                    3731  RORC        MOVE.W  D0, D1
0000326A  C27C 0E00               3732              AND.W   #$E00, D1   *Isolate count/register
0000326E  E081                    3733              ASR.L   #8, D1
00003270  E281                    3734              ASR.L   #1, D1
00003272  3401                    3735              MOVE.W  D1, D2
00003274  1A3C 0008               3736              MOVE.B  #$8, D5
00003278                          3737              
00003278  6000 0002               3738              BRA     RORDEST 
0000327C                          3739              
0000327C  3200                    3740  RORDEST     MOVE.W  D0, D1
0000327E  C27C 0007               3741              AND.W   #$7, D1     *Isolate register
00003282  3601                    3742              MOVE.W  D1, D3
00003284  1C3C 0000               3743              MOVE.B  #$0, D6
00003288                          3744              
00003288  4E75                    3745              RTS
0000328A                          3746              
0000328A  7CFF                    3747  ROMEA       MOVE.L  #-1, D6
0000328C  2200                    3748              MOVE.L  D0, D1
0000328E  C2BC 00000038           3749              AND.L   #$38, D1    *Isolate source mode
00003294                          3750              
00003294  B2BC 00000010           3751              CMP.L   #$10, D1    *Check if 010
0000329A  6700 0024               3752              BEQ     ROMINADDRREG
0000329E                          3753              
0000329E  B2BC 00000018           3754              CMP.L   #$18, D1    *Check if 011
000032A4  6700 002A               3755              BEQ     ROMPLUSADDRREG
000032A8                          3756              
000032A8  B2BC 00000020           3757              CMP.L   #$20, D1    *Check if 100
000032AE  6700 0030               3758              BEQ     ROMMINUSADDRREG
000032B2                          3759              
000032B2  B2BC 00000038           3760              CMP.L   #$38, D1     *Check if 111
000032B8  6700 0036               3761              BEQ     ROMADDRESS
000032BC                          3762              
000032BC  6000 DE6A               3763              BRA     INVALIDOPCODE
000032C0                          3764              
000032C0  2200                    3765  ROMINADDRREG MOVE.L  D0, D1
000032C2  C2BC 00000007           3766              AND.L   #$7, D1     *Isolate register
000032C8  2401                    3767              MOVE.L  D1, D2      *Move value of an
000032CA  1A3C 0003               3768              MOVE.B  #$3, D5     *Move type of source
000032CE                          3769              
000032CE  4E75                    3770              RTS
000032D0                          3771              
000032D0  2200                    3772  ROMPLUSADDRREG MOVE.L  D0, D1
000032D2  C2BC 00000007           3773              AND.L   #$7, D1     *Isolate register
000032D8  2401                    3774              MOVE.L  D1, D2      *Move value of an
000032DA  1A3C 0004               3775              MOVE.B  #$4, D5     *Move type of source
000032DE                          3776              
000032DE  4E75                    3777              RTS
000032E0                          3778              
000032E0  2200                    3779  ROMMINUSADDRREG MOVE.L  D0, D1
000032E2  C2BC 00000007           3780              AND.L   #$7, D1     *Isolate register
000032E8  2401                    3781              MOVE.L  D1, D2      *Move value of an
000032EA  1A3C 0005               3782              MOVE.B  #$5, D5     *Move type of source
000032EE                          3783              
000032EE  4E75                    3784              RTS
000032F0                          3785              
000032F0  2200                    3786  ROMADDRESS  MOVE.L  D0, D1
000032F2  C2BC 00000007           3787              AND.L   #$7, D1     *Isolate register
000032F8                          3788              
000032F8  B2BC 00000000           3789              CMP.L   #$0, D1     *Check if 000
000032FE  6700 0010               3790              BEQ     ROMADDRW
00003302                          3791              
00003302  B2BC 00000001           3792              CMP.L   #$1, D1     *Check if 001
00003308  6700 0010               3793              BEQ     ROMADDRL
0000330C                          3794              
0000330C  6000 DE1A               3795              BRA     INVALIDOPCODE
00003310                          3796              
00003310  3410                    3797  ROMADDRW    MOVE.W  (A0),D2     *Move addr
00003312  1A3C 0006               3798              MOVE.B  #$6, D5     *Store type
00003316  5488                    3799              ADDA.L  #$2, A0 
00003318                          3800              
00003318  4E75                    3801              RTS
0000331A                          3802  
0000331A  2410                    3803  ROMADDRL    MOVE.L  (A0),D2     *Move addr
0000331C  1A3C 0007               3804              MOVE.B  #$7, D5     *Store type
00003320  5888                    3805              ADDA.L  #$4, A0
00003322                          3806              
00003322  4E75                    3807              RTS
00003324                          3808              
00003324                          3809              
00003324                          3810              
00003324                          3811              
00003324  2200                    3812  CMPEA       MOVE.L  D0, D1
00003326  C2BC 00000038           3813              AND.L   #$38, D1    *Isolate source mode
0000332C                          3814              
0000332C  B2BC 00000000           3815              CMP.L   #$0, D1     *Check if 000
00003332  6700 0038               3816              BEQ     CMPDATAREG
00003336                          3817              
00003336  B2BC 00000008           3818              CMP.L   #$8, D1     *Check if 001
0000333C  6700 0040               3819              BEQ     CMPADDRREG
00003340                          3820              
00003340  B2BC 00000010           3821              CMP.L   #$10, D1    *Check if 010
00003346  6700 0048               3822              BEQ     CMPINADDRREG
0000334A                          3823              
0000334A  B2BC 00000018           3824              CMP.L   #$18, D1    *Check if 011
00003350  6700 0050               3825              BEQ     CMPPLUSADDRREG
00003354                          3826              
00003354  B2BC 00000020           3827              CMP.L   #$20, D1    *Check if 100
0000335A  6700 0058               3828              BEQ     CMPMINUSADDRREG
0000335E                          3829              
0000335E  B2BC 00000038           3830              CMP.L   #$38, D1     *Check if 111
00003364  6700 0060               3831              BEQ     CMPADDRESSDATA
00003368                          3832              
00003368  6000 DDBE               3833              BRA     INVALIDOPCODE
0000336C                          3834                  
0000336C  2200                    3835  CMPDATAREG  MOVE.L  D0, D1
0000336E  C2BC 00000007           3836              AND.L   #$7, D1     *Isolate register
00003374  2401                    3837              MOVE.L  D1, D2      *Move value of Dn
00003376  1A3C 0000               3838              MOVE.B  #$0, D5     *Move type of source
0000337A                          3839              
0000337A  6000 00C8               3840              BRA     CMPDNDEST
0000337E                          3841              
0000337E  2200                    3842  CMPADDRREG  MOVE.L  D0, D1
00003380  C2BC 00000007           3843              AND.L   #$7, D1     *Isolate register
00003386  2401                    3844              MOVE.L  D1, D2      *Move value of An
00003388  1A3C 0001               3845              MOVE.B  #$1, D5     *Move type of source
0000338C                          3846              
0000338C  6000 00B6               3847              BRA     CMPDNDEST
00003390                          3848              
00003390  2200                    3849  CMPINADDRREG MOVE.L  D0, D1
00003392  C2BC 00000007           3850              AND.L   #$7, D1     *Isolate register
00003398  2401                    3851              MOVE.L  D1, D2      *Move value of an
0000339A  1A3C 0003               3852              MOVE.B  #$3, D5     *Move type of source
0000339E                          3853              
0000339E  6000 00A4               3854              BRA     CMPDNDEST
000033A2                          3855              
000033A2  2200                    3856  CMPPLUSADDRREG MOVE.L  D0, D1
000033A4  C2BC 00000007           3857              AND.L   #$7, D1     *Isolate register
000033AA  2401                    3858              MOVE.L  D1, D2      *Move value of an
000033AC  1A3C 0004               3859              MOVE.B  #$4, D5     *Move type of source
000033B0                          3860              
000033B0  6000 0092               3861              BRA     CMPDNDEST
000033B4                          3862              
000033B4  2200                    3863  CMPMINUSADDRREG MOVE.L  D0, D1
000033B6  C2BC 00000007           3864              AND.L   #$7, D1     *Isolate register
000033BC  2401                    3865              MOVE.L  D1, D2      *Move value of an
000033BE  1A3C 0005               3866              MOVE.B  #$5, D5     *Move type of source
000033C2                          3867              
000033C2  6000 0080               3868              BRA     CMPDNDEST
000033C6                          3869              
000033C6  2200                    3870  CMPADDRESSDATA MOVE.L  D0, D1
000033C8  C2BC 00000007           3871              AND.L   #$7, D1     *Isolate register
000033CE                          3872              
000033CE  B2BC 00000000           3873              CMP.L   #$0, D1     *Check if 000
000033D4  6700 001A               3874              BEQ     CMPADDRW
000033D8                          3875              
000033D8  B2BC 00000001           3876              CMP.L   #$1, D1     *Check if 001
000033DE  6700 001C               3877              BEQ     CMPADDRL
000033E2                          3878              
000033E2  B2BC 00000004           3879              CMP.L   #$4, D1     *Check if 100
000033E8  6700 001E               3880              BEQ     CMPDATA
000033EC                          3881              
000033EC  6000 DD3A               3882              BRA     INVALIDOPCODE
000033F0                          3883              
000033F0  3410                    3884  CMPADDRW    MOVE.W  (A0),D2     *Move addr
000033F2  1A3C 0006               3885              MOVE.B  #$6, D5     *Store type
000033F6  5488                    3886              ADDA.L  #$2, A0 
000033F8                          3887              
000033F8  6000 004A               3888              BRA     CMPDNDEST
000033FC                          3889  
000033FC  2410                    3890  CMPADDRL    MOVE.L  (A0),D2     *Move addr
000033FE  1A3C 0007               3891              MOVE.B  #$7, D5     *Store type
00003402  5888                    3892              ADDA.L  #$4, A0 
00003404                          3893              
00003404  6000 003E               3894              BRA     CMPDNDEST
00003408                          3895              
00003408  BE3C 0001               3896  CMPDATA     CMP.B   #$1,D7     *Compare if the size is a byte  
0000340C  6700 0012               3897              BEQ     CMPSIZEB
00003410                          3898      
00003410  BE3C 0002               3899              CMP.B   #$2,D7     *Compare if the size is a word 
00003414  6700 0016               3900              BEQ     CMPSIZEW
00003418                          3901      
00003418  BE3C 0003               3902              CMP.B   #$3,D7     *Compare if the size is a long 
0000341C  6700 001A               3903              BEQ     CMPSIZEL 
00003420                          3904  
00003420  3410                    3905  CMPSIZEB    MOVE.W  (A0),D2 
00003422  1A3C 0008               3906              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00003426  5488                    3907              ADDA.L  #$2, A0 
00003428                          3908          
00003428  6000 001A               3909              BRA     CMPDNDEST *Branches to destination
0000342C                          3910  
0000342C  3410                    3911  CMPSIZEW    MOVE.W  (A0),D2 
0000342E  1A3C 0008               3912              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00003432  5488                    3913              ADDA.L  #$2, A0 
00003434                          3914          
00003434  6000 000E               3915              BRA     CMPDNDEST *Branches to destination
00003438                          3916  
00003438  2410                    3917  CMPSIZEL    MOVE.L  (A0),D2 
0000343A  1A3C 0008               3918              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
0000343E  5888                    3919              ADDA.L  #$4, A0 
00003440                          3920          
00003440  6000 0002               3921              BRA     CMPDNDEST *Branches to destination
00003444                          3922              
00003444  3200                    3923  CMPDNDEST   MOVE.W  D0, D1
00003446  C27C 0E00               3924              AND.W   #$E00, D1   *Isolate register
0000344A  E081                    3925              ASR.L   #8, D1
0000344C  E281                    3926              ASR.L   #1, D1
0000344E  3601                    3927              MOVE.W  D1, D3      *Move register to d3
00003450  1C3C 0000               3928              MOVE.B  #$0, D6
00003454                          3929              
00003454  4E75                    3930              RTS
00003456                          3931              
00003456                          3932              
00003456                          3933              
00003456                          3934              
00003456  7CFF                    3935  BCCEA       MOVE.L  #-1, D6
00003458  3200                    3936              MOVE.W  D0, D1
0000345A  C27C 00FF               3937              AND.W   #$FF, D1    *Isolate first byte
0000345E                          3938              
0000345E  B27C 0000               3939              CMP.W   #$0, D1
00003462  6700 0054               3940              BEQ     BCCW
00003466                          3941              
00003466  B27C 00FF               3942              CMP.W   #$FF, D1
0000346A  6700 0062               3943              BEQ     BCCL
0000346E                          3944              
0000346E  C27C 0080               3945              AND.W   #$80, D1    *Isolate first bit
00003472  B27C 0080               3946              CMP.W   #$80, D1
00003476  6700 0016               3947              BEQ     BCCBS       *If negative, need further manipulation
0000347A                          3948              
0000347A  3200                    3949              MOVE.W  D0, D1
0000347C  C27C 00FF               3950              AND.W   #$FF, D1
00003480  5501                    3951              SUB.B   #$2, D1     *Subtract 2
00003482  3A0E                    3952              MOVE.W  A6, D5      *Move address
00003484  9A41                    3953              SUB.W   D1, D5      *Add from address
00003486  3205                    3954              MOVE.W  D5, D1
00003488  3401                    3955              MOVE.W  D1, D2
0000348A  7A06                    3956              MOVE.L  #$6, D5  
0000348C                          3957              
0000348C  4E75                    3958              RTS
0000348E                          3959              
0000348E  3200                    3960  BCCBS       MOVE.W  D0, D1
00003490  C27C 00FF               3961              AND.W   #$FF, D1
00003494  5301                    3962              SUB.B   #$1, D1     *Subtract 1
00003496  4601                    3963              NOT.B   D1          *Flip all bits
00003498  5501                    3964              SUB.B   #$2, D1     *Subtract 2
0000349A  3A0E                    3965              MOVE.W  A6, D5      *Move address
0000349C  9A41                    3966              SUB.W   D1, D5      *Add from address
0000349E  3205                    3967              MOVE.W  D5, D1
000034A0  3401                    3968              MOVE.W  D1, D2
000034A2  7A06                    3969              MOVE.L  #$6, D5  
000034A4                          3970              
000034A4  4E75                    3971              RTS
000034A6                          3972              
000034A6  5341                    3973  BCCWS       SUB.W   #$1, D1     *Subtract 1
000034A8  4641                    3974              NOT.W   D1          *Flip all bits
000034AA  5541                    3975              SUB.W   #$2, D1     *Subtract 2
000034AC  3A0E                    3976              MOVE.W  A6, D5      *Move address
000034AE  9A41                    3977              SUB.W   D1, D5      *Add from address
000034B0  3205                    3978              MOVE.W  D5, D1
000034B2  3401                    3979              MOVE.W  D1, D2
000034B4  7A06                    3980              MOVE.L  #$6, D5  
000034B6                          3981              
000034B6  4E75                    3982              RTS
000034B8                          3983              
000034B8  3210                    3984  BCCW        MOVE.W  (A0), D1
000034BA  5488                    3985              ADDA.L  #$2, A0
000034BC  B27C 0000               3986              CMP.W   #0, D1
000034C0  6DE4                    3987              BLT     BCCWS       *If negative, need further manipulation
000034C2                          3988              
000034C2  5401                    3989              ADD.B   #$2, D1     *Subtract 2
000034C4  3A0E                    3990              MOVE.W  A6, D5      *Move address
000034C6  D245                    3991              ADD.W   D5, D1      *Add from address
000034C8  3401                    3992              MOVE.W  D1, D2
000034CA  7A06                    3993              MOVE.L  #$6, D5 
000034CC                          3994              
000034CC  4E75                    3995              RTS
000034CE                          3996     
000034CE  2410                    3997  BCCL        MOVE.L  (A0), D2
000034D0  5888                    3998              ADDA.L  #$4, A0
000034D2  B2BC 00000000           3999              CMP.L   #0, D1
000034D8  6D00 000C               4000              BLT     BCCLS       *If negative, need further manipulation
000034DC                          4001              
000034DC  2401                    4002              MOVE.L  D1, D2
000034DE  5482                    4003              ADD.L   #$2, D2
000034E0  1A3C 0008               4004              MOVE.B  #$8, D5
000034E4                          4005              
000034E4  4E75                    4006              RTS
000034E6                          4007                   
000034E6  5381                    4008  BCCLS       SUB.L   #$1, D1     *Subtract 1
000034E8  4681                    4009              NOT.L   D1          *Flip all bits
000034EA  5481                    4010              ADD.L   #$2, D1     *Add 2
000034EC  2401                    4011              MOVE.L  D1, D2
000034EE  1A3C 0008               4012              MOVE.B  #$8, D5  
000034F2                          4013              
000034F2  4E75                    4014              RTS
000034F4                          4015              
000034F4                          4016              
000034F4  2200                    4017  JSREA       MOVE.L  D0, D1
000034F6  1C3C 00FF               4018              MOVE.B  #-1, D6
000034FA  C2BC 00000038           4019              AND.L   #$38, D1    *Isolate source mode
00003500                          4020  
00003500  B2BC 00000010           4021              CMP.L   #$10, D1    *Check if 010
00003506  6700 0010               4022              BEQ     JSRINADDRREG
0000350A                          4023              
0000350A  B2BC 00000038           4024              CMP.L   #$38, D1     *Check if 111
00003510  6700 0016               4025              BEQ     JSRADDRESS
00003514                          4026              
00003514  6000 DC12               4027              BRA     INVALIDOPCODE
00003518                          4028              
00003518  2200                    4029  JSRINADDRREG MOVE.L  D0, D1
0000351A  C2BC 00000007           4030              AND.L   #$7, D1     *Isolate register
00003520  2401                    4031              MOVE.L  D1, D2      *Move value of an
00003522  1A3C 0003               4032              MOVE.B  #$3, D5     *Move type of source
00003526                          4033              
00003526  4E75                    4034              RTS
00003528                          4035              
00003528  2200                    4036  JSRADDRESS  MOVE.L  D0, D1
0000352A  C2BC 00000007           4037              AND.L   #$7, D1     *Isolate register
00003530                          4038              
00003530  B2BC 00000000           4039              CMP.L   #$0, D1     *Check if 000
00003536  6700 0010               4040              BEQ     JSRADDRW
0000353A                          4041              
0000353A  B2BC 00000001           4042              CMP.L   #$1, D1     *Check if 001
00003540  6700 0010               4043              BEQ     JSRADDRL
00003544                          4044              
00003544  6000 DBE2               4045              BRA     INVALIDOPCODE
00003548                          4046              
00003548  3410                    4047  JSRADDRW    MOVE.W  (A0),D2     *Move addr
0000354A  1A3C 0006               4048              MOVE.B  #$6, D5     *Store type
0000354E  5488                    4049              ADDA.L  #$2, A0 
00003550                          4050              
00003550  4E75                    4051              RTS
00003552                          4052  
00003552  2410                    4053  JSRADDRL    MOVE.L  (A0),D2     *Move addr
00003554  1A3C 0007               4054              MOVE.B  #$7, D5     *Store type
00003558  5888                    4055              ADDA.L  #$4, A0
0000355A                          4056              
0000355A  4E75                    4057              RTS
0000355C                          4058  
0000355C                          4059                  
0000355C                          4060  
0000355C= 00                      4061  EMPTYLINEMESSAGE DC.B   '', 0
0000355D= 0D 0A 00                4062  NEWLINE         DC.B    $0D,$0A,0
00003560= 44 49 56 55 00          4063  DIVSMESSAGE     DC.B    'DIVU', 0
00003565= 43 4D 50 00             4064  CMPMESSAGE      DC.B     'CMP', 0
00003569= 42 43 43 00             4065  BCCMESSAGE      DC.B     'BCC', 0
0000356D= 42 47 54 00             4066  BGTMESSAGE      DC.B     'BGT', 0
00003571= 42 4C 45 00             4067  BLEMESSAGE      DC.B     'BLE', 0
00003575= 4D 4F 56 45 51 00       4068  MOVEQMESSAGE    DC.B   'MOVEQ', 0
0000357B= 41 44 44 41 00          4069  ADDAMESSAGE     DC.B    'ADDA', 0
00003580= 41 44 44 00             4070  ADDMESSAGE      DC.B     'ADD', 0
00003584= 53 55 42 41 00          4071  SUBAMESSAGE     DC.B    'SUBA', 0
00003589= 53 55 42 00             4072  SUBMESSAGE      DC.B     'SUB', 0
0000358D= 41 4E 44 00             4073  ANDMESSAGE      DC.B     'AND', 0
00003591= 4D 55 4C 53 00          4074  MULSMESSAGE     DC.B    'MULS', 0
00003596= 4D 4F 56 45 00          4075  MOVEMESSAGE     DC.B    'MOVE', 0
0000359B= 42 43 48 47 00          4076  BCHGMESSAGE     DC.B    'BCHG', 0
000035A0= 43 4D 50 49 00          4077  CMPIMESSAGE     DC.B    'CMPI', 0
000035A5= 41 44 44 49 00          4078  ADDIMESSAGE     DC.B    'ADDI', 0
000035AA= 41 4E 44 49 00          4079  ANDIMESSAGE     DC.B    'ANDI', 0
000035AF= 4C 45 41 00             4080  LEAMESSAGE      DC.B    'LEA',0
000035B3= 4D 4F 56 45 4D 00       4081  OPMOVEMMESSAGE  DC.B    'MOVEM',0
000035B9= 52 54 53 00             4082  RTSMESSAGE      DC.B    'RTS',0
000035BD= 4E 4F 50 00             4083  NOPMESSAGE      DC.B    'NOP',0
000035C1= 4A 53 52 00             4084  JSRMESSAGE      DC.B    'JSR',0
000035C5= 43 4C 52 00             4085  CLRMESSAGE      DC.B    'CLR',0
000035C9= 41 53 52 00             4086  ASRMESSAGE      DC.B    'ASR',0
000035CD= 41 53 4C 00             4087  ASLMESSAGE      DC.B    'ASL',0
000035D1= 4C 53 4C 00             4088  LSLMESSAGE      DC.B    'LSL',0
000035D5= 4C 53 52 00             4089  LSRMESSAGE      DC.B    'LSR',0
000035D9= 52 4F 52 00             4090  RORMESSAGE      DC.B    'ROR',0
000035DD= 52 4F 4C 00             4091  ROLMESSAGE      DC.B    'ROL',0
000035E1                          4092  
000035E1= 2E 42 00                4093  BYTEMESSAGE     DC.B    '.B', 0
000035E4= 2E 57 00                4094  WORDMESSAGE     DC.B    '.W', 0
000035E7= 2E 4C 00                4095  LONGMESSAGE     DC.B    '.L', 0
000035EA                          4096  
000035EA= 57 65 6C 63 6F 6D ...   4097  INPUTMESSAGE    DC.B    'Welcome to JAN disassembler. Please type your addresses in this format:', $0D,$0A,0
00003634= 22 73 74 61 72 74 ...   4098  INPUTMESSAGE1   DC.B    '"starting address","ending address". (period included)', 0
0000366B                          4099  
0000366B= 53 65 63 74 69 6F ...   4100  CONTINUEMESSAGE DC.B    'Section ended. Press ENTER to continue?', 0
00003693= 41 6C 6C 20 64 6F ...   4101  ENDMESSAGE      DC.B    'All done!! Thank you for using JAN disassembler. Continue? (y/n)'
000036D3                          4102  
000036D3= 20 20 20 20 20 20 ...   4103  SPACEMESSAGE    DC.B    '           ', 0
000036DF= 2C 20 00                4104  COMMAMESSAGE    DC.B    ', ', 0
000036E2= 2F 00                   4105  SLASHMESSAGE    DC.B    '/', 0
000036E4                          4106  
000036E4= 44 41 54 41 00          4107  INVALIDMESSAGE  DC.B    'DATA', 0
000036E9= 24 00                   4108  DOLLARMESSAGE   DC.B    '$', 0
000036EB= 23 00                   4109  POUNDMESSAGE    DC.B    '#', 0
000036ED                          4110  
000036ED= 30 00                   4111  ZEROMESSAGE     DC.B    '0', 0
000036EF= 31 00                   4112  ONEMESSAGE      DC.B    '1', 0
000036F1= 32 00                   4113  TWOMESSAGE      DC.B    '2', 0
000036F3= 33 00                   4114  THREEMESSAGE    DC.B    '3', 0
000036F5= 34 00                   4115  FOURMESSAGE     DC.B    '4', 0
000036F7= 35 00                   4116  FIVEMESSAGE     DC.B    '5', 0
000036F9= 36 00                   4117  SIXMESSAGE      DC.B    '6', 0
000036FB= 37 00                   4118  SEVENMESSAGE    DC.B    '7', 0
000036FD= 38 00                   4119  EIGHTMESSAGE    DC.B    '8', 0
000036FF= 39 00                   4120  NINEMESSAGE     DC.B    '9', 0
00003701= 41 00                   4121  AMESSAGE        DC.B    'A', 0
00003703= 42 00                   4122  BMESSAGE        DC.B    'B', 0
00003705= 43 00                   4123  CMESSAGE        DC.B    'C', 0
00003707= 44 00                   4124  DMESSAGE        DC.B    'D', 0
00003709= 45 00                   4125  EMESSAGE        DC.B    'E', 0
0000370B= 46 00                   4126  FMESSAGE        DC.B    'F', 0    
0000370D                          4127  
0000370D= 44 00                   4128  DNMESSAGE       DC.B    'D', 0
0000370F= 41 00                   4129  ANMESSAGE       DC.B    'A', 0 
00003711= 28 41 00                4130  ANIOPENMESSAGE  DC.B    '(A', 0
00003714= 29 00                   4131  ANICLOSEMESSAGE DC.B    ')', 0
00003716= 29 2B 00                4132  ANPLUSCLOSEMESSAGE DC.B ')+', 0
00003719= 2D 28 41 00             4133  ANMINUSOPENMESSAGE DC.B '-(A', 0
0000371D                          4134  
0000371D                          4135      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDAADDRESSDATA     27E4
ADDAADDRL           281A
ADDAADDRREG         279C
ADDAADDRW           280E
ADDADATA            2826
ADDADATAREG         278A
ADDADDRESSD         25DC
ADDADDRESSDATA      26B2
ADDADDRL            26E8
ADDADDRLD           2606
ADDADDRREG          266A
ADDADDRW            26DC
ADDADDRWD           25FC
ADDADEST            2862
ADDAEA              2742
ADDAINADDRREG       27AE
ADDAMESSAGE         357B
ADDAMINUSADDRREG    27D2
ADDAPLUSADDRREG     27C0
ADDASIZEB           283E
ADDASIZEL           2856
ADDASIZEW           284A
ADDBYTE             13E8
ADDBYTES            16B2
ADDDATA             26F4
ADDDATAREG          2658
ADDDNDEST           2730
ADDDNEA             2564
ADDDNEADEST         2578
ADDEA               2552
ADDEADN             2610
ADDIADDRESS         292E
ADDIADDRL           2958
ADDIADDRW           294E
ADDIDATAREG         28EE
ADDIDEST            28B0
ADDIEA              2874
ADDIINADDRREG       28FE
ADDIMESSAGE         35A5
ADDIMINUSADDRREG    291E
ADDINADDRREG        267C
ADDINADDRREGD       25AC
ADDIPLUSADDRREG     290E
ADDISIZEB           288C
ADDISIZEL           28A4
ADDISIZEW           2898
ADDLONG             13F4
ADDLONGS            16C2
ADDMESSAGE          3580
ADDMINUSADDRREG     26A0
ADDMINUSADDRREGD    25CC
ADDPLUSADDRREG      268E
ADDPLUSADDRREGD     25BC
ADDSIZEB            270C
ADDSIZEL            2724
ADDSIZEW            2718
ADDWORD             13EE
ADDWORDS            16BA
ADLISTEA            1472
ADLISTEAD           123A
ADLISTEALOOP        1478
ADLISTEALOOP2       1484
ADLISTEALOOP2D      124C
ADLISTEALOOPD       1240
ADLISTSLASH         14E0
ADLISTSLASHD        12A8
ALIST               14B2
ALIST2              153E
ALISTD              127A
AMESSAGE            3701
ANDADDRESSD         2F34
ANDADDRESSDATA      2FEE
ANDADDRL            3024
ANDADDRLD           2F5E
ANDADDRW            3018
ANDADDRWD           2F54
ANDDATA             3030
ANDDATAREG          2FA6
ANDDNDEST           306C
ANDDNEA             2EBC
ANDEA               2EAA
ANDEADEST           2ED0
ANDEADN             2F68
ANDIMESSAGE         35AA
ANDINADDRREG        2FB8
ANDINADDRREGD       2F04
ANDMESSAGE          358D
ANDMINUSADDRREG     2FDC
ANDMINUSADDRREGD    2F24
ANDPLUSADDRREG      2FCA
ANDPLUSADDRREGD     2F14
ANDSIZEB            3048
ANDSIZEL            3060
ANDSIZEW            3054
ANEA                159C
ANEAD               12D2
ANICLOSEMESSAGE     3714
ANIEA               15B2
ANIEAD              12E8
ANIOPENMESSAGE      3711
ANMESSAGE           370F
ANMINUSEA           15F6
ANMINUSEAD          132C
ANMINUSOPENMESSAGE  3719
ANPLUSCLOSEMESSAGE  3716
ANPLUSEA            15D4
ANPLUSEAD           130A
ASKFORCONTINUE      10FC
ASKLOOP             110C
ASLMESSAGE          35CD
ASMADDRESS          320E
ASMADDRL            3238
ASMADDRW            322E
ASMEA               31A8
ASMINADDRREG        31DE
ASMMINUSADDRREG     31FE
ASMPLUSADDRREG      31EE
ASRC                3186
ASRD                3172
ASRDEST             319A
ASREA               3160
ASRMESSAGE          35C9
BACKCOMMA           17E6
BACKEND             17D6
BACKSPACEINPUT      17C0
BACKSTART           17CC
BCCBS               348E
BCCEA               3456
BCCL                34CE
BCCLS               34E6
BCCMESSAGE          3569
BCCW                34B8
BCCWS               34A6
BCHGMESSAGE         359B
BGTMESSAGE          356D
BLEMESSAGE          3571
BMESSAGE            3703
BYTEDATA            16E2
BYTEMESSAGE         35E1
CHECK0000           1AAE
CHECK0100           1FDC
CHECK0110           1E38
CHECK0111           1E18
CHECK1000           1FBC
CHECK1001           1F2A
CHECK1010           1DDE
CHECK1100           1A3C
CHECK1101           1E98
CHECK1110           1BD6
CHECKAABC           1ACA
CHECKADDADDA        1EA8
CHECKADLIST         14D6
CHECKADLISTD        129E
CHECKANDMULS        1A4A
CHECKASM            1C46
CHECKASRE           1C7C
CHECKBACKSPACE      1746
CHECKCBD            1AF8
CHECKDALIST         1568
CHECKEAS            20D6
CHECKIFCOMMA        1736
CHECKIFLESS9        178C
CHECKIFPERIOD       173E
CHECKLAR            1BE6
CHECKLARM           1BF8
CHECKLARR           1C16
CHECKLCA            174E
CHECKLCZ            175A
CHECKLESSF          177A
CHECKLSM            1C34
CHECKLSRE           1C6A
CHECKMORE0          1782
CHECKMOREA          176E
CHECKOPS            1FEC
CHECKROM            1C58
CHECKRORE           1C8E
CHECKSUBSUBA        1F3A
CLEARALL            1174
CLRADDRESS          2E76
CLRADDRL            2EA0
CLRADDRW            2E96
CLRDATAREG          2E36
CLREA               2DF6
CLRINADDRREG        2E46
CLRMESSAGE          35C5
CLRMINUSADDRREG     2E66
CLRPLUSADDRREG      2E56
CMESSAGE            3705
CMPADDRESSDATA      33C6
CMPADDRL            33FC
CMPADDRREG          337E
CMPADDRW            33F0
CMPDATA             3408
CMPDATAREG          336C
CMPDNDEST           3444
CMPEA               3324
CMPIMESSAGE         35A0
CMPINADDRREG        3390
CMPMESSAGE          3565
CMPMINUSADDRREG     33B4
CMPPLUSADDRREG      33A2
CMPSIZEB            3420
CMPSIZEL            3438
CMPSIZEW            342C
COMMAINPUT          17A6
COMMAMESSAGE        36DF
COMPAREADDRESS      1914
CONTINUE            10D8
CONTINUEMESSAGE     366B
DALISTEA            14F4
DALISTEALOOP        14FA
DALISTEALOOP2       1506
DALISTSLASH         1572
DATAEA              167C
DATAEAD             13B2
DATAEALOOP          16CA
DATAEALOOP2         16F4
DATAEALOOPD         13FA
DECREASELC          1766
DEST                10D2
DESTINATION         10C6
DIVSMESSAGE         3560
DIVUADDRESSDATA     2CEE
DIVUADDRL           2D24
DIVUADDRW           2D18
DIVUDATA            2D30
DIVUDATAREG         2CA6
DIVUDEST            2D6C
DIVUEA              2C68
DIVUINADDRREG       2CB8
DIVUMINUSADDRREG    2CDC
DIVUPLUSADDRREG     2CCA
DIVUSIZEB           2D48
DIVUSIZEL           2D60
DIVUSIZEW           2D54
DLIST               1490
DLIST2              1512
DLISTD              1258
DMESSAGE            3707
DNEA                1586
DNEAD               12BC
DNMESSAGE           370D
DOLLARMESSAGE       36E9
DONE                1854
DOREST              17EC
EIGHTMESSAGE        36FD
EMESSAGE            3709
EMPTYLINE           180E
EMPTYLINEMESSAGE    355C
ENDINGADDRESS       1804
ENDLOOP             1828
ENDMESSAGE          3693
FIVEMESSAGE         36F7
FMESSAGE            370B
FOURMESSAGE         36F5
INPUT               1718
INPUTLOOP           1730
INPUTMESSAGE        35EA
INPUTMESSAGE1       3634
INVALIDLOOP         1152
INVALIDMESSAGE      36E4
INVALIDOPCODE       1128
JSRADDRESS          3528
JSRADDRL            3552
JSRADDRW            3548
JSREA               34F4
JSRINADDRREG        3518
JSRMESSAGE          35C1
LEAADDRESS          2DB0
LEAADDRL            2DD8
LEAADDRW            2DCC
LEADEST             2DE4
LEAEA               2D7E
LEAINADDRREG        2D9E
LEAMESSAGE          35AF
LETTERINPUT         1796
LONGDATA            16EE
LONGMESSAGE         35E7
LOOP                1036
LSLMESSAGE          35D1
LSMADDRESS          312C
LSMADDRL            3156
LSMADDRW            314C
LSMEA               30C6
LSMINADDRREG        30FC
LSMMINUSADDRREG     311C
LSMPLUSADDRREG      310C
LSRC                30A4
LSRD                3090
LSRDEST             30B8
LSREA               307E
LSRMESSAGE          35D5
MOVEADDRD           2334
MOVEADDRESSDATA     223C
MOVEADDRL           2272
MOVEADDRLD          2358
MOVEADDRREG         21F4
MOVEADDRW           2266
MOVEADDRWD          234E
MOVEDATA            227E
MOVEDATAREG         21E2
MOVEDATAREGD        22EC
MOVEDEST            22BA
MOVEEA              219A
MOVEINADDRD         22FE
MOVEINADDRREG       2206
MOVEMADDRESS        2520
MOVEMADDRESSD       2460
MOVEMADDRL          2548
MOVEMADDRLD         248A
MOVEMADDRW          253E
MOVEMADDRWD         2480
MOVEMEA             23C0
MOVEMESSAGE         3596
MOVEMINADDRREG      2500
MOVEMINADDRREGD     243E
MOVEMINUSADDRREG    222A
MOVEMMDEST          2414
MOVEMMR             2494
MOVEMNOONE          24C2
MOVEMNOONES         2400
MOVEMPLUSADDRREG    2510
MOVEMPREADDRD       244E
MOVEMRDEST          24D6
MOVEMRLOOP          23DE
MOVEMRLOOPD         24A0
MOVEMRM             23D2
MOVEPLUSADDRREG     2218
MOVEPOSTADDRD       2310
MOVEPREADDRD        2322
MOVEQEA             2362
MOVEQMESSAGE        3575
MOVESIZEB           2296
MOVESIZEL           22AE
MOVESIZEW           22A2
MULSADDRESSDATA     2BD8
MULSADDRL           2C0E
MULSADDRW           2C02
MULSDATA            2C1A
MULSDATAREG         2B90
MULSDEST            2C56
MULSEA              2B52
MULSINADDRREG       2BA2
MULSMESSAGE         3591
MULSMINUSADDRREG    2BC6
MULSPLUSADDRREG     2BB4
MULSSIZEB           2C32
MULSSIZEL           2C4A
MULSSIZEW           2C3E
NEWLINE             355D
NINEMESSAGE         36FF
NOPEA               218E
NOPMESSAGE          35BD
NUMBERA             19F8
NUMBERB             1A02
NUMBERC             1A0C
NUMBERD             1A16
NUMBERE             1A20
NUMBEREIGHT         19E4
NUMBERF             1A2A
NUMBERFIVE          19C6
NUMBERFOUR          19BC
NUMBERINPUT         179E
NUMBERNINE          19EE
NUMBERONE           199E
NUMBERSEVEN         19DA
NUMBERSIX           19D0
NUMBERTHREE         19B2
NUMBERTWO           19A8
NUMBERZERO          1994
ONEMESSAGE          36EF
OPADD               1EE8
OPADDA              1EC6
OPADDI              1B82
OPAND               1A5C
OPANDI              1BAC
OPASLM              1D14
OPASLR              1D24
OPASRM              1D30
OPASRR              1D40
OPBCC               1E74
OPBCHGD             1B48
OPBCHGR             1B38
OPBGT               1E80
OPBLE               1E8C
OPBXX               1E48
OPCLR               209A
OPCMP               1DEE
OPCMPI              1B58
OPDIVS              1FCC
OPJSR               2048
OPLEA               2058
OPLSLM              1CA0
OPLSLR              1CB0
OPLSRM              1CDA
OPLSRR              1CEA
OPMOVE              1B0A
OPMOVEM             2068
OPMOVEMMESSAGE      35B3
OPMOVEQ             1E28
OPMULS              1A9E
OPNOP               2038
OPROLM              1D6A
OPROLR              1D7A
OPRORM              1DA4
OPRORR              1DB4
OPRTS               208A
OPSUB               1F7A
OPSUBA              1F58
OUTPUTEND           181C
PBAL                18E0
PERIODINPUT         17AA
PLAL                187E
POUNDMESSAGE        36EB
PRINTADDRESS        1858
PRINTBYTE           11B4
PRINTBYTEADDRESS    18D6
PRINTCOMMA          1186
PRINTDESTINATION    11F0
PRINTLONG           11DC
PRINTLONGADDRESS    1874
PRINTSIZES          1194
PRINTSOURCE         1420
PRINTSPACE          1906
PRINTWORD           11C8
PRINTWORDADDRESS    18A6
PWAL                18B0
REGISTERS           2380
ROLMESSAGE          35DD
ROMADDRESS          32F0
ROMADDRL            331A
ROMADDRW            3310
ROMEA               328A
ROMINADDRREG        32C0
ROMMINUSADDRREG     32E0
ROMPLUSADDRREG      32D0
RORC                3268
RORD                3254
RORDEST             327C
ROREA               3242
RORMESSAGE          35D9
RTSEA               2194
RTSMESSAGE          35B9
SEVENMESSAGE        36FB
SHOWADDRESS         1A34
SIXMESSAGE          36F9
SIZEB               20C4
SIZEL               20D0
SIZEW               20CA
SLASHMESSAGE        36E2
SOURCE              10B2
SPACEMESSAGE        36D3
START               1000
STARTINGADDRESS     17F8
SUBADDRESSD         29EC
SUBADDRESSDATA      2AC2
SUBADDRL            2AF8
SUBADDRLD           2A16
SUBADDRREG          2A7A
SUBADDRW            2AEC
SUBADDRWD           2A0C
SUBAMESSAGE         3584
SUBDATA             2B04
SUBDATAREG          2A68
SUBDNDEST           2B40
SUBDNEA             2974
SUBEA               2962
SUBEADEST           2988
SUBEADN             2A20
SUBINADDRREG        2A8C
SUBINADDRREGD       29BC
SUBMESSAGE          3589
SUBMINUSADDRREG     2AB0
SUBMINUSADDRREGD    29DC
SUBPLUSADDRREG      2A9E
SUBPLUSADDRREGD     29CC
SUBSIZEB            2B1C
SUBSIZEL            2B34
SUBSIZEW            2B28
SWITCHINPUT         17B8
TESTNEWRANGE        1840
THREEMESSAGE        36F3
TWOMESSAGE          36F1
WORDDATA            16E8
WORDMESSAGE         35E4
XXXLEA              1648
XXXLEAD             137E
XXXLEALOOP          1658
XXXLEALOOPD         138E
XXXWEA              1618
XXXWEAD             134E
XXXWEALOOP          1628
XXXWEALOOPD         135E
YESCONTINUE         1118
ZEROMESSAGE         36ED
