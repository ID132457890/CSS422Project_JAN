00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/12/2016 9:23:14 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  
00001000                            10  *----------------------------------main--------------------------
00001000                            11      *Ask for input
00001000  4EB9 00001174             12      JSR         CLEARALL
00001006  227C 00000000             13      MOVEA.L     #$0, A1
0000100C  247C 00000000             14      MOVEA.L     #$0, A2
00001012  267C 00000000             15      MOVEA.L     #$0, A3
00001018  287C 00000000             16      MOVEA.L     #$0, A4
0000101E  2A7C 00000000             17      MOVEA.L     #$0, A5
00001024  2C7C 00000000             18      MOVEA.L     #$0, A6
0000102A  2E7C 00000000             19      MOVEA.L     #$0, A7
00001030  4EB9 00001718             20      JSR         INPUT
00001036                            21      
00001036                            22  LOOP    
00001036                            23  
00001036  528B                      24      ADDA.L      #$1, A3 *Counter
00001038                            25      *Print the initial address
00001038  4EB9 0000185E             26      JSR         PRINTADDRESS
0000103E                            27      
0000103E                            28      *Copy the opcode part to D0
0000103E  3010                      29      MOVE.W      (A0), D0
00001040                            30      
00001040                            31      *Copy the opcode to D1 for changes
00001040  3210                      32      MOVE.W      (A0), D1
00001042                            33      
00001042  3C48                      34      MOVEA.W      A0, A6    *Keep original address in case there is an error
00001044                            35      
00001044                            36      *Increase the address by 2, since that part has been read
00001044  5448                      37      ADDA.W       #$2, A0
00001046                            38      
00001046  183C 00FF                 39      MOVE.B      #-1, D4     *Start at invalid
0000104A                            40      
0000104A  4EB9 00001A42             41      JSR         CHECK1100    *Check for AND or MULS
00001050  4EB9 00001AB4             42      JSR         CHECK0000   *Check for ANDI, ADDI, BCHG, CMPI or MOVE  initial
00001056  4EB9 00001BDC             43      JSR         CHECK1110 *Check for LSx,ASx,ROx
0000105C  4EB9 00001DE4             44      JSR         CHECK1010  * Check for the CMP opcode
00001062  4EB9 00001E3E             45      JSR         CHECK0110 *Check for BCC opcode
00001068  4EB9 00001E1E             46      JSR         CHECK0111 *Check for MOVEQ opcode
0000106E  4EB9 00001E9E             47      JSR         CHECK1101 *Check for ADD or ADDA
00001074  4EB9 00001F30             48      JSR         CHECK1001 *Check for SUB or SUBA
0000107A  4EB9 00001FC2             49      JSR         CHECK1000 *Check for DIVS 
00001080  4EB9 00001FE2             50      JSR         CHECK0100 *Check for JSR,RTS,NOP,MOVEM,LEA,CLR
00001086                            51     
00001086  2400                      52      MOVE.L      D0, D2          *Backup opcode
00001088                            53     
00001088  B83C 00FF                 54      CMP.B       #-1, D4
0000108C  6700 009A                 55      BEQ         INVALIDOPCODE
00001090                            56      
00001090  2002                      57      MOVE.L      D2, D0      *restore opcode
00001092  4242                      58      CLR         D2
00001094                            59      
00001094  4EB9 000020DC             60      JSR         CHECKEAS    *Checks the EAs
0000109A                            61      
0000109A                            62      *Would go below only if there are no errors
0000109A  103C 000E                 63      MOVE.B  #14, D0         *Print opcode
0000109E  4E4F                      64      TRAP    #15
000010A0                            65      
000010A0  4EB9 00001194             66      JSR         PRINTSIZES  *Print the sizes
000010A6                            67      
000010A6  BA3C 00FF                 68      CMP.B   #-1, D5
000010AA  6600 0006                 69      BNE     SOURCE
000010AE  6000 0028                 70      BRA     CONTINUE
000010B2                            71      
000010B2  4EB9 00001420             72  SOURCE    JSR         PRINTSOURCE *Print source EA
000010B8                            73  
000010B8  BC3C 00FF                 74      CMP.B   #-1, D6
000010BC  6700 0008                 75      BEQ     DESTINATION
000010C0                            76      
000010C0  4EB9 00001186             77      JSR     PRINTCOMMA
000010C6                            78      
000010C6  BC3C 00FF                 79  DESTINATION     CMP.B   #-1, D6
000010CA  6600 0006                 80      BNE     DEST
000010CE  6000 0008                 81      BRA     CONTINUE
000010D2  4EB9 000011F0             82  DEST    JSR         PRINTDESTINATION    *Print destination
000010D8  4EB9 00001814             83  CONTINUE    JSR         EMPTYLINE   
000010DE                            84      
000010DE  B1CC                      85      CMP.L       A4, A0      *Check if the starting address is same as ending
000010E0  6C00 0740                 86      BGE         OUTPUTEND   *If yes, then stop
000010E4                            87      
000010E4  4EB9 00001174             88      JSR         CLEARALL
000010EA                            89      
000010EA  B7FC 00000018             90      CMP.L       #$18, A3
000010F0  6700 000A                 91      BEQ         ASKFORCONTINUE
000010F4                            92      
000010F4  6000 FF40                 93      BRA         LOOP        *If not, then loop back            
000010F8                            94      
000010F8  FFFF FFFF                 95      SIMHALT   
000010FC                            96  *------------------------------------main----------------------------------------
000010FC                            97      
000010FC  43F9 00003671             98  ASKFORCONTINUE  LEA         CONTINUEMESSAGE, A1
00001102  103C 000E                 99                  MOVE.B      #14, D0
00001106  4E4F                     100                  TRAP        #15
00001108                           101                  
00001108  103C 0005                102                  MOVE.B      #5, D0  *Read y/n
0000110C  4E4F                     103  ASKLOOP         TRAP        #15
0000110E                           104                  
0000110E  B23C 000D                105                  CMP.B       #$D, D1    *n
00001112  6700 0004                106                  BEQ         YESCONTINUE
00001116  60F4                     107                  BRA ASKLOOP
00001118                           108               
00001118                           109                  
00001118  4EB9 00001814            110  YESCONTINUE     JSR         EMPTYLINE
0000111E  267C 00000000            111                  MOVEA.L     #$0, A3
00001124  6000 FF10                112                  BRA         LOOP
00001128                           113                  
00001128                           114  
00001128                           115  
00001128  43F9 000036EA            116  INVALIDOPCODE   LEA         INVALIDMESSAGE, A1
0000112E  103C 000E                117                  MOVE.B      #14, D0
00001132  4E4F                     118                  TRAP        #15
00001134                           119                  
00001134  43F9 000036D9            120                  LEA         SPACEMESSAGE, A1
0000113A  103C 000E                121                  MOVE.B      #14, D0
0000113E  4E4F                     122                  TRAP        #15
00001140                           123                  
00001140  43F9 000036EF            124                  LEA         DOLLARMESSAGE, A1
00001146  103C 000E                125                  MOVE.B      #14, D0
0000114A  4E4F                     126                  TRAP        #15
0000114C                           127                  
0000114C  1C3C 0004                128                  MOVE.B      #$4, D6             *Put actual size in D6
00001150  3616                     129                  MOVE.W      (A6), D3            *Move opcode in D3
00001152  E95B                     130  INVALIDLOOP     ROL.W       #$4, D3             *Shift left to right position
00001154  3003                     131                  MOVE.W      D3, D0              *Move to D0 for backup
00001156  C67C 000F                132                  AND.W       #$F, D3             *Isolate first byte
0000115A  1203                     133                  MOVE.B      D3, D1              *Move byte to D1
0000115C  3600                     134                  MOVE.W      D0, D3              *Move original back to D2
0000115E  C67C FFF0                135                  AND.W       #$FFF0, D3          *Remove first 4 bits
00001162  5306                     136                  SUB.B       #$1, D6
00001164                           137                  
00001164  4EB9 0000191A            138                  JSR         COMPAREADDRESS
0000116A                           139                  
0000116A  BC3C 0000                140                  CMP.B       #$0, D6
0000116E  66E2                     141                  BNE         INVALIDLOOP
00001170                           142                  
00001170  6000 FF66                143                  BRA         CONTINUE
00001174                           144  
00001174  4240                     145  CLEARALL        CLR         D0
00001176  4241                     146                  CLR         D1
00001178  4242                     147                  CLR         D2
0000117A  4243                     148                  CLR         D3
0000117C  4244                     149                  CLR         D4
0000117E  4245                     150                  CLR         D5
00001180  4246                     151                  CLR         D6
00001182  4247                     152                  CLR         D7
00001184                           153                  
00001184                           154                  *MOVEA.L     #$0, A1
00001184                           155                  *MOVEA.L     #$0, A2
00001184                           156                  *MOVEA.L     #$0, A6
00001184  4E75                     157                  RTS
00001186                           158                  
00001186  43F9 000036E5            159  PRINTCOMMA      LEA         COMMAMESSAGE, A1
0000118C  103C 000E                160                  MOVE.B      #14, D0
00001190  4E4F                     161                  TRAP        #15
00001192                           162                  
00001192  4E75                     163                  RTS
00001194                           164                  
00001194                           165  *-----------------------------------PRINTSIZES-----------------------------------
00001194                           166  *Description: This branch print the sizes (.b, .w, .l)
00001194                           167  *--------------------------------------------------------------------------------
00001194                           168                  
00001194  BE3C 0001                169  PRINTSIZES      CMP.B       #$1, D7         *Check if byte
00001198  6700 001A                170                  BEQ         PRINTBYTE
0000119C                           171                  
0000119C  BE3C 0002                172                  CMP.B       #$2, D7         *Check if word
000011A0  6700 0026                173                  BEQ         PRINTWORD   
000011A4                           174                  
000011A4  BE3C 0003                175                  CMP.B       #$3, D7         *Check if long
000011A8  6700 0032                176                  BEQ         PRINTLONG
000011AC                           177                  
000011AC  4EB9 0000190C            178                  JSR         PRINTSPACE
000011B2                           179                  
000011B2  4E75                     180                  RTS
000011B4                           181                  
000011B4  43F9 000035E7            182  PRINTBYTE       LEA         BYTEMESSAGE, A1
000011BA  103C 000E                183                  MOVE.B      #14, D0
000011BE  4E4F                     184                  TRAP        #15
000011C0                           185                  
000011C0  4EB9 0000190C            186                  JSR         PRINTSPACE
000011C6  4E75                     187                  RTS
000011C8                           188                  
000011C8  43F9 000035EA            189  PRINTWORD       LEA         WORDMESSAGE, A1
000011CE  103C 000E                190                  MOVE.B      #14, D0
000011D2  4E4F                     191                  TRAP        #15
000011D4                           192                  
000011D4  4EB9 0000190C            193                  JSR         PRINTSPACE
000011DA  4E75                     194                  RTS
000011DC                           195                  
000011DC  43F9 000035ED            196  PRINTLONG       LEA         LONGMESSAGE, A1
000011E2  103C 000E                197                  MOVE.B      #14, D0
000011E6  4E4F                     198                  TRAP        #15
000011E8                           199                  
000011E8  4EB9 0000190C            200                  JSR         PRINTSPACE
000011EE  4E75                     201                  RTS
000011F0                           202                  
000011F0                           203  *-----------------------------------PRINTEAS-------------------------------------
000011F0                           204  *Description: This branch prints the EAs
000011F0                           205  *--------------------------------------------------------------------------------
000011F0                           206  
000011F0  5206                     207  PRINTDESTINATION     ADD.B       #$1, D6             *Add 1 to size
000011F2                           208  
000011F2  BC3C 0001                209                  CMP.B       #$1, D6             *Check if Dn
000011F6  6700 00C4                210                  BEQ         DNEAD                *It's DN
000011FA                           211                  
000011FA  BC3C 0002                212                  CMP.B       #$2, D6             *Check if An
000011FE  6700 00D2                213                  BEQ         ANEAD
00001202                           214                  
00001202  BC3C 0004                215                  CMP.B       #$4, D6             *Check if (An)
00001206  6700 00E0                216                  BEQ         ANIEAD
0000120A                           217                  
0000120A  BC3C 0005                218                  CMP.B       #$5, D6             *Check if (An)+
0000120E  6700 00FA                219                  BEQ         ANPLUSEAD       
00001212                           220                  
00001212  BC3C 0006                221                  CMP.B       #$6, D6             *Check if -(An)
00001216  6700 0114                222                  BEQ         ANMINUSEAD      
0000121A                           223                  
0000121A  BC3C 0007                224                  CMP.B       #$7, D6             *Check if xxx.w
0000121E  6700 012E                225                  BEQ         XXXWEAD          
00001222                           226                  
00001222  BC3C 0008                227                  CMP.B       #$8, D6             *Check if xxx.l
00001226  6700 0156                228                  BEQ         XXXLEAD
0000122A                           229                  
0000122A  BC3C 0009                230                  CMP.B       #$9, D6             *Check if data
0000122E  6700 0182                231                  BEQ         DATAEAD
00001232                           232                  
00001232  BC3C 0011                233                  CMP.B       #$11, D6            *Check if list
00001236  6700 0002                234                  BEQ         ADLISTEAD
0000123A                           235                  
0000123A  4243                     236  ADLISTEAD       CLR         D3
0000123C  4241                     237                  CLR         D1
0000123E  4246                     238                  CLR         D6
00001240  1232 3000                239  ADLISTEALOOPD   MOVE.B      (A2, D3), D1      *retrive element
00001244  BC3C 0000                240                  CMP.B       #$0, D6
00001248  6600 005E                241                  BNE         ADLISTSLASHD
0000124C                           242                  
0000124C  B63C 0007                243  ADLISTEALOOP2D  CMP.B       #7, D3              *Check if index less than 7
00001250  6F00 0006                244                  BLE         DLISTD
00001254                           245                  
00001254  6000 0024                246                  BRA         ALISTD
00001258                           247                  
00001258  B23C 0001                248  DLISTD          CMP.B       #$1, D1         *Check if element 1
0000125C  6600 0040                249                  BNE         CHECKADLISTD
00001260                           250                  
00001260  43F9 00003713            251                  LEA         DNMESSAGE, A1       *Show D
00001266  103C 000E                252                  MOVE.B      #14, D0
0000126A  4E4F                     253                  TRAP        #15
0000126C                           254                  
0000126C  1C01                     255                  MOVE.B      D1, D6              *Conserve num
0000126E  1203                     256                  MOVE.B      D3, D1              *Move counter to D1
00001270  103C 0003                257                  MOVE.B      #3, D0              *Show n
00001274  4E4F                     258                  TRAP        #15
00001276                           259                  
00001276  6000 0026                260                  BRA         CHECKADLISTD
0000127A                           261                  
0000127A  B23C 0001                262  ALISTD          CMP.B       #$1, D1         *Check if element 1
0000127E  6600 001E                263                  BNE         CHECKADLISTD
00001282                           264                  
00001282  43F9 00003715            265                  LEA         ANMESSAGE, A1       *Show A
00001288  103C 000E                266                  MOVE.B      #14, D0
0000128C  4E4F                     267                  TRAP        #15
0000128E                           268                  
0000128E  1C01                     269                  MOVE.B      D1, D6              *Conserve num
00001290  1203                     270                  MOVE.B      D3, D1              *Move counter to D1
00001292  5101                     271                  SUB.B       #8, D1              *Subtract 8
00001294  103C 0003                272                  MOVE.B      #3, D0              *Show n
00001298  4E4F                     273                  TRAP        #15
0000129A                           274                  
0000129A  6000 0002                275                  BRA         CHECKADLISTD
0000129E                           276                  
0000129E  5203                     277  CHECKADLISTD    ADD.B       #1, D3              *add counter
000012A0  B63C 0010                278                  CMP.B       #16, D3
000012A4  669A                     279                  BNE         ADLISTEALOOPD
000012A6                           280                  
000012A6  4E75                     281                  RTS        
000012A8                           282                  
000012A8  B23C 0000                283  ADLISTSLASHD    CMP.B       #$0, D1
000012AC  679E                     284                  BEQ         ADLISTEALOOP2D
000012AE                           285                  
000012AE  43F9 000036E8            286                  LEA         SLASHMESSAGE, A1
000012B4  103C 000E                287                  MOVE.B      #14, D0
000012B8  4E4F                     288                  TRAP        #15
000012BA                           289                  
000012BA  6090                     290                  BRA         ADLISTEALOOP2D
000012BC                           291                  
000012BC  43F9 00003713            292  DNEAD           LEA         DNMESSAGE, A1       *Show D
000012C2  103C 000E                293                  MOVE.B      #14, D0
000012C6  4E4F                     294                  TRAP        #15
000012C8                           295                  
000012C8  1203                     296                  MOVE.B      D3, D1              *Show n
000012CA  103C 0003                297                  MOVE.B      #3, D0
000012CE  4E4F                     298                  TRAP        #15
000012D0                           299                  
000012D0  4E75                     300                  RTS
000012D2                           301                  
000012D2  43F9 00003715            302  ANEAD           LEA         ANMESSAGE, A1       *Show A
000012D8  103C 000E                303                  MOVE.B      #14, D0
000012DC  4E4F                     304                  TRAP        #15
000012DE                           305                  
000012DE  1203                     306                  MOVE.B      D3, D1              *Show n
000012E0  103C 0003                307                  MOVE.B      #3, D0
000012E4  4E4F                     308                  TRAP        #15
000012E6                           309                  
000012E6  4E75                     310                  RTS
000012E8                           311                  
000012E8  43F9 00003717            312  ANIEAD          LEA         ANIOPENMESSAGE, A1  *Show (A
000012EE  103C 000E                313                  MOVE.B      #14, D0
000012F2  4E4F                     314                  TRAP        #15
000012F4                           315                  
000012F4  1203                     316                  MOVE.B      D3, D1              *Show n
000012F6  103C 0003                317                  MOVE.B      #3, D0
000012FA  4E4F                     318                  TRAP        #15
000012FC                           319                  
000012FC  43F9 0000371A            320                  LEA         ANICLOSEMESSAGE, A1 *Show )  
00001302  103C 000E                321                  MOVE.B      #14, D0
00001306  4E4F                     322                  TRAP        #15   
00001308                           323                  
00001308  4E75                     324                  RTS
0000130A                           325                  
0000130A  43F9 00003717            326  ANPLUSEAD       LEA         ANIOPENMESSAGE, A1  *Show (A
00001310  103C 000E                327                  MOVE.B      #14, D0
00001314  4E4F                     328                  TRAP        #15
00001316                           329                  
00001316  1203                     330                  MOVE.B      D3, D1              *Show n
00001318  103C 0003                331                  MOVE.B      #3, D0
0000131C  4E4F                     332                  TRAP        #15
0000131E                           333                  
0000131E  43F9 0000371C            334                  LEA         ANPLUSCLOSEMESSAGE, A1 *Show )+  
00001324  103C 000E                335                  MOVE.B      #14, D0
00001328  4E4F                     336                  TRAP        #15  
0000132A                           337                  
0000132A  4E75                     338                  RTS
0000132C                           339                  
0000132C  43F9 0000371F            340  ANMINUSEAD      LEA         ANMINUSOPENMESSAGE, A1  *Show -(A
00001332  103C 000E                341                  MOVE.B      #14, D0
00001336  4E4F                     342                  TRAP        #15
00001338                           343                  
00001338  1203                     344                  MOVE.B      D3, D1              *Show n
0000133A  103C 0003                345                  MOVE.B      #3, D0
0000133E  4E4F                     346                  TRAP        #15
00001340                           347                  
00001340  43F9 0000371A            348                  LEA         ANICLOSEMESSAGE, A1 *Show )  
00001346  103C 000E                349                  MOVE.B      #14, D0
0000134A  4E4F                     350                  TRAP        #15 
0000134C                           351                  
0000134C  4E75                     352                  RTS
0000134E                           353                  
0000134E  43F9 000036EF            354  XXXWEAD         LEA         DOLLARMESSAGE, A1
00001354  103C 000E                355                  MOVE.B      #14, D0
00001358  4E4F                     356                  TRAP        #15
0000135A                           357  
0000135A  1C3C 0004                358                  MOVE.B      #$4, D6             *Put actual size in D5
0000135E  E95B                     359  XXXWEALOOPD     ROL.W       #$4, D3             *Shift left to right position
00001360  3003                     360                  MOVE.W      D3, D0              *Move to D0 for backup
00001362  C67C 000F                361                  AND.W       #$F, D3             *Isolate first byte
00001366  1203                     362                  MOVE.B      D3, D1              *Move byte to D1
00001368  3600                     363                  MOVE.W      D0, D3              *Move original back to D2
0000136A  C67C FFF0                364                  AND.W       #$FFF0, D3          *Remove first 4 bits
0000136E  5306                     365                  SUB.B       #$1, D6
00001370                           366                  
00001370  4EB9 0000191A            367                  JSR         COMPAREADDRESS
00001376                           368                  
00001376  BC3C 0000                369                  CMP.B       #$0, D6
0000137A  66E2                     370                  BNE         XXXWEALOOPD
0000137C                           371                  
0000137C  4E75                     372                  RTS
0000137E                           373                  
0000137E  43F9 000036EF            374  XXXLEAD         LEA         DOLLARMESSAGE, A1
00001384  103C 000E                375                  MOVE.B      #14, D0
00001388  4E4F                     376                  TRAP        #15
0000138A                           377  
0000138A  1C3C 0008                378                  MOVE.B      #$8, D6             *Put actual size in D5
0000138E  E99B                     379  XXXLEALOOPD     ROL.L       #$4, D3             *Shift left to right position
00001390  2003                     380                  MOVE.L      D3, D0              *Move to D0 for backup
00001392  C6BC 0000000F            381                  AND.L       #$F, D3             *Isolate first byte
00001398  1203                     382                  MOVE.B      D3, D1              *Move byte to D1
0000139A  2600                     383                  MOVE.L      D0, D3              *Move original back to D2
0000139C  C6BC FFFFFFF0            384                  AND.L       #$FFFFFFF0, D3      *Remove first 4 bits
000013A2  5306                     385                  SUB.B       #$1, D6
000013A4                           386                  
000013A4  4EB9 0000191A            387                  JSR         COMPAREADDRESS
000013AA                           388                  
000013AA  BC3C 0000                389                  CMP.B       #$0, D6
000013AE  66DE                     390                  BNE         XXXLEALOOPD
000013B0                           391                  
000013B0  4E75                     392                  RTS
000013B2                           393       
000013B2  43F9 000036F1            394  DATAEAD         LEA         POUNDMESSAGE, A1
000013B8  103C 000E                395                  MOVE.B      #14, D0
000013BC  4E4F                     396                  TRAP        #15
000013BE                           397                  
000013BE  43F9 000036EF            398                  LEA         DOLLARMESSAGE, A1
000013C4  103C 000E                399                  MOVE.B      #14, D0
000013C8  4E4F                     400                  TRAP        #15
000013CA                           401  
000013CA  BEBC 00000001            402                  CMP.L       #$1, D7
000013D0  6700 0016                403                  BEQ         ADDBYTE
000013D4                           404                  
000013D4  BEBC 00000002            405                  CMP.L       #$2, D7
000013DA  6700 0012                406                  BEQ         ADDWORD
000013DE                           407                  
000013DE  BEBC 00000003            408                  CMP.L       #$3, D7
000013E4  6700 000E                409                  BEQ         ADDLONG
000013E8                           410                  
000013E8  7E02                     411  ADDBYTE         MOVE.L      #$2, D7
000013EA  6000 000E                412                  BRA         DATAEALOOPD
000013EE                           413                  
000013EE  7E04                     414  ADDWORD         MOVE.L      #$4, D7
000013F0  6000 0008                415                  BRA         DATAEALOOPD
000013F4                           416                
000013F4  7E08                     417  ADDLONG         MOVE.L      #$8, D7
000013F6  6000 0002                418                  BRA         DATAEALOOPD
000013FA                           419  
000013FA  E99B                     420  DATAEALOOPD     ROL.L       #$4, D3             *Shift left to right position
000013FC  2003                     421                  MOVE.L      D3, D0              *Move to D0 for backup
000013FE  C6BC 0000000F            422                  AND.L       #$F, D3             *Isolate first byte
00001404  4241                     423                  CLR         D1
00001406  1203                     424                  MOVE.B      D3, D1              *Move byte to D1
00001408  2600                     425                  MOVE.L      D0, D3              *Move original back to D2
0000140A  C6BC FFFFFFF0            426                  AND.L       #$FFFFFFF0, D3      *Remove first 4 bits
00001410  5307                     427                  SUB.B       #$1, D7
00001412                           428                  
00001412  4EB9 0000191A            429                  JSR         COMPAREADDRESS
00001418                           430                  
00001418  BE3C 0000                431                  CMP.B       #$0, D7
0000141C  66DC                     432                  BNE         DATAEALOOPD
0000141E                           433                  
0000141E  4E75                     434                  RTS
00001420                           435                  
00001420                           436  
00001420  5205                     437  PRINTSOURCE     ADD.B       #$1, D5             *Add 1 to size
00001422                           438  
00001422  BA3C 0001                439                  CMP.B       #$1, D5             *Check if Dn
00001426  6700 015E                440                  BEQ         DNEA                *It's DN
0000142A                           441                  
0000142A  BA3C 0002                442                  CMP.B       #$2, D5             *Check if An
0000142E  6700 016C                443                  BEQ         ANEA
00001432                           444                  
00001432  BA3C 0004                445                  CMP.B       #$4, D5             *Check if (An)
00001436  6700 017A                446                  BEQ         ANIEA
0000143A                           447                  
0000143A  BA3C 0005                448                  CMP.B       #$5, D5             *Check if (An)+
0000143E  6700 0194                449                  BEQ         ANPLUSEA       
00001442                           450                  
00001442  BA3C 0006                451                  CMP.B       #$6, D5             *Check if -(An)
00001446  6700 01AE                452                  BEQ         ANMINUSEA      
0000144A                           453                  
0000144A  BA3C 0007                454                  CMP.B       #$7, D5             *Check if xxx.w
0000144E  6700 01C8                455                  BEQ         XXXWEA          
00001452                           456                  
00001452  BA3C 0008                457                  CMP.B       #$8, D5             *Check if xxx.l
00001456  6700 01F0                458                  BEQ         XXXLEA
0000145A                           459                  
0000145A  BA3C 0009                460                  CMP.B       #$9, D5             *Check if data
0000145E  6700 021C                461                  BEQ         DATAEA
00001462                           462                  
00001462  BA3C 0011                463                  CMP.B       #$11, D5            *Check if list
00001466  6700 000A                464                  BEQ         ADLISTEA
0000146A                           465                  
0000146A  BA3C 0012                466                  CMP.B       #$12, D5            *Check if list
0000146E  6700 0084                467                  BEQ         DALISTEA
00001472                           468                  
00001472  4242                     469  ADLISTEA        CLR         D2
00001474  4241                     470                  CLR         D1
00001476  4245                     471                  CLR         D5
00001478  1232 2000                472  ADLISTEALOOP    MOVE.B      (A2, D2), D1      *retrive element
0000147C  BA3C 0000                473                  CMP.B       #$0, D5
00001480  6600 005E                474                  BNE         ADLISTSLASH
00001484                           475                  
00001484  B43C 0007                476  ADLISTEALOOP2   CMP.B       #7, D2              *Check if index less than 7
00001488  6F00 0006                477                  BLE         DLIST
0000148C                           478                  
0000148C  6000 0024                479                  BRA         ALIST
00001490                           480                  
00001490  B23C 0001                481  DLIST           CMP.B       #$1, D1         *Check if element 1
00001494  6600 0040                482                  BNE         CHECKADLIST
00001498                           483                  
00001498  43F9 00003713            484                  LEA         DNMESSAGE, A1       *Show D
0000149E  103C 000E                485                  MOVE.B      #14, D0
000014A2  4E4F                     486                  TRAP        #15
000014A4                           487                  
000014A4  1A01                     488                  MOVE.B      D1, D5              *Conserve num
000014A6  1202                     489                  MOVE.B      D2, D1              *Move counter to D1
000014A8  103C 0003                490                  MOVE.B      #3, D0              *Show n
000014AC  4E4F                     491                  TRAP        #15
000014AE                           492                  
000014AE  6000 0026                493                  BRA         CHECKADLIST
000014B2                           494                  
000014B2  B23C 0001                495  ALIST           CMP.B       #$1, D1         *Check if element 1
000014B6  6600 001E                496                  BNE         CHECKADLIST
000014BA                           497                  
000014BA  43F9 00003715            498                  LEA         ANMESSAGE, A1       *Show A
000014C0  103C 000E                499                  MOVE.B      #14, D0
000014C4  4E4F                     500                  TRAP        #15
000014C6                           501                  
000014C6  1A01                     502                  MOVE.B      D1, D5              *Conserve num
000014C8  1202                     503                  MOVE.B      D2, D1              *Move counter to D1
000014CA  5101                     504                  SUB.B       #8, D1              *Subtract 8
000014CC  103C 0003                505                  MOVE.B      #3, D0              *Show n
000014D0  4E4F                     506                  TRAP        #15
000014D2                           507                  
000014D2  6000 0002                508                  BRA         CHECKADLIST
000014D6                           509                  
000014D6  5202                     510  CHECKADLIST     ADD.B       #1, D2              *add counter
000014D8  B43C 0010                511                  CMP.B       #16, D2
000014DC  669A                     512                  BNE         ADLISTEALOOP
000014DE                           513                  
000014DE  4E75                     514                  RTS        
000014E0                           515                  
000014E0  B23C 0000                516  ADLISTSLASH     CMP.B       #$0, D1
000014E4  679E                     517                  BEQ         ADLISTEALOOP2
000014E6                           518                  
000014E6  43F9 000036E8            519                  LEA         SLASHMESSAGE, A1
000014EC  103C 000E                520                  MOVE.B      #14, D0
000014F0  4E4F                     521                  TRAP        #15
000014F2                           522                  
000014F2  6090                     523                  BRA         ADLISTEALOOP2
000014F4                           524                 
000014F4                           525                  
000014F4  4242                     526  DALISTEA        CLR         D2
000014F6  4241                     527                  CLR         D1
000014F8  4245                     528                  CLR         D5
000014FA  1232 2000                529  DALISTEALOOP    MOVE.B      (A2, D2), D1      *retrive element
000014FE  BA3C 0000                530                  CMP.B       #$0, D5
00001502  6600 006E                531                  BNE         DALISTSLASH
00001506                           532                  
00001506  B43C 0007                533  DALISTEALOOP2   CMP.B       #7, D2              *Check if index less than 7
0000150A  6F00 0032                534                  BLE         ALIST2
0000150E                           535                  
0000150E  6000 0002                536                  BRA         DLIST2
00001512                           537                  
00001512  B23C 0001                538  DLIST2          CMP.B       #$1, D1         *Check if element 1
00001516  6600 0050                539                  BNE         CHECKDALIST
0000151A                           540                  
0000151A  43F9 00003713            541                  LEA         DNMESSAGE, A1       *Show D
00001520  103C 000E                542                  MOVE.B      #14, D0
00001524  4E4F                     543                  TRAP        #15
00001526                           544                  
00001526  1A01                     545                  MOVE.B      D1, D5              *Conserve num
00001528  1202                     546                  MOVE.B      D2, D1              *Move counter to D1
0000152A  5101                     547                  SUB.B       #8, D1              *Subtract 8
0000152C  1001                     548                  MOVE.B      D1, D0              *Move counter to d0
0000152E  123C 0007                549                  MOVE.B      #7, D1              *Move 7 to d1
00001532  9200                     550                  SUB.B       D0, D1              *Do 7 - counter
00001534  103C 0003                551                  MOVE.B      #3, D0              *Show n
00001538  4E4F                     552                  TRAP        #15
0000153A                           553                  
0000153A  6000 002C                554                  BRA         CHECKDALIST
0000153E                           555                  
0000153E  B23C 0001                556  ALIST2          CMP.B       #$1, D1         *Check if element 1
00001542  6600 0024                557                  BNE         CHECKDALIST
00001546                           558                  
00001546  43F9 00003715            559                  LEA         ANMESSAGE, A1       *Show A
0000154C  103C 000E                560                  MOVE.B      #14, D0
00001550  4E4F                     561                  TRAP        #15
00001552                           562                  
00001552  1A01                     563                  MOVE.B      D1, D5              *Conserve num
00001554  1202                     564                  MOVE.B      D2, D1              *Move counter to D1
00001556  1001                     565                  MOVE.B      D1, D0              *Move counter to d0
00001558  123C 0007                566                  MOVE.B      #7, D1              *Move 7 to d1
0000155C  9200                     567                  SUB.B       D0, D1              *Do 7 - counter
0000155E  103C 0003                568                  MOVE.B      #3, D0              *Show n
00001562  4E4F                     569                  TRAP        #15
00001564                           570                  
00001564  6000 0002                571                  BRA         CHECKDALIST
00001568                           572                  
00001568  5202                     573  CHECKDALIST     ADD.B       #1, D2              *add counter
0000156A  B43C 0010                574                  CMP.B       #16, D2
0000156E  668A                     575                  BNE         DALISTEALOOP
00001570                           576                  
00001570  4E75                     577                  RTS        
00001572                           578                  
00001572  B23C 0000                579  DALISTSLASH     CMP.B       #$0, D1
00001576  678E                     580                  BEQ         DALISTEALOOP2
00001578                           581                  
00001578  43F9 000036E8            582                  LEA         SLASHMESSAGE, A1
0000157E  103C 000E                583                  MOVE.B      #14, D0
00001582  4E4F                     584                  TRAP        #15
00001584                           585                  
00001584  6080                     586                  BRA         DALISTEALOOP2
00001586                           587  
00001586                           588                                  
00001586  43F9 00003713            589  DNEA            LEA         DNMESSAGE, A1       *Show D
0000158C  103C 000E                590                  MOVE.B      #14, D0
00001590  4E4F                     591                  TRAP        #15
00001592                           592                  
00001592  1202                     593                  MOVE.B      D2, D1              *Show n
00001594  103C 0003                594                  MOVE.B      #3, D0
00001598  4E4F                     595                  TRAP        #15
0000159A                           596                  
0000159A  4E75                     597                  RTS
0000159C                           598                  
0000159C  43F9 00003715            599  ANEA            LEA         ANMESSAGE, A1       *Show A
000015A2  103C 000E                600                  MOVE.B      #14, D0
000015A6  4E4F                     601                  TRAP        #15
000015A8                           602                  
000015A8  1202                     603                  MOVE.B      D2, D1              *Show n
000015AA  103C 0003                604                  MOVE.B      #3, D0
000015AE  4E4F                     605                  TRAP        #15
000015B0                           606                  
000015B0  4E75                     607                  RTS
000015B2                           608                  
000015B2  43F9 00003717            609  ANIEA           LEA         ANIOPENMESSAGE, A1  *Show (A
000015B8  103C 000E                610                  MOVE.B      #14, D0
000015BC  4E4F                     611                  TRAP        #15
000015BE                           612                  
000015BE  1202                     613                  MOVE.B      D2, D1              *Show n
000015C0  103C 0003                614                  MOVE.B      #3, D0
000015C4  4E4F                     615                  TRAP        #15
000015C6                           616                  
000015C6  43F9 0000371A            617                  LEA         ANICLOSEMESSAGE, A1 *Show )  
000015CC  103C 000E                618                  MOVE.B      #14, D0
000015D0  4E4F                     619                  TRAP        #15   
000015D2                           620                  
000015D2  4E75                     621                  RTS
000015D4                           622                  
000015D4  43F9 00003717            623  ANPLUSEA        LEA         ANIOPENMESSAGE, A1  *Show (A
000015DA  103C 000E                624                  MOVE.B      #14, D0
000015DE  4E4F                     625                  TRAP        #15
000015E0                           626                  
000015E0  1202                     627                  MOVE.B      D2, D1              *Show n
000015E2  103C 0003                628                  MOVE.B      #3, D0
000015E6  4E4F                     629                  TRAP        #15
000015E8                           630                  
000015E8  43F9 0000371C            631                  LEA         ANPLUSCLOSEMESSAGE, A1 *Show )+  
000015EE  103C 000E                632                  MOVE.B      #14, D0
000015F2  4E4F                     633                  TRAP        #15  
000015F4                           634                  
000015F4  4E75                     635                  RTS
000015F6                           636                  
000015F6  43F9 0000371F            637  ANMINUSEA       LEA         ANMINUSOPENMESSAGE, A1  *Show -(A
000015FC  103C 000E                638                  MOVE.B      #14, D0
00001600  4E4F                     639                  TRAP        #15
00001602                           640                  
00001602  1202                     641                  MOVE.B      D2, D1              *Show n
00001604  103C 0003                642                  MOVE.B      #3, D0
00001608  4E4F                     643                  TRAP        #15
0000160A                           644                  
0000160A  43F9 0000371A            645                  LEA         ANICLOSEMESSAGE, A1 *Show )  
00001610  103C 000E                646                  MOVE.B      #14, D0
00001614  4E4F                     647                  TRAP        #15 
00001616                           648                  
00001616  4E75                     649                  RTS
00001618                           650                  
00001618  43F9 000036EF            651  XXXWEA          LEA         DOLLARMESSAGE, A1
0000161E  103C 000E                652                  MOVE.B      #14, D0
00001622  4E4F                     653                  TRAP        #15
00001624                           654  
00001624  1A3C 0004                655                  MOVE.B      #$4, D5             *Put actual size in D5
00001628  E95A                     656  XXXWEALOOP      ROL.W       #$4, D2             *Shift left to right position
0000162A  3002                     657                  MOVE.W      D2, D0              *Move to D0 for backup
0000162C  C47C 000F                658                  AND.W       #$F, D2             *Isolate first byte
00001630  1202                     659                  MOVE.B      D2, D1              *Move byte to D1
00001632  3400                     660                  MOVE.W      D0, D2              *Move original back to D2
00001634  C47C FFF0                661                  AND.W       #$FFF0, D2          *Remove first 4 bits
00001638  5305                     662                  SUB.B       #$1, D5
0000163A                           663                  
0000163A  4EB9 0000191A            664                  JSR         COMPAREADDRESS
00001640                           665                  
00001640  BA3C 0000                666                  CMP.B       #$0, D5
00001644  66E2                     667                  BNE         XXXWEALOOP
00001646                           668                  
00001646  4E75                     669                  RTS
00001648                           670                  
00001648  43F9 000036EF            671  XXXLEA          LEA         DOLLARMESSAGE, A1
0000164E  103C 000E                672                  MOVE.B      #14, D0
00001652  4E4F                     673                  TRAP        #15
00001654                           674  
00001654  1A3C 0008                675                  MOVE.B      #$8, D5             *Put actual size in D5
00001658  E99A                     676  XXXLEALOOP      ROL.L       #$4, D2             *Shift left to right position
0000165A  2002                     677                  MOVE.L      D2, D0              *Move to D0 for backup
0000165C  C4BC 0000000F            678                  AND.L       #$F, D2             *Isolate first byte
00001662  1202                     679                  MOVE.B      D2, D1              *Move byte to D1
00001664  2400                     680                  MOVE.L      D0, D2              *Move original back to D2
00001666  C4BC FFFFFFF0            681                  AND.L       #$FFFFFFF0, D2      *Remove first 4 bits
0000166C  5305                     682                  SUB.B       #$1, D5
0000166E                           683                  
0000166E  4EB9 0000191A            684                  JSR         COMPAREADDRESS
00001674                           685                  
00001674  BA3C 0000                686                  CMP.B       #$0, D5
00001678  66DE                     687                  BNE         XXXLEALOOP
0000167A                           688                  
0000167A  4E75                     689                  RTS
0000167C                           690                  
0000167C  43F9 000036F1            691  DATAEA          LEA         POUNDMESSAGE, A1
00001682  103C 000E                692                  MOVE.B      #14, D0
00001686  4E4F                     693                  TRAP        #15
00001688                           694                  
00001688  43F9 000036EF            695                  LEA         DOLLARMESSAGE, A1
0000168E  103C 000E                696                  MOVE.B      #14, D0
00001692  4E4F                     697                  TRAP        #15
00001694                           698  
00001694  BEBC 00000001            699                  CMP.L       #$1, D7
0000169A  6700 0016                700                  BEQ         ADDBYTES
0000169E                           701                  
0000169E  BEBC 00000002            702                  CMP.L       #$2, D7
000016A4  6700 0014                703                  BEQ         ADDWORDS
000016A8                           704                  
000016A8  BEBC 00000003            705                  CMP.L       #$3, D7
000016AE  6700 0012                706                  BEQ         ADDLONGS
000016B2                           707                  
000016B2  7E02                     708  ADDBYTES        MOVE.L      #$2, D7
000016B4  7A01                     709                  MOVE.L      #$1, D5
000016B6  6000 0012                710                  BRA         DATAEALOOP
000016BA                           711                  
000016BA  7E04                     712  ADDWORDS        MOVE.L      #$4, D7
000016BC  7A02                     713                  MOVE.L      #$2, D5
000016BE  6000 000A                714                  BRA         DATAEALOOP
000016C2                           715                
000016C2  7E08                     716  ADDLONGS        MOVE.L      #$8, D7
000016C4  7A03                     717                  MOVE.L      #$3, D5
000016C6  6000 0002                718                  BRA         DATAEALOOP
000016CA                           719                  
000016CA  BA7C 0001                720  DATAEALOOP      CMP.W       #$1, D5
000016CE  6700 0012                721                  BEQ         BYTEDATA
000016D2                           722                  
000016D2  BA7C 0002                723                  CMP.W       #$2, D5
000016D6  6700 0010                724                  BEQ         WORDDATA
000016DA                           725                  
000016DA  BA7C 0003                726                  CMP.W       #$3, D5
000016DE  6700 000E                727                  BEQ         LONGDATA
000016E2                           728                  
000016E2  E91A                     729  BYTEDATA        ROL.B       #$4, D2             *Shift left to right position
000016E4  6000 000E                730                  BRA         DATAEALOOP2
000016E8                           731                  
000016E8  E95A                     732  WORDDATA        ROL.W       #$4, D2             *Shift left to right position
000016EA  6000 0008                733                  BRA         DATAEALOOP2
000016EE                           734                  
000016EE  E99A                     735  LONGDATA        ROL.L       #$4, D2             *Shift left to right position
000016F0  6000 0002                736                  BRA         DATAEALOOP2
000016F4                           737                 
000016F4  2002                     738  DATAEALOOP2     MOVE.L      D2, D0              *Move to D0 for backup
000016F6  C4BC 0000000F            739                  AND.L       #$F, D2             *Isolate first byte
000016FC  4241                     740                  CLR         D1
000016FE  1202                     741                  MOVE.B      D2, D1              *Move byte to D1
00001700  2400                     742                  MOVE.L      D0, D2              *Move original back to D2
00001702  C4BC FFFFFFF0            743                  AND.L       #$FFFFFFF0, D2      *Remove first 4 bits
00001708  5307                     744                  SUB.B       #$1, D7
0000170A                           745                  
0000170A  4EB9 0000191A            746                  JSR         COMPAREADDRESS
00001710                           747                  
00001710  BE3C 0000                748                  CMP.B       #$0, D7
00001714  66B4                     749                  BNE         DATAEALOOP
00001716                           750                  
00001716  4E75                     751                  RTS
00001718                           752  
00001718                           753  *-----------------------------------Input----------------------------------------
00001718                           754  *Description: This branch handles the input part of the disassmbler
00001718                           755  *--------------------------------------------------------------------------------
00001718                           756  
00001718  43F9 000035F0            757  INPUT           LEA         INPUTMESSAGE, A1    *Show the first line
0000171E  103C 000D                758                  MOVE.B      #13, D0
00001722  4E4F                     759                  TRAP        #15    
00001724  43F9 0000363A            760                  LEA         INPUTMESSAGE1, A1
0000172A  103C 000D                761                  MOVE.B      #13, D0
0000172E  4E4F                     762                  TRAP        #15  
00001730                           763  
00001730  103C 0005                764  INPUTLOOP       MOVE.B      #5, D0              *Wait for user input (character)
00001734  4E4F                     765                  TRAP        #15
00001736                           766                  
00001736  B23C 002C                767  CHECKIFCOMMA    CMP.B       #$2C, D1            *If not, check if it's a comma
0000173A  6700 006A                768                  BEQ         COMMAINPUT          *If yes, it's a comma
0000173E                           769                  
0000173E  B23C 002E                770  CHECKIFPERIOD   CMP.B       #$2E, D1            *If not, check if it's a period
00001742  6700 0066                771                  BEQ         PERIODINPUT         *If yes, it's a period
00001746                           772                  
00001746  B23C 0008                773  CHECKBACKSPACE  CMP.B       #$8, D1             *If not, check if backspace
0000174A  6700 0078                774                  BEQ         BACKSPACEINPUT
0000174E                           775                  
0000174E  B23C 0061                776  CHECKLCA        CMP.B       #$61, D1
00001752  6C00 0006                777                  BGE         CHECKLCZ
00001756                           778                  
00001756  6000 0016                779                  BRA         CHECKMOREA
0000175A                           780                  
0000175A  B23C 007A                781  CHECKLCZ        CMP.B       #$7A, D1
0000175E  6F00 0006                782                  BLE         DECREASELC
00001762                           783                  
00001762  6000 000A                784                  BRA         CHECKMOREA
00001766                           785                  
00001766  0441 0020                786  DECREASELC      SUB.W       #$20, D1
0000176A  6000 0002                787                  BRA         CHECKMOREA
0000176E                           788          
0000176E  B23C 0041                789  CHECKMOREA      CMP.B       #$41, D1            *Check if letter better than A
00001772  6C00 0006                790                  BGE         CHECKLESSF          *If yes, check if less than F
00001776                           791                  
00001776  6000 000A                792                  BRA         CHECKMORE0          *If not, check if number
0000177A                           793                  
0000177A  B23C 0046                794  CHECKLESSF      CMP.B       #$46, D1            *Check if less than F
0000177E  6F00 0016                795                  BLE         LETTERINPUT         *If yes, then it's an acceptable letter input
00001782                           796          
00001782  B23C 0030                797  CHECKMORE0      CMP.B       #$30, D1            *If not, then check if number better than 0
00001786  6C00 0004                798                  BGE         CHECKIFLESS9        *If yes, check if less than 9
0000178A                           799                  
0000178A  60A4                     800                  BRA         INPUTLOOP
0000178C                           801                  
0000178C  B23C 0039                802  CHECKIFLESS9    CMP.B       #$39, D1            *Check if less than 9
00001790  6F00 000C                803                  BLE         NUMBERINPUT         *If yes, then it's a number input
00001794                           804                  
00001794  609A                     805                  BRA         INPUTLOOP           *If not, then it's an unacceptable characher
00001796                           806          
00001796  0401 0037                807  LETTERINPUT     SUB.B       #$37, D1            *Subtract 37 from D1 (since it's in ASCII)
0000179A  6000 0054                808                  BRA         DOREST
0000179E                           809          
0000179E  0401 0030                810  NUMBERINPUT     SUB.B       #$30, D1            *Subtract 30 from D1 (since it's in ASCII)
000017A2  6000 004C                811                  BRA         DOREST
000017A6                           812                  
000017A6  5204                     813  COMMAINPUT      ADD.B       #$1, D4             *Add 1 to D4 to show that the ending address
000017A8  6086                     814                  BRA         INPUTLOOP 
000017AA                           815                  
000017AA  B682                     816  PERIODINPUT     CMP.L       D2, D3
000017AC  6D00 000C                817                  BLT         SWITCHINPUT
000017B0                           818                  
000017B0  2042                     819                  MOVEA.L     D2, A0              *Move the starting address to A0
000017B2  2843                     820                  MOVEA.L     D3, A4              *Move the ending address to A4
000017B4  2A46                     821                  MOVEA.L     D6, A5
000017B6                           822  
000017B6  6000 005C                823                  BRA         EMPTYLINE
000017BA                           824                  
000017BA  2842                     825  SWITCHINPUT     MOVEA.L     D2, A4              *Move the starting address to A0
000017BC  2043                     826                  MOVEA.L     D3, A0              *Move the ending address to 
000017BE                           827  A0
000017BE  2A45                     828                  MOVEA.L     D5, A5
000017C0                           829  
000017C0                           830  
000017C0  6000 0052                831                  BRA         EMPTYLINE
000017C4                           832                  
000017C4  B83C 0000                833  BACKSPACEINPUT  CMP.B       #$0, D4             *Check if starting address or not
000017C8  6700 0006                834                  BEQ         BACKSTART
000017CC                           835                  
000017CC  6700 000C                836                  BEQ         BACKEND
000017D0                           837                  
000017D0  E882                     838  BACKSTART       ASR.L       #$4, D2             *Shift to right
000017D2  5385                     839                  SUB.L       #$1, D5             *Subtract size
000017D4                           840                  *SUBA.L       #$1, A5
000017D4                           841  
000017D4  538D                     842                  SUBA.L       #$1, A5
000017D6                           843                  
000017D6  6000 FF58                844                  BRA         INPUTLOOP
000017DA                           845                  
000017DA  BC3C 0000                846  BACKEND         CMP.B       #$0, D6
000017DE  6700 000A                847                  BEQ         BACKCOMMA
000017E2                           848                  
000017E2  E883                     849                  ASR.L       #$4, D3             *Shift to right
000017E4  5386                     850                  SUB.L       #$1, D6             *Subtract size
000017E6                           851                  
000017E6  6000 FF48                852                  BRA         INPUTLOOP
000017EA                           853                  
000017EA  7800                     854  BACKCOMMA       MOVE.L      #$0, D4
000017EC  6000 FF42                855                  BRA         INPUTLOOP
000017F0                           856          
000017F0  B83C 0000                857  DOREST          CMP.B       #$0, D4             *Check if it's starting or ending
000017F4  6700 0006                858                  BEQ         STARTINGADDRESS     *If yes, it's part of starting address
000017F8                           859                  
000017F8  6000 000E                860                  BRA         ENDINGADDRESS       *If not, it's part of ending address
000017FC                           861                  
000017FC  E982                     862  STARTINGADDRESS ASL.L       #$4, D2             *Shift to left
000017FE  D481                     863                  ADD.L       D1, D2              *Add the number to D2
00001800  5285                     864                  ADD.L       #$1, D5             *Add count in D5
00001802                           865  
00001802                           866                  *ADDA.L      #$1, A5             *Add to A5 as well
00001802                           867  
00001802  528D                     868                  ADDA.L      #$1, A5             *Add to A5 as well
00001804                           869      
00001804  6000 FF2A                870                  BRA         INPUTLOOP           *Go back to the input loop
00001808                           871                  
00001808  E983                     872  ENDINGADDRESS   ASL.L       #$4, D3             *Shift to left
0000180A  D681                     873                  ADD.L       D1, D3              *Add the number to D3
0000180C  5286                     874                  ADD.L       #$1, D6             *Add count in D6
0000180E                           875  
0000180E  528D                     876                  ADDA.L      #$1, A5
00001810                           877  
00001810                           878          
00001810  6000 FF1E                879                  BRA         INPUTLOOP           *Go back to the input loop
00001814                           880              
00001814  43F9 00003562            881  EMPTYLINE       LEA         EMPTYLINEMESSAGE, A1  *Empty line
0000181A  103C 000D                882                  MOVE.B      #13, D0
0000181E  4E4F                     883                  TRAP        #15
00001820                           884                  
00001820  4E75                     885                  RTS
00001822                           886  
00001822                           887  *----------------------------------------------------------------------------------------------------
00001822                           888  *                                           Subroutine: OUTPUTEND
00001822                           889  *Description: Handles what happens when the dissassembler is done
00001822                           890  *----------------------------------------------------------------------------------------------------
00001822                           891  
00001822  43F9 00003699            892  OUTPUTEND       LEA         ENDMESSAGE, A1
00001828  103C 000D                893                  MOVE.B      #13, D0
0000182C  4E4F                     894                  TRAP        #15
0000182E                           895  
0000182E                           896                  
0000182E                           897     
0000182E                           898          
0000182E                           899  
0000182E                           900  ENDLOOP    
0000182E  103C 0005                901                  MOVE.B #5, D0
00001832  4E4F                     902                  TRAP #15
00001834  B23C 006E                903                  CMP.B #$6E,D1
00001838                           904                  
00001838  6700 0020                905                  BEQ DONE
0000183C                           906                  
0000183C  B23C 0079                907                  CMP.B #$79,D1                
00001840  6700 0004                908                  BEQ TESTNEWRANGE                
00001844  60E8                     909                  BRA ENDLOOP
00001846                           910  TESTNEWRANGE    
00001846                           911                  *start next line on a new line
00001846  103C 000E                912                  MOVE.B #14,D0   
0000184A  43F9 00003563            913                  LEA NEWLINE,A1
00001850  4E4F                     914                  TRAP #15          
00001852                           915                  
00001852                           916                  *zero out memory 
00001852  4EB8 1174                917                  JSR CLEARALL      
00001856                           918                  
00001856                           919                  *start program over          
00001856  6000 F7A8                920                  BRA START
0000185A                           921  
0000185A  FFFF FFFF                922  DONE SIMHALT   
0000185E                           923  
0000185E                           924  
0000185E                           925  *----------------------------------------------------------------------------------------------------*                                           
0000185E                           926  *Subroutine: PRINTADDRESS
0000185E                           927  *Description: Prints the current address the disassembler is on
0000185E                           928  *----------------------------------------------------------------------------------------------------
0000185E                           929  
0000185E  2408                     930  PRINTADDRESS    MOVE.L      A0, D2              *Move current address to D2
00001860  2A0D                     931                  MOVE.L      A5, D5              *Move address size
00001862                           932                  *ADD.L       #$1, D5             *Add 1 to size
00001862  BABC 00000004            933                  CMP.L       #$4, D5             *Check if the length is >4
00001868  6E00 0010                934                  BGT         PRINTLONGADDRESS    *If yes, it's a long address
0000186C                           935  
0000186C  BABC 00000002            936                  CMP.L       #$2, D5             *Check if the length is >2
00001872  6E00 0038                937                  BGT         PRINTWORDADDRESS    *If yes, it's a word address
00001876                           938                  
00001876  6000 0064                939                  BRA         PRINTBYTEADDRESS    *If not, it's a byte address
0000187A                           940                  
0000187A  7E08                     941  PRINTLONGADDRESS    MOVE.L  #$8, D7
0000187C  9E85                     942                      SUB.L   D5, D7
0000187E  CFFC 0004                943                      MULS.W  #$4, D7
00001882  EFBA                     944                      ROL.L   D7, D2
00001884  E99A                     945  PLAL                ROL.L   #$4, D2             *Shift by 4 bits
00001886  2E02                     946                      MOVE.L  D2, D7              *Move to D7 for backup
00001888  C4BC 0000000F            947                      AND.L   #$F, D2             *Isolate first byte
0000188E  1202                     948                      MOVE.B  D2, D1              *Move byte to D1
00001890  2407                     949                      MOVE.L  D7, D2              *Move original back to D2
00001892  C4BC FFFFFFF0            950                      AND.L   #$FFFFFFF0, D2      *Remove first 4 bits
00001898  5305                     951                      SUB.B   #$1, D5             *Subtract 1 from length of address
0000189A                           952                      
0000189A  4EB9 0000191A            953                      JSR     COMPAREADDRESS        *Print the address
000018A0                           954                      
000018A0  BABC 00000000            955                      CMP.L   #$0, D5             *Check if the address length is 0
000018A6  66DC                     956                      BNE     PLAL                *If not, then loop again
000018A8                           957                      
000018A8  6000 0062                958                      BRA     PRINTSPACE          *If yes, then stop and print empty line
000018AC                           959                      
000018AC  7E04                     960  PRINTWORDADDRESS    MOVE.L  #$4, D7
000018AE  9E45                     961                      SUB.W   D5, D7
000018B0  CFFC 0004                962                      MULS.W  #$4, D7
000018B4  EF7A                     963                      ROL.W   D7, D2
000018B6  E95A                     964  PWAL                ROL.W   #$4, D2             *Shift by 4 bits
000018B8  2E02                     965                      MOVE.L  D2, D7              *Move to D7 for backup
000018BA  C4BC 0000000F            966                      AND.L   #$F, D2             *Isolate first byte
000018C0  1202                     967                      MOVE.B  D2, D1              *Move byte to D1
000018C2  2407                     968                      MOVE.L  D7, D2              *Move original back to D2
000018C4  C4BC FFFFFFF0            969                      AND.L   #$FFFFFFF0, D2      *Remove first 4 bits
000018CA  5305                     970                      SUB.B   #$1, D5             *Subtract 1 from length of address
000018CC                           971                      
000018CC  4EB9 0000191A            972                      JSR     COMPAREADDRESS        *Print the address
000018D2                           973                      
000018D2  BA7C 0000                974                      CMP.W   #$0, D5             *Check if the address length is 0
000018D6  66DE                     975                      BNE     PWAL                *If not, then loop again
000018D8                           976                      
000018D8  6000 0032                977                      BRA     PRINTSPACE          *If yes, then stop and print empty line
000018DC                           978                      
000018DC  7E02                     979  PRINTBYTEADDRESS    MOVE.L  #$2, D7
000018DE  9E45                     980                      SUB.W   D5, D7
000018E0  CFFC 0004                981                      MULS.W  #$4, D7
000018E4  EF3A                     982                      ROL.B   D7, D2
000018E6  E91A                     983  PBAL                ROL.B   #$4, D2             *Shift by 4 bits
000018E8  2E02                     984                      MOVE.L  D2, D7              *Move to D7 for backup
000018EA  C4BC 0000000F            985                      AND.L   #$F, D2             *Isolate first byte
000018F0  1202                     986                      MOVE.B  D2, D1              *Move byte to D1
000018F2  2407                     987                      MOVE.L  D7, D2              *Move original back to D2
000018F4  C4BC FFFFFFF0            988                      AND.L   #$FFFFFFF0, D2      *Remove first 4 bits
000018FA  5305                     989                      SUB.B   #$1, D5             *Subtract 1 from length of address
000018FC                           990                      
000018FC  4EB9 0000191A            991                      JSR     COMPAREADDRESS        *Print the address
00001902                           992                      
00001902  BA3C 0000                993                      CMP.B   #$0, D5             *Check if the address length is 0
00001906  66DE                     994                      BNE     PBAL                *If not, then loop again
00001908                           995                      
00001908  6000 0002                996                      BRA     PRINTSPACE          *If yes, then stop and print empty line
0000190C                           997                      
0000190C  43F9 000036D9            998  PRINTSPACE          LEA     SPACEMESSAGE, A1    *Display space
00001912  103C 000E                999                      MOVE.B  #14, D0
00001916  4E4F                    1000                      TRAP    #15
00001918                          1001                      
00001918  4E75                    1002                      RTS
0000191A                          1003                      
0000191A  B23C 0000               1004  COMPAREADDRESS      CMP.B   #$0, D1             *Check if 0
0000191E  6700 007A               1005                      BEQ     NUMBERZERO
00001922                          1006                      
00001922  B23C 0001               1007                      CMP.B   #$1, D1             *etc
00001926  6700 007C               1008                      BEQ     NUMBERONE
0000192A                          1009                      
0000192A  B23C 0002               1010                      CMP.B   #$2, D1
0000192E  6700 007E               1011                      BEQ     NUMBERTWO
00001932                          1012                      
00001932  B23C 0003               1013                      CMP.B   #$3, D1
00001936  6700 0080               1014                      BEQ     NUMBERTHREE
0000193A                          1015                      
0000193A  B23C 0004               1016                      CMP.B   #$4, D1
0000193E  6700 0082               1017                      BEQ     NUMBERFOUR
00001942                          1018                      
00001942  B23C 0005               1019                      CMP.B   #$5, D1
00001946  6700 0084               1020                      BEQ     NUMBERFIVE
0000194A                          1021                      
0000194A  B23C 0006               1022                      CMP.B   #$6, D1
0000194E  6700 0086               1023                      BEQ     NUMBERSIX
00001952                          1024                      
00001952  B23C 0007               1025                      CMP.B   #$7, D1
00001956  6700 0088               1026                      BEQ     NUMBERSEVEN
0000195A                          1027                      
0000195A  B23C 0008               1028                      CMP.B   #$8, D1
0000195E  6700 008A               1029                      BEQ     NUMBEREIGHT
00001962                          1030                      
00001962  B23C 0009               1031                      CMP.B   #$9, D1
00001966  6700 008C               1032                      BEQ     NUMBERNINE
0000196A                          1033                      
0000196A  B23C 000A               1034                      CMP.B   #$A, D1
0000196E  6700 008E               1035                      BEQ     NUMBERA
00001972                          1036                      
00001972  B23C 000B               1037                      CMP.B   #$B, D1
00001976  6700 0090               1038                      BEQ     NUMBERB
0000197A                          1039                      
0000197A  B23C 000C               1040                      CMP.B   #$C, D1
0000197E  6700 0092               1041                      BEQ     NUMBERC
00001982                          1042                      
00001982  B23C 000D               1043                      CMP.B   #$D, D1
00001986  6700 0094               1044                      BEQ     NUMBERD
0000198A                          1045                      
0000198A  B23C 000E               1046                      CMP.B   #$E, D1
0000198E  6700 0096               1047                      BEQ     NUMBERE
00001992                          1048                      
00001992  B23C 000F               1049                      CMP.B   #$F, D1
00001996  6700 0098               1050                      BEQ     NUMBERF
0000199A                          1051  
0000199A  43F9 000036F3           1052  NUMBERZERO          LEA     ZEROMESSAGE, A1
000019A0  6000 0098               1053                      BRA     SHOWADDRESS
000019A4                          1054                      
000019A4  43F9 000036F5           1055  NUMBERONE           LEA     ONEMESSAGE, A1
000019AA  6000 008E               1056                      BRA     SHOWADDRESS
000019AE                          1057                      
000019AE  43F9 000036F7           1058  NUMBERTWO           LEA     TWOMESSAGE, A1
000019B4  6000 0084               1059                      BRA     SHOWADDRESS
000019B8                          1060                      
000019B8  43F9 000036F9           1061  NUMBERTHREE         LEA     THREEMESSAGE, A1
000019BE  6000 007A               1062                      BRA     SHOWADDRESS
000019C2                          1063                      
000019C2  43F9 000036FB           1064  NUMBERFOUR          LEA     FOURMESSAGE, A1
000019C8  6000 0070               1065                      BRA     SHOWADDRESS
000019CC                          1066                      
000019CC  43F9 000036FD           1067  NUMBERFIVE          LEA     FIVEMESSAGE, A1
000019D2  6000 0066               1068                      BRA     SHOWADDRESS
000019D6                          1069                      
000019D6  43F9 000036FF           1070  NUMBERSIX           LEA     SIXMESSAGE, A1
000019DC  6000 005C               1071                      BRA     SHOWADDRESS
000019E0                          1072                      
000019E0  43F9 00003701           1073  NUMBERSEVEN         LEA     SEVENMESSAGE, A1
000019E6  6000 0052               1074                      BRA     SHOWADDRESS
000019EA                          1075                      
000019EA  43F9 00003703           1076  NUMBEREIGHT         LEA     EIGHTMESSAGE, A1
000019F0  6000 0048               1077                      BRA     SHOWADDRESS
000019F4                          1078                      
000019F4  43F9 00003705           1079  NUMBERNINE          LEA     NINEMESSAGE, A1
000019FA  6000 003E               1080                      BRA     SHOWADDRESS
000019FE                          1081                      
000019FE  43F9 00003707           1082  NUMBERA             LEA     AMESSAGE, A1
00001A04  6000 0034               1083                      BRA     SHOWADDRESS
00001A08                          1084                      
00001A08  43F9 00003709           1085  NUMBERB             LEA     BMESSAGE, A1
00001A0E  6000 002A               1086                      BRA     SHOWADDRESS
00001A12                          1087                      
00001A12  43F9 0000370B           1088  NUMBERC             LEA     CMESSAGE, A1
00001A18  6000 0020               1089                      BRA     SHOWADDRESS
00001A1C                          1090                      
00001A1C  43F9 0000370D           1091  NUMBERD             LEA     DMESSAGE, A1
00001A22  6000 0016               1092                      BRA     SHOWADDRESS
00001A26                          1093                      
00001A26  43F9 0000370F           1094  NUMBERE             LEA     EMESSAGE, A1
00001A2C  6000 000C               1095                      BRA     SHOWADDRESS
00001A30                          1096                      
00001A30  43F9 00003711           1097  NUMBERF             LEA     FMESSAGE, A1
00001A36  6000 0002               1098                      BRA     SHOWADDRESS
00001A3A                          1099                      
00001A3A                          1100                      
00001A3A  103C 000E               1101  SHOWADDRESS         MOVE.B  #14, D0             *Show number
00001A3E  4E4F                    1102                      TRAP    #15
00001A40                          1103                      
00001A40  4E75                    1104                      RTS                         *Go back
00001A42                          1105                      
00001A42                          1106                      
00001A42                          1107                                     
00001A42                          1108  
00001A42                          1109  *----------------------------------------------------------------------------------------------------
00001A42                          1110  *                                           Subroutine: CHECK1100
00001A42                          1111  *Description: Checks if opcode word starts with the binary 1100. If true it checks if it is AND or MULS
00001A42                          1112  *----------------------------------------------------------------------------------------------------
00001A42  C27C F000               1113  CHECK1100       AND.W   #$F000, D1      *Isolates the first 4 spaces
00001A46  B27C C000               1114                  CMP.W   #$C000, D1      *Checks if the first 4 spaces are 1100
00001A4A                          1115                  
00001A4A  6700 0004               1116                  BEQ     CHECKANDMULS    *If equal, then go check if it's AND or MULS
00001A4E                          1117                  
00001A4E  4E75                    1118                  RTS
00001A50                          1119              
00001A50  3200                    1120  CHECKANDMULS    MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001A52  C27C 01C0               1121                  AND.W   #$1C0, D1       *Isolate spaces 8 to 6
00001A56  B27C 01C0               1122                  CMP.W   #$1C0, D1       *Check if spaces 8 to 6 are 111
00001A5A                          1123                  
00001A5A  6700 0048               1124                  BEQ     OPMULS          *If yes, then it's MULS
00001A5E                          1125                      
00001A5E  6000 0002               1126                  BRA     OPAND          *If not, then it's AND
00001A62  43F9 00003593           1127  OPAND           LEA     ANDMESSAGE, A1  *Store the AND message
00001A68  183C 0013               1128                  MOVE.B  #$13, D4
00001A6C                          1129                  
00001A6C  3200                    1130                  MOVE.W  D0, D1
00001A6E  C27C 01C0               1131                  AND.W   #$1C0, D1       *Isolate OPMODE part
00001A72  B27C 0000               1132                  CMP.W   #$0, D1         *If OPMODE 000
00001A76  6700 0652               1133                  BEQ     SIZEB           *If yes, it's byte 
00001A7A                          1134                  
00001A7A  B27C 0100               1135                  CMP.W   #$100, D1       *If OPMODE 100
00001A7E  6700 064A               1136                  BEQ     SIZEB           *If yes, it's byte
00001A82                          1137                  
00001A82  B27C 0040               1138                  CMP.W   #$40, D1        *If OPMODE 001
00001A86  6700 0648               1139                  BEQ     SIZEW           *If yes, it's word
00001A8A                          1140                  
00001A8A  B27C 0140               1141                  CMP.W   #$140, D1       *If OPMODE 101
00001A8E  6700 0640               1142                  BEQ     SIZEW           *If yes, it's word
00001A92                          1143                  
00001A92  B27C 0080               1144                  CMP.W   #$80, D1        *If OPMODE 010
00001A96  6700 063E               1145                  BEQ     SIZEL           *If yes, it's long
00001A9A                          1146                  
00001A9A  B27C 0180               1147                  CMP.W   #$180, D1       *If OPMODE 110
00001A9E  6700 0636               1148                  BEQ     SIZEL           *If yes, it's long
00001AA2                          1149                  
00001AA2  4E75                    1150                  RTS   
00001AA4                          1151                  
00001AA4  43F9 00003597           1152  OPMULS          LEA     MULSMESSAGE, A1 *Store the MULS message
00001AAA  183C 0009               1153                  MOVE.B  #$9, D4
00001AAE                          1154                  
00001AAE  6000 0620               1155                  BRA     SIZEW           *It's always a word
00001AB2                          1156                  
00001AB2  4E75                    1157                  RTS
00001AB4                          1158  *---------------------------------------------END_CHECK1100-----------------------------------------------------
00001AB4                          1159  
00001AB4                          1160  
00001AB4                          1161  
00001AB4                          1162  
00001AB4                          1163  *----------------------------------------------------------------------------------------------------
00001AB4                          1164  *                                                Subroutine: CHECK0000
00001AB4                          1165  *Description: Checks if opcode word starts with the binary 0000. If true it idendifies if it is ANDI, ADDI, BCHG,CMPI or MOVE
00001AB4                          1166  *----------------------------------------------------------------------------------------------------
00001AB4  3200                    1167  CHECK0000       MOVE.W D0,D1      
00001AB6  C27C F000               1168                  AND.W   #$F000, D1      *Isolates the first 4 spaces
00001ABA  B27C 0000               1169                  CMP.W   #$0000, D1      *Checks if the first 4 spaces are 0000
00001ABE                          1170                  
00001ABE  6700 0010               1171                  BEQ     CHECKAABC       *If equal, then go check if it's ANDI, ADDI, BCHG and CMPI
00001AC2                          1172                  
00001AC2  C27C C000               1173                  AND.W   #$C000, D1      *Isolate the first 2 spaces
00001AC6  B27C 0000               1174                  CMP.W   #$0000, D1      *Check if the first 2 spaces are 00
00001ACA                          1175                  
00001ACA  6700 0044               1176                  BEQ     OPMOVE          *If true, it's MOVE
00001ACE                          1177                  
00001ACE  4E75                    1178                  RTS
00001AD0                          1179              
00001AD0  3200                    1180  CHECKAABC       MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001AD2  C27C 0100               1181                  AND.W   #$100, D1       *Isolate space 8
00001AD6  B27C 0100               1182                  CMP.W   #$100, D1       *Check if space 8 is 1
00001ADA                          1183                  
00001ADA  6700 0062               1184                  BEQ     OPBCHGR         *If yes, then it's BCHG (register)
00001ADE                          1185                  
00001ADE  3200                    1186                  MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001AE0  C27C 0800               1187                  AND.W   #$800, D1       *Isolate space 11
00001AE4  B27C 0800               1188                  CMP.W   #$800, D1       *Check if space 11 is 1
00001AE8                          1189                  
00001AE8  6700 0014               1190                  BEQ     CHECKCBD        *If yes, then check if CMPI or BCHG (data)
00001AEC                          1191                  
00001AEC  3200                    1192                  MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001AEE  C27C 0400               1193                  AND.W   #$400, D1       *Isolate space 10
00001AF2  B27C 0400               1194                  CMP.W   #$400, D1       *Check if space 10 is 1
00001AF6                          1195                  
00001AF6  6700 0090               1196                  BEQ     OPADDI          *If true, then it's ADDI
00001AFA                          1197                  
00001AFA  6000 00B6               1198                  BRA     OPANDI          *If not, then it's ANDI
00001AFE                          1199                  
00001AFE  3200                    1200  CHECKCBD        MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001B00  C27C 0400               1201                  AND.W   #$400, D1       *Isolate space 10
00001B04  B27C 0400               1202                  CMP.W   #$400, D1       *Check if space 10 is 1
00001B08                          1203  
00001B08  6700 0054               1204                  BEQ     OPCMPI          *If yes, then it's CMPI
00001B0C                          1205  
00001B0C  6000 0040               1206                  BRA     OPBCHGD         *If not, then it's BCHG (data)
00001B10                          1207  
00001B10  43F9 0000359C           1208  OPMOVE          LEA     MOVEMESSAGE, A1 *Store the MOVE message
00001B16  183C 0001               1209                  MOVE.B  #$1, D4
00001B1A  1E3C 0001               1210                  MOVE.B  #$1, D7
00001B1E                          1211                  
00001B1E  3200                    1212                  MOVE.W  D0, D1
00001B20  C27C 3000               1213                  AND.W   #$3000, D1      *Isolate SIZE
00001B24                          1214                  
00001B24  B27C 1000               1215                  CMP.W   #$1000, D1      *Check if size is 01
00001B28  6700 05A0               1216                  BEQ     SIZEB           *If yes, it's a byte
00001B2C                          1217                  
00001B2C  B27C 3000               1218                  CMP.W   #$3000, D1      *Check if size is 11
00001B30  6700 059E               1219                  BEQ     SIZEW           *If yes, it's a word
00001B34                          1220                  
00001B34  B27C 2000               1221                  CMP.W   #$2000, D1      *Check if size is 10
00001B38  6700 059C               1222                  BEQ     SIZEL           *If yes, it's a long
00001B3C                          1223                  
00001B3C  4E75                    1224                  RTS
00001B3E                          1225  
00001B3E  43F9 000035A1           1226  OPBCHGR         LEA     BCHGMESSAGE, A1 *Store the BCHG message
00001B44  183C 0018               1227                  MOVE.B  #$18, D4
00001B48                          1228                  
00001B48  6000 0580               1229                  BRA     SIZEB           *When it's register, it's always byte
00001B4C                          1230                  
00001B4C  4E75                    1231                  RTS
00001B4E                          1232                  
00001B4E  43F9 000035A1           1233  OPBCHGD         LEA     BCHGMESSAGE, A1 *Store the BCHG message
00001B54  183C 0024               1234                  MOVE.B  #$24, D4
00001B58                          1235                  
00001B58  6000 057C               1236                  BRA     SIZEL           *When data, it's always long
00001B5C                          1237                  
00001B5C  4E75                    1238                  RTS
00001B5E                          1239                  
00001B5E  43F9 000035A6           1240  OPCMPI          LEA     CMPIMESSAGE, A1 *Store the CMPI message
00001B64  183C 0020               1241                  MOVE.B  #$20, D4
00001B68                          1242                  
00001B68  3200                    1243                  MOVE.W  D0, D1
00001B6A  C27C 00C0               1244                  AND.W   #$C0, D1      *Isolate SIZE
00001B6E                          1245                  
00001B6E  B27C 0000               1246                  CMP.W   #$0, D1         *Check if size is 00
00001B72  6700 0556               1247                  BEQ     SIZEB        *If yes, it's a byte
00001B76                          1248                  
00001B76  B27C 0040               1249                  CMP.W   #$40, D1      *Check if size is 01
00001B7A  6700 0554               1250                  BEQ     SIZEW         *If yes, it's a word
00001B7E                          1251                  
00001B7E  B27C 0080               1252                  CMP.W   #$80, D1      *Check if size is 10
00001B82  6700 0552               1253                  BEQ     SIZEL         *If yes, it's a long
00001B86                          1254                  
00001B86  4E75                    1255                  RTS
00001B88                          1256                  
00001B88  43F9 000035AB           1257  OPADDI          LEA     ADDIMESSAGE, A1 *Store the ADDI message
00001B8E  183C 0006               1258                  MOVE.B  #$6, D4
00001B92                          1259                  
00001B92  3200                    1260                  MOVE.W  D0, D1
00001B94  C27C 00C0               1261                  AND.W   #$C0, D1      *Isolate SIZE
00001B98                          1262                  
00001B98  B27C 0000               1263                  CMP.W   #$0, D1         *Check if size is 00
00001B9C  6700 052C               1264                  BEQ     SIZEB        *If yes, it's a byte
00001BA0                          1265                  
00001BA0  B27C 0040               1266                  CMP.W   #$40, D1      *Check if size is 01
00001BA4  6700 052A               1267                  BEQ     SIZEW         *If yes, it's a word
00001BA8                          1268                  
00001BA8  B27C 0080               1269                  CMP.W   #$80, D1      *Check if size is 10
00001BAC  6700 0528               1270                  BEQ     SIZEL         *If yes, it's a long
00001BB0                          1271                  
00001BB0  4E75                    1272                  RTS
00001BB2                          1273                  
00001BB2  43F9 000035B0           1274  OPANDI          LEA     ANDIMESSAGE, A1 *Store the ANDI message
00001BB8  183C 0014               1275                  MOVE.B  #$14, D4
00001BBC                          1276                  
00001BBC  3200                    1277                  MOVE.W  D0, D1
00001BBE  C27C 00C0               1278                  AND.W   #$C0, D1      *Isolate SIZE
00001BC2                          1279                  
00001BC2  B27C 0000               1280                  CMP.W   #$0, D1         *Check if size is 00
00001BC6  6700 0502               1281                  BEQ     SIZEB        *If yes, it's a byte
00001BCA                          1282                  
00001BCA  B27C 0040               1283                  CMP.W   #$40, D1      *Check if size is 01
00001BCE  6700 0500               1284                  BEQ     SIZEW         *If yes, it's a word
00001BD2                          1285                  
00001BD2  B27C 0080               1286                  CMP.W   #$80, D1      *Check if size is 10
00001BD6  6700 04FE               1287                  BEQ     SIZEL         *If yes, it's a long
00001BDA                          1288                  
00001BDA  4E75                    1289                  RTS
00001BDC                          1290  
00001BDC                          1291  *---------------------------------------END_CHECK0000--------------------------------------------------------
00001BDC                          1292  
00001BDC                          1293  *-----------------------------------------------------------------------------------------------------
00001BDC                          1294  *                                            Subroutine: CHECK1110
00001BDC                          1295  *Description: Checks if opcode word starts with the binary 1110. If true it identifies if it is LSR/LSL,ASR/ASL,ROR/ROL
00001BDC                          1296  *----------------------------------------------------------------------------------------------------
00001BDC  3200                    1297  CHECK1110       MOVE.W  D0, D1
00001BDE  C27C F000               1298                  AND.W   #$F000, D1      *Isolates the first 4 spaces
00001BE2  B27C E000               1299                  CMP.W   #$E000, D1      *Checks if the first 4 spaces are 1110
00001BE6                          1300                  
00001BE6  6700 0004               1301                  BEQ     CHECKLAR        *If true, then it's LSR, ASR or ROR (and left versions)
00001BEA                          1302                  
00001BEA  4E75                    1303                  RTS
00001BEC                          1304                  
00001BEC  3200                    1305  CHECKLAR        MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001BEE  C27C 00C0               1306                  AND.W   #$C0, D1        *Isolate spaces 7-6
00001BF2  B27C 00C0               1307                  CMP.W   #$C0, D1        *Check if spaces 7-6 are 11
00001BF6                          1308                  
00001BF6  6700 0006               1309                  BEQ     CHECKLARM       *If true, then it's LSR, ASR or ROR (memory shift)
00001BFA                          1310                  
00001BFA  6000 0020               1311                  BRA     CHECKLARR       *If not, then it's LRS, ASR or ROR (register shift)
00001BFE                          1312                  
00001BFE  3200                    1313  CHECKLARM       MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001C00  C27C 0600               1314                  AND.W   #$600, D1       *Isolate spaces 10-9
00001C04  B27C 0200               1315                  CMP.W   #$200, D1       *Check if spaces 10-9 are 01
00001C08                          1316                  
00001C08  6700 0030               1317                  BEQ     CHECKLSM        *If true, it's LS (memory)
00001C0C                          1318                  
00001C0C  B27C 0000               1319                  CMP.W   #$0000, D1      *Check if spaces 10-9 are 00
00001C10                          1320                  
00001C10  6700 003A               1321                  BEQ     CHECKASM        *If true, it's AS (memory)
00001C14                          1322                  
00001C14  B27C 0600               1323                  CMP.W   #$600, D1       *Check if spaces 10-9 are 11
00001C18                          1324                  
00001C18  6700 0044               1325                  BEQ     CHECKROM        *If true, it's RO (memory)
00001C1C                          1326                  
00001C1C  3200                    1327  CHECKLARR       MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001C1E  C27C 0018               1328                  AND.W   #$18, D1        *Isolate spaces 4-3
00001C22  B27C 0008               1329                  CMP.W   #$8, D1         *Check if spaces 4-3 are 01
00001C26                          1330                  
00001C26  6700 0048               1331                  BEQ     CHECKLSRE       *If true, it's LS (register)
00001C2A                          1332                  
00001C2A  B27C 0000               1333                  CMP.W   #$0000, D1      *Check if spaces 4-3 are 00
00001C2E                          1334                  
00001C2E  6700 0052               1335                  BEQ     CHECKASRE       *If true, it's AS (register)
00001C32                          1336                  
00001C32  B27C 0018               1337                  CMP.W   #$18, D1        *Check if spaces 4-3 are 11
00001C36                          1338                  
00001C36  6700 005C               1339                  BEQ     CHECKRORE       *If true, it's RO (register)
00001C3A                          1340                  
00001C3A  3200                    1341  CHECKLSM        MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001C3C  C27C 0100               1342                  AND.W   #$100, D1       *Isolate space 8 
00001C40  B27C 0100               1343                  CMP.W   #$100, D1       *Check if space 8 is 1
00001C44                          1344                  
00001C44  6700 0060               1345                  BEQ     OPLSLM          *If true, it's LSL (memory)
00001C48                          1346                  
00001C48  6000 0096               1347                  BRA     OPLSRM          *If not, it's LSR (memory)
00001C4C                          1348                  
00001C4C  3200                    1349  CHECKASM        MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001C4E  C27C 0100               1350                  AND.W   #$100, D1       *Isolate space 8 
00001C52  B27C 0100               1351                  CMP.W   #$100, D1       *Check if space 8 is 1
00001C56                          1352                  
00001C56  6700 00C2               1353                  BEQ     OPASLM          *If true, it's ASL (memory)
00001C5A                          1354                  
00001C5A  6000 00DA               1355                  BRA     OPASRM          *If not, it's ASR (memory)
00001C5E                          1356                  
00001C5E  3200                    1357  CHECKROM        MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001C60  C27C 0100               1358                  AND.W   #$100, D1       *Isolate space 8 
00001C64  B27C 0100               1359                  CMP.W   #$100, D1       *Check if space 8 is 1
00001C68                          1360                  
00001C68  6700 0106               1361                  BEQ     OPROLM          *If true, it's ROL (memory)
00001C6C                          1362                  
00001C6C  6000 013C               1363                  BRA     OPRORM          *If not, it's ROR (memory)
00001C70                          1364                  
00001C70  3200                    1365  CHECKLSRE       MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001C72  C27C 0100               1366                  AND.W   #$100, D1       *Isolate space 8 
00001C76  B27C 0100               1367                  CMP.W   #$100, D1       *Check if space 8 is 1
00001C7A                          1368                  
00001C7A  6700 003A               1369                  BEQ     OPLSLR          *If true, it's LSL (register)
00001C7E                          1370                  
00001C7E  6000 0070               1371                  BRA     OPLSRR          *If not, it's LSR (register)
00001C82                          1372                  
00001C82  3200                    1373  CHECKASRE       MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001C84  C27C 0100               1374                  AND.W   #$100, D1       *Isolate space 8 
00001C88  B27C 0100               1375                  CMP.W   #$100, D1       *Check if space 8 is 1
00001C8C                          1376                  
00001C8C  6700 009C               1377                  BEQ     OPASLR          *If true, it's ASL (register)
00001C90                          1378                  
00001C90  6000 00B4               1379                  BRA     OPASRR          *If not, it's ASR (register)
00001C94                          1380                  
00001C94  3200                    1381  CHECKRORE       MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001C96  C27C 0100               1382                  AND.W   #$100, D1       *Isolate space 8 
00001C9A  B27C 0100               1383                  CMP.W   #$100, D1       *Check if space 8 is 1
00001C9E                          1384                  
00001C9E  6700 00E0               1385                  BEQ     OPROLR          *If true, it's ROL (register)
00001CA2                          1386                  
00001CA2  6000 0116               1387                  BRA     OPRORR          *If not, it's ROR (register)
00001CA6                          1388                  
00001CA6  43F9 000035D7           1389  OPLSLM          LEA     LSLMESSAGE, A1 *Store the LSL (memory) message
00001CAC  183C 0025               1390                  MOVE.B  #$25, D4
00001CB0                          1391                  
00001CB0  6000 041E               1392                  BRA     SIZEW           *It's always a word when memory
00001CB4                          1393                  
00001CB4  4E75                    1394                  RTS
00001CB6                          1395                  
00001CB6  43F9 000035D7           1396  OPLSLR          LEA     LSLMESSAGE, A1 *Store the LSL (register) message
00001CBC  183C 0015               1397                  MOVE.B  #$15, D4
00001CC0                          1398                  
00001CC0  3200                    1399                  MOVE.W  D0, D1
00001CC2  C27C 00C0               1400                  AND.W   #$C0, D1      *Isolate SIZE
00001CC6                          1401                  
00001CC6  B27C 0000               1402                  CMP.W   #$0, D1         *Check if size is 00
00001CCA  6700 03FE               1403                  BEQ     SIZEB        *If yes, it's a byte
00001CCE                          1404                  
00001CCE  B27C 0040               1405                  CMP.W   #$40, D1      *Check if size is 01
00001CD2  6700 03FC               1406                  BEQ     SIZEW         *If yes, it's a word
00001CD6                          1407                  
00001CD6  B27C 0080               1408                  CMP.W   #$80, D1      *Check if size is 10
00001CDA  6700 03FA               1409                  BEQ     SIZEL         *If yes, it's a long
00001CDE                          1410                  
00001CDE  4E75                    1411                  RTS
00001CE0                          1412                  
00001CE0  43F9 000035DB           1413  OPLSRM          LEA     LSRMESSAGE, A1 *Store the LSR (memory) message
00001CE6  183C 0025               1414                  MOVE.B  #$25, D4
00001CEA                          1415                  
00001CEA  6000 03E4               1416                  BRA     SIZEW           *It's always a word when memory
00001CEE                          1417                  
00001CEE  4E75                    1418                  RTS
00001CF0                          1419                  
00001CF0  43F9 000035DB           1420  OPLSRR          LEA     LSRMESSAGE, A1 *Store the LSR (register) message
00001CF6  183C 0015               1421                  MOVE.B  #$15, D4
00001CFA                          1422                  
00001CFA  3200                    1423                  MOVE.W  D0, D1
00001CFC  C27C 00C0               1424                  AND.W   #$C0, D1      *Isolate SIZE
00001D00                          1425                  
00001D00  B27C 0000               1426                  CMP.W   #$0, D1         *Check if size is 00
00001D04  6700 03C4               1427                  BEQ     SIZEB        *If yes, it's a byte
00001D08                          1428                  
00001D08  B27C 0040               1429                  CMP.W   #$40, D1      *Check if size is 01
00001D0C  6700 03C2               1430                  BEQ     SIZEW         *If yes, it's a word
00001D10                          1431                  
00001D10  B27C 0080               1432                  CMP.W   #$80, D1      *Check if size is 10
00001D14  6700 03C0               1433                  BEQ     SIZEL         *If yes, it's a long
00001D18                          1434                  
00001D18  4E75                    1435                  RTS
00001D1A                          1436  
00001D1A  43F9 000035D3           1437  OPASLM          LEA     ASLMESSAGE, A1 *Store the ASL (memory) message
00001D20  183C 0026               1438                  MOVE.B  #$26, D4
00001D24                          1439                  
00001D24  6000 03AA               1440                  BRA     SIZEW           *It's always a word when memory
00001D28                          1441                  
00001D28  4E75                    1442                  RTS
00001D2A                          1443  
00001D2A  43F9 000035D3           1444  OPASLR          LEA     ASLMESSAGE, A1 *Store the ASL (register) message
00001D30  183C 0016               1445                  MOVE.B  #$16, D4
00001D34  4E75                    1446                  RTS
00001D36                          1447  
00001D36  43F9 000035CF           1448  OPASRM          LEA     ASRMESSAGE, A1 *Store the ASR (memory) message
00001D3C  183C 0026               1449                  MOVE.B  #$26, D4
00001D40                          1450                  
00001D40  6000 038E               1451                  BRA     SIZEW           *It's always a word when memory
00001D44                          1452                  
00001D44  4E75                    1453                  RTS
00001D46                          1454  
00001D46  43F9 000035CF           1455  OPASRR          LEA     ASRMESSAGE, A1 *Store the ASR (register) message
00001D4C  183C 0016               1456                  MOVE.B  #$16, D4
00001D50                          1457                  
00001D50  3200                    1458                  MOVE.W  D0, D1
00001D52  C27C 00C0               1459                  AND.W   #$C0, D1      *Isolate SIZE
00001D56                          1460                  
00001D56  B27C 0000               1461                  CMP.W   #$0, D1         *Check if size is 00
00001D5A  6700 036E               1462                  BEQ     SIZEB        *If yes, it's a byte
00001D5E                          1463                  
00001D5E  B27C 0040               1464                  CMP.W   #$40, D1      *Check if size is 01
00001D62  6700 036C               1465                  BEQ     SIZEW         *If yes, it's a word
00001D66                          1466                  
00001D66  B27C 0080               1467                  CMP.W   #$80, D1      *Check if size is 10
00001D6A  6700 036A               1468                  BEQ     SIZEL         *If yes, it's a long
00001D6E                          1469                  
00001D6E  4E75                    1470                  RTS
00001D70                          1471  
00001D70  43F9 000035E3           1472  OPROLM          LEA     ROLMESSAGE, A1 *Store the ROL (memory) message
00001D76  183C 0027               1473                  MOVE.B  #$27, D4
00001D7A                          1474                  
00001D7A  6000 0354               1475                  BRA     SIZEW           *It's always a word when memory
00001D7E                          1476                  
00001D7E  4E75                    1477                  RTS
00001D80                          1478  
00001D80  43F9 000035E3           1479  OPROLR          LEA     ROLMESSAGE, A1 *Store the ROL (register) message
00001D86  183C 0017               1480                  MOVE.B  #$17, D4
00001D8A                          1481                  
00001D8A  3200                    1482                  MOVE.W  D0, D1
00001D8C  C27C 00C0               1483                  AND.W   #$C0, D1      *Isolate SIZE
00001D90                          1484                  
00001D90  B27C 0000               1485                  CMP.W   #$0, D1         *Check if size is 00
00001D94  6700 0334               1486                  BEQ     SIZEB        *If yes, it's a byte
00001D98                          1487                  
00001D98  B27C 0040               1488                  CMP.W   #$40, D1      *Check if size is 01
00001D9C  6700 0332               1489                  BEQ     SIZEW         *If yes, it's a word
00001DA0                          1490                  
00001DA0  B27C 0080               1491                  CMP.W   #$80, D1      *Check if size is 10
00001DA4  6700 0330               1492                  BEQ     SIZEL         *If yes, it's a long
00001DA8                          1493                  
00001DA8  4E75                    1494                  RTS
00001DAA                          1495  
00001DAA  43F9 000035DF           1496  OPRORM          LEA     RORMESSAGE, A1 *Store the ROR (memory) message
00001DB0  183C 0027               1497                  MOVE.B  #$27, D4
00001DB4                          1498                  
00001DB4  6000 031A               1499                  BRA     SIZEW           *It's always a word when memory
00001DB8                          1500                  
00001DB8  4E75                    1501                  RTS
00001DBA                          1502  
00001DBA  43F9 000035DF           1503  OPRORR          LEA     RORMESSAGE, A1 *Store the ROR (register) message
00001DC0  183C 0017               1504                  MOVE.B  #$17, D4
00001DC4                          1505                  
00001DC4  3200                    1506                  MOVE.W  D0, D1
00001DC6  C27C 00C0               1507                  AND.W   #$C0, D1      *Isolate SIZE
00001DCA                          1508                  
00001DCA  B27C 0000               1509                  CMP.W   #$0, D1         *Check if size is 00
00001DCE  6700 02FA               1510                  BEQ     SIZEB        *If yes, it's a byte
00001DD2                          1511                  
00001DD2  B27C 0040               1512                  CMP.W   #$40, D1      *Check if size is 01
00001DD6  6700 02F8               1513                  BEQ     SIZEW         *If yes, it's a word
00001DDA                          1514                  
00001DDA  B27C 0080               1515                  CMP.W   #$80, D1      *Check if size is 10
00001DDE  6700 02F6               1516                  BEQ     SIZEL         *If yes, it's a long
00001DE2                          1517                  
00001DE2  4E75                    1518                  RTS
00001DE4                          1519  
00001DE4                          1520  *---------------------------------------END_CHECK1110--------------------------------------------------------
00001DE4                          1521  
00001DE4                          1522  
00001DE4                          1523  *-----------------------------------------------------------------------------------------------------
00001DE4                          1524  *                                            Subroutine: CHECK1010
00001DE4                          1525  *Description: Checks if opcode word starts with the binary 1010. If true it identifies if it is CMP
00001DE4                          1526  *----------------------------------------------------------------------------------------------------
00001DE4  3200                    1527  CHECK1010       MOVE.W D0,D1 *restore the opcode to d1
00001DE6  C27C F000               1528                  AND.W #$F000,D1
00001DEA  B27C B000               1529                  CMP.W #$B000,D1
00001DEE  6700 0004               1530                  BEQ OPCMP
00001DF2  4E75                    1531                  RTS
00001DF4                          1532                  
00001DF4  43F9 0000356B           1533  OPCMP           LEA CMPMESSAGE, A1
00001DFA  183C 0019               1534                  MOVE.B  #$19, D4
00001DFE                          1535                  
00001DFE  3200                    1536                  MOVE.W  D0, D1
00001E00  C27C 01C0               1537                  AND.W   #$1C0, D1       *Isolate OPMODE part
00001E04                          1538                  
00001E04  B27C 0000               1539                  CMP.W   #$0, D1         *If OPMODE 000
00001E08  6700 02C0               1540                  BEQ     SIZEB           *If yes, it's byte 
00001E0C                          1541                  
00001E0C  B27C 0040               1542                  CMP.W   #$40, D1        *If OPMODE 001
00001E10  6700 02BE               1543                  BEQ     SIZEW           *If yes, it's word
00001E14                          1544                  
00001E14  B27C 0080               1545                  CMP.W   #$80, D1        *If OPMODE 010
00001E18  6700 02BC               1546                  BEQ     SIZEL           *If yes, it's long
00001E1C                          1547                  
00001E1C  4E75                    1548                  RTS
00001E1E                          1549  *---------------------------------------------- CHECK1011-----------------------------------------------
00001E1E                          1550  
00001E1E                          1551  
00001E1E                          1552  *-----------------------------------------------------------------------------------------------------
00001E1E                          1553  *                                        Subroutine: CHECK0111
00001E1E                          1554  *Description: Checks if opcode word starts with the binary 0111. If true it identifies if it is MOVEQ
00001E1E                          1555  *----------------------------------------------------------------------------------------------------
00001E1E                          1556  
00001E1E                          1557  CHECK0111       *Check for MOVEQ opcode
00001E1E  3200                    1558                  MOVE.W D0,D1 *restore the opcode to d1
00001E20  C27C F000               1559                  AND.W #$F000,D1
00001E24  B27C 7000               1560                  CMP.W #$7000,D1
00001E28  6700 0004               1561                  BEQ OPMOVEQ
00001E2C  4E75                    1562                  RTS
00001E2E                          1563                  
00001E2E  43F9 0000357B           1564  OPMOVEQ         LEA MOVEQMESSAGE, A1
00001E34  183C 0002               1565                  MOVE.B  #$2, D4
00001E38                          1566                  
00001E38  6000 029C               1567                  BRA     SIZEL           *It's always a long operation
00001E3C                          1568                  
00001E3C  4E75                    1569                  RTS
00001E3E                          1570  
00001E3E                          1571  *------------------------------------------------CHECK0111----------------------------------------------
00001E3E                          1572  
00001E3E                          1573  
00001E3E                          1574  *-----------------------------------------------------------------------------------------------------
00001E3E                          1575  *                                        Subroutine: CHECK0110
00001E3E                          1576  *Description: Checks if opcode word starts with the binary 0110. If true it identifies if it is BCC
00001E3E                          1577  *----------------------------------------------------------------------------------------------------
00001E3E                          1578  
00001E3E                          1579  CHECK0110       *Check for BCC opcode
00001E3E  3200                    1580                  MOVE.W D0,D1 *restore the opcode to d1
00001E40  C27C F000               1581                  AND.W #$F000,D1
00001E44  B27C 6000               1582                  CMP.W #$6000,D1
00001E48  6700 0004               1583                  BEQ OPBXX
00001E4C  4E75                    1584                  RTS
00001E4E                          1585                  
00001E4E                          1586  OPBXX          * check bit 11,10,9,8 for what bcc codition code                 
00001E4E                          1587               
00001E4E                          1588                  
00001E4E                          1589                                   
00001E4E                          1590                  *check if 11,10,9,8 is 1111
00001E4E  3200                    1591                  MOVE.W D0,D1 *restore the opcode to d1
00001E50  C27C 0F00               1592                  AND.W #$F00,D1 *isolate bit 11-8
00001E54  B27C 0F00               1593                  CMP.W #$F00,D1                
00001E58  6700 0038               1594                  BEQ OPBLE 1111
00001E5C                          1595  
00001E5C                          1596              
00001E5C  3200                    1597                  MOVE.W D0,D1
00001E5E  C27C 0E00               1598                  AND.W #$E00,D1
00001E62  B27C 0E00               1599                  CMP.W #$E00,D1
00001E66  6700 001E               1600                  BEQ OPBGT
00001E6A                          1601                  
00001E6A                          1602              
00001E6A  3200                    1603                  MOVE.W D0,D1
00001E6C  C27C 0400               1604                  AND.W #$400,D1
00001E70  B27C 0400               1605                  CMP.W #$400,D1
00001E74  6700 0004               1606                  BEQ OPBCC
00001E78                          1607                  
00001E78  4E75                    1608                  RTS
00001E7A                          1609                  
00001E7A  43F9 0000356F           1610  OPBCC    LEA BCCMESSAGE, A1   
00001E80  183C 0021               1611           MOVE.B  #$21, D4
00001E84  4E75                    1612           RTS
00001E86                          1613           
00001E86  43F9 00003573           1614  OPBGT    LEA BGTMESSAGE, A1 
00001E8C  183C 0021               1615           MOVE.B  #$21, D4  
00001E90  4E75                    1616           RTS
00001E92                          1617  
00001E92  43F9 00003577           1618  OPBLE    LEA BLEMESSAGE, A1   
00001E98  183C 0021               1619           MOVE.B  #$21, D4
00001E9C  4E75                    1620           RTS
00001E9E                          1621                  
00001E9E                          1622  *------------------------------------------CHECK0110-------------------------------------------------------
00001E9E                          1623  
00001E9E                          1624  
00001E9E                          1625  
00001E9E                          1626  *-----------------------------------------------------------------------------------------------------
00001E9E                          1627  *                                    Subroutine: CHECK1101
00001E9E                          1628  *Description: Checks if opcode word starts with the binary 1101. If true it identifies if it is ADD or ADDA
00001E9E                          1629  *----------------------------------------------------------------------------------------------------
00001E9E                          1630  CHECK1101       *Check for ADD or ADDA
00001E9E  3200                    1631                  MOVE.W D0,D1 *restore the opcode to d1
00001EA0  C27C F000               1632                  AND.W #$F000,D1
00001EA4  B27C D000               1633                  CMP.W #$D000, D1
00001EA8  6700 0004               1634                  BEQ CHECKADDADDA
00001EAC  4E75                    1635                  RTS
00001EAE  C27C 01C0               1636  CHECKADDADDA    AND.W #$1C0, D1
00001EB2  B27C 01C0               1637                  CMP.W #$1C0, D1
00001EB6  6700 0014               1638                  BEQ OPADDA
00001EBA                          1639              
00001EBA  3200                    1640                  MOVE.W D0,D1 *restore the opcode to d1          
00001EBC  C27C 00C0               1641                  AND.W #$C0,D1  *check for 011 in 8-6.
00001EC0  B27C 00C0               1642                  CMP.W #$C0,D1 
00001EC4  6700 0006               1643                  BEQ OPADDA
00001EC8                          1644                  
00001EC8  6000 0024               1645                  BRA OPADD
00001ECC                          1646                  
00001ECC  43F9 00003581           1647  OPADDA          LEA ADDAMESSAGE,A1
00001ED2  183C 0005               1648                  MOVE.B  #$5, D4
00001ED6                          1649                  
00001ED6  3200                    1650                  MOVE.W  D0, D1
00001ED8  C27C 01C0               1651                  AND.W   #$1C0, D1       *Isolate OPMODE part
00001EDC  B27C 00C0               1652                  CMP.W   #$C0, D1         *If OPMODE 011
00001EE0  6700 01EE               1653                  BEQ     SIZEW           *If yes, it's word 
00001EE4                          1654                  
00001EE4  B27C 01C0               1655                  CMP.W   #$1C0, D1       *If OPMODE 111
00001EE8  6700 01EC               1656                  BEQ     SIZEL           *If yes, it's long
00001EEC                          1657                  
00001EEC  4E75                    1658                  RTS
00001EEE                          1659                  
00001EEE  43F9 00003586           1660  OPADD           LEA ADDMESSAGE,A1
00001EF4  183C 0004               1661                  MOVE.B  #$4, D4
00001EF8                          1662                  
00001EF8  3200                    1663                  MOVE.W  D0, D1
00001EFA  C27C 01C0               1664                  AND.W   #$1C0, D1       *Isolate OPMODE part
00001EFE  B27C 0000               1665                  CMP.W   #$0, D1         *If OPMODE 000
00001F02  6700 01C6               1666                  BEQ     SIZEB           *If yes, it's byte 
00001F06                          1667                  
00001F06  B27C 0100               1668                  CMP.W   #$100, D1       *If OPMODE 100
00001F0A  6700 01BE               1669                  BEQ     SIZEB           *If yes, it's byte
00001F0E                          1670                  
00001F0E  B27C 0040               1671                  CMP.W   #$40, D1        *If OPMODE 001
00001F12  6700 01BC               1672                  BEQ     SIZEW           *If yes, it's word
00001F16                          1673                  
00001F16  B27C 0140               1674                  CMP.W   #$140, D1       *If OPMODE 101
00001F1A  6700 01B4               1675                  BEQ     SIZEW           *If yes, it's word
00001F1E                          1676                  
00001F1E  B27C 0080               1677                  CMP.W   #$80, D1        *If OPMODE 010
00001F22  6700 01B2               1678                  BEQ     SIZEL           *If yes, it's long
00001F26                          1679                  
00001F26  B27C 0180               1680                  CMP.W   #$180, D1       *If OPMODE 110
00001F2A  6700 01AA               1681                  BEQ     SIZEL           *If yes, it's long
00001F2E                          1682                  
00001F2E  4E75                    1683                  RTS
00001F30                          1684  *--------------------------------------------CHECK1101--------------------------------------------------
00001F30                          1685  
00001F30                          1686  
00001F30                          1687  *-----------------------------------------------------------------------------------------------------
00001F30                          1688  *                                        Subroutine: CHECK1001
00001F30                          1689  *Description: Checks if opcode word starts with the binary 1001. If true it identifies if it is SUB or SUBA
00001F30                          1690  *----------------------------------------------------------------------------------------------------
00001F30                          1691  
00001F30                          1692  CHECK1001       *Check for sub or suba
00001F30                          1693  
00001F30  3200                    1694                  MOVE.W D0,D1 *restore the opcode to d1
00001F32  C27C F000               1695                  AND.W #$F000,D1
00001F36  B27C 9000               1696                  CMP.W #$9000, D1
00001F3A  6700 0004               1697                  BEQ CHECKSUBSUBA
00001F3E  4E75                    1698                  RTS
00001F40                          1699                  
00001F40  C27C 01C0               1700  CHECKSUBSUBA    AND.W #$1C0, D1
00001F44  B27C 01C0               1701                  CMP.W #$1C0, D1
00001F48  6700 0014               1702                  BEQ OPSUBA
00001F4C                          1703              
00001F4C  3200                    1704                  MOVE.W D0,D1 *restore the opcode to d1          
00001F4E  C27C 00C0               1705                  AND.W #$C0,D1  *check for 011 in 8-6.
00001F52  B27C 00C0               1706                  CMP.W #$C0,D1 
00001F56  6700 0006               1707                  BEQ OPSUBA
00001F5A  6000 0024               1708                  BRA OPSUB
00001F5E  43F9 0000358A           1709  OPSUBA          LEA SUBAMESSAGE,A1
00001F64  183C 0008               1710                  MOVE.B  #$8, D4
00001F68                          1711                  
00001F68  3200                    1712                  MOVE.W  D0, D1
00001F6A  C27C 01C0               1713                  AND.W   #$1C0, D1       *Isolate OPMODE part
00001F6E  B27C 00C0               1714                  CMP.W   #$C0, D1         *If OPMODE 011
00001F72  6700 015C               1715                  BEQ     SIZEW           *If yes, it's word 
00001F76                          1716                  
00001F76  B27C 01C0               1717                  CMP.W   #$1C0, D1       *If OPMODE 111
00001F7A  6700 015A               1718                  BEQ     SIZEL           *If yes, it's long
00001F7E                          1719                  
00001F7E  4E75                    1720                  RTS
00001F80                          1721                  
00001F80  43F9 0000358F           1722  OPSUB           LEA SUBMESSAGE,A1
00001F86  183C 0007               1723                  MOVE.B  #$7, D4
00001F8A                          1724                  
00001F8A  3200                    1725                  MOVE.W  D0, D1
00001F8C  C27C 01C0               1726                  AND.W   #$1C0, D1       *Isolate OPMODE part
00001F90  B27C 0000               1727                  CMP.W   #$0, D1         *If OPMODE 000
00001F94  6700 0134               1728                  BEQ     SIZEB           *If yes, it's byte 
00001F98                          1729                  
00001F98  B27C 0100               1730                  CMP.W   #$100, D1       *If OPMODE 100
00001F9C  6700 012C               1731                  BEQ     SIZEB           *If yes, it's byte
00001FA0                          1732                  
00001FA0  B27C 0040               1733                  CMP.W   #$40, D1        *If OPMODE 001
00001FA4  6700 012A               1734                  BEQ     SIZEW           *If yes, it's word
00001FA8                          1735                  
00001FA8  B27C 0140               1736                  CMP.W   #$140, D1       *If OPMODE 101
00001FAC  6700 0122               1737                  BEQ     SIZEW           *If yes, it's word
00001FB0                          1738                  
00001FB0  B27C 0080               1739                  CMP.W   #$80, D1        *If OPMODE 010
00001FB4  6700 0120               1740                  BEQ     SIZEL           *If yes, it's long
00001FB8                          1741                  
00001FB8  B27C 0180               1742                  CMP.W   #$180, D1       *If OPMODE 110
00001FBC  6700 0118               1743                  BEQ     SIZEL           *If yes, it's long
00001FC0                          1744                  
00001FC0  4E75                    1745                  RTS
00001FC2                          1746  *--------------------------------------------------------CHECK1001----------------------------------------
00001FC2                          1747  
00001FC2                          1748  
00001FC2                          1749  *-----------------------------------------------------------------------------------------------------
00001FC2                          1750  *                                    Subroutine: CHECK1000
00001FC2                          1751  *Description: Checks if opcode word starts with the binary 1000. If true it identifies if it is DIVS
00001FC2                          1752  *----------------------------------------------------------------------------------------------------
00001FC2                          1753  CHECK1000       *Check for DIVS word
00001FC2  3200                    1754                  MOVE.W D0,D1 *restore the opcode to d1
00001FC4  C27C F000               1755                  AND.W #$F000,D1
00001FC8  B27C 8000               1756                  CMP.W #$8000,D1
00001FCC  6700 0004               1757                  BEQ OPDIVS
00001FD0  4E75                    1758                  RTS
00001FD2                          1759                  
00001FD2  43F9 00003566           1760  OPDIVS          LEA DIVSMESSAGE,A1
00001FD8  183C 0010               1761                  MOVE.B  #$10, D4
00001FDC                          1762                  
00001FDC  6000 00F2               1763                  BRA     SIZEW           *It's always a word
00001FE0                          1764                  
00001FE0  4E75                    1765                  RTS
00001FE2                          1766                  
00001FE2                          1767  *--------------------------------------CHECK1000-----------------------------------------------------------
00001FE2                          1768  
00001FE2                          1769  *-----------------------------------------------------------------------------------------------------
00001FE2                          1770  *                                    Subroutine: CHECK0100
00001FE2                          1771  *Description: Checks if opcode word starts with the binary 0100. If true it identifies if it is JSR, RTS, NOP, MOVEM, LEA or CLR
00001FE2                          1772  *----------------------------------------------------------------------------------------------------
00001FE2                          1773  
00001FE2                          1774  CHECK0100   * check for JSR, RTS, NOP, MOVEM, LEA, CLR
00001FE2  3200                    1775                  MOVE.W D0,D1 *RESTORE OPCODE
00001FE4  C27C F000               1776                  AND.W #$F000,D1
00001FE8  B27C 4000               1777                  CMP.W #$4000,D1
00001FEC  6700 0004               1778                  BEQ CHECKOPS *check all posible ops in the 0100 category
00001FF0  4E75                    1779                  RTS
00001FF2                          1780  
00001FF2                          1781  CHECKOPS        *******Check for NOP and RTS since they are constant
00001FF2  3200                    1782                   MOVE.W D0,D1 *RESTORE OPCODE
00001FF4  B27C 4E75               1783                   CMP #$4E75,D1
00001FF8  6700 0096               1784                   BEQ OPRTS
00001FFC  B27C 4E71               1785                   CMP #$4E71,D1
00002000  6700 003C               1786                   BEQ OPNOP
00002004                          1787  
00002004                          1788                  
00002004                          1789                  
00002004                          1790                  *******Check for lea*******                
00002004  C27C 0100               1791                  AND.W #$100,D1  *mask every bit but the 8th
00002008  B27C 0100               1792                  CMP.W #$100, D1 *check if bit 8 is 1 
0000200C  6700 0050               1793                  BEQ OPLEA
00002010                          1794                  
00002010  3200                    1795                  MOVE.W  D0, D1
00002012  C27C 0800               1796                  AND.W   #$800, D1   *Isolate 11 bit
00002016  B27C 0000               1797                  CMP.W   #$0, D1
0000201A  6700 0084               1798                  BEQ     OPCLR
0000201E                          1799                  
0000201E  3200                    1800                  MOVE.W  D0, D1
00002020  C27C 0200               1801                  AND.W   #$200, D1   *Isolate 9 bit
00002024  B27C 0000               1802                  CMP.W   #$0, D1
00002028  6700 0044               1803                  BEQ     OPMOVEM
0000202C                          1804                  
0000202C  3200                    1805                  MOVE.W  D0, D1
0000202E  C27C 0038               1806                  AND.W   #$38, D1   *Isolate 5, 4 and 3 bits
00002032  B27C 0110               1807                  CMP.W   #$110, D1
00002036  6600 0016               1808                  BNE     OPJSR
0000203A                          1809                
0000203A  6000 F0EC               1810                  BRA     INVALIDOPCODE
0000203E                          1811                  
0000203E                          1812   
0000203E  43F9 000035C3           1813  OPNOP           LEA NOPMESSAGE,A1
00002044  183C 0000               1814                  MOVE.B  #$0, D4
00002048  1E3C 0000               1815                  MOVE.B  #$0, D7
0000204C  4E75                    1816                  RTS    
0000204E                          1817  OPJSR
0000204E  43F9 000035C7           1818                  LEA JSRMESSAGE,A1
00002054  183C 0022               1819                  MOVE.B  #$22, D4
00002058  1E3C 0000               1820                  MOVE.B  #$0, D7
0000205C  4E75                    1821                  RTS
0000205E                          1822  OPLEA  
0000205E  43F9 000035B5           1823                  LEA LEAMESSAGE,A1
00002064  183C 0011               1824                  MOVE.B  #$11, D4
00002068                          1825                  
00002068  1E3C 0000               1826                  MOVE.B  #$0, D7
0000206C  4E75                    1827                  RTS
0000206E                          1828                  *BRA     SIZEL           *It's always long
0000206E                          1829                  
0000206E  43F9 000035B9           1830  OPMOVEM         LEA OPMOVEMMESSAGE,A1
00002074  183C 0003               1831                  MOVE.B  #$3, D4
00002078                          1832                  
00002078  3200                    1833                  MOVE.W  D0, D1
0000207A  C27C 0040               1834                  AND.W   #$40, D1       *Isolate SIZE part
0000207E  B27C 0000               1835                  CMP.W   #$0, D1         *If SIZE 0
00002082  6700 004C               1836                  BEQ     SIZEW           *If yes, it's word 
00002086                          1837                  
00002086  B27C 0040               1838                  CMP.W   #$40, D1       *If SIZE 1
0000208A  6700 004A               1839                  BEQ     SIZEL           *If yes, it's long
0000208E                          1840                  
0000208E  4E75                    1841                  RTS
00002090                          1842                  
00002090  43F9 000035BF           1843  OPRTS           LEA RTSMESSAGE,A1
00002096  183C 0023               1844                  MOVE.B  #$23, D4
0000209A  1E3C 0000               1845                  MOVE.B  #$0, D7
0000209E  4E75                    1846                  RTS
000020A0                          1847                  
000020A0  43F9 000035CB           1848  OPCLR           LEA CLRMESSAGE,A1
000020A6  183C 0012               1849                  MOVE.B  #$12, D4
000020AA                          1850                  
000020AA  3200                    1851                  MOVE.W  D0, D1
000020AC  C27C 00C0               1852                  AND.W   #$C0, D1       *Isolate SIZE part
000020B0                          1853                  
000020B0  B27C 0000               1854                  CMP.W   #$0, D1         *If SIZE 0
000020B4  6700 0014               1855                  BEQ     SIZEB           *If yes, it's byte 
000020B8                          1856                  
000020B8  B27C 0040               1857                  CMP.W   #$40, D1       *If SIZE 1
000020BC  6700 0012               1858                  BEQ     SIZEW           *If yes, it's word
000020C0                          1859                  
000020C0  B27C 0080               1860                  CMP.W   #$80, D1       *If SIZE 1
000020C4  6700 0010               1861                  BEQ     SIZEL           *If yes, it's byte
000020C8                          1862                  
000020C8  4E75                    1863                  RTS
000020CA                          1864  *----------------------------------------CHECK0100-------------------------------------------------------
000020CA                          1865  
000020CA                          1866  
000020CA                          1867  *--------------------------------------------------------------------------------------------------------
000020CA                          1868  *                                Subroutines for size of OPCode
000020CA                          1869  * Description: Display following in D7: $0 if it's a byte opration, $1 if it's a word operation and $2 if
000020CA                          1870  *              it's a long operation.
000020CA                          1871  *--------------------------------------------------------------------------------------------------------
000020CA  1E3C 0001               1872  SIZEB           MOVE.B  #$1, D7
000020CE  4E75                    1873                  RTS
000020D0                          1874                  
000020D0  1E3C 0002               1875  SIZEW           MOVE.B  #$2, D7
000020D4  4E75                    1876                  RTS
000020D6                          1877                  
000020D6  1E3C 0003               1878  SIZEL           MOVE.B  #$3, D7
000020DA  4E75                    1879                  RTS
000020DC                          1880  *-------------------------------------OPCode sizes end---------------------------------------------------
000020DC                          1881  
000020DC                          1882  
000020DC                          1883  
000020DC                          1884  
000020DC                          1885  
000020DC                          1886  
000020DC                          1887  
000020DC                          1888  
000020DC                          1889  *-------------------------------------EA Code begins-----------------------------------------------------
000020DC  B83C 0000               1890  CHECKEAS        CMP.B   #$0, D4
000020E0  6700 00B2               1891                  BEQ     NOPEA
000020E4                          1892  
000020E4  B83C 0001               1893                  CMP.B   #$1, D4
000020E8  6700 00B6               1894                  BEQ     MOVEEA
000020EC                          1895                  
000020EC  B83C 0002               1896                  CMP.B   #$2, D4
000020F0  6700 0276               1897                  BEQ     MOVEQEA
000020F4                          1898                  
000020F4  B83C 0003               1899                  CMP.B   #$3, D4
000020F8  6700 02CC               1900                  BEQ     MOVEMEA
000020FC                          1901                  
000020FC  B83C 0004               1902                  CMP.B   #$4, D4
00002100  6700 0456               1903                  BEQ     ADDEA
00002104                          1904                  
00002104  B83C 0005               1905                  CMP.B   #$5, D4
00002108  6700 063E               1906                  BEQ     ADDAEA
0000210C                          1907                  
0000210C  B83C 0006               1908                  CMP.B   #$6, D4
00002110  6700 0768               1909                  BEQ     ADDIEA
00002114                          1910  
00002114  B83C 0007               1911                  CMP.B   #$7, D4
00002118  6700 084E               1912                  BEQ     SUBEA
0000211C                          1913                  
0000211C  B83C 0009               1914                  CMP.B   #$9, D4
00002120  6700 0A36               1915                  BEQ     MULSEA
00002124                          1916                  
00002124  B83C 0010               1917                  CMP.B   #$10, D4
00002128  6700 0B44               1918                  BEQ     DIVUEA
0000212C                          1919                  
0000212C  B83C 0011               1920                  CMP.B   #$11, D4
00002130  6700 0C52               1921                  BEQ     LEAEA
00002134                          1922                  
00002134  B83C 0012               1923                  CMP.B   #$12, D4
00002138  6700 0CC2               1924                  BEQ     CLREA
0000213C                          1925                  
0000213C  B83C 0013               1926                  CMP.B   #$13, D4
00002140  6700 0D6E               1927                  BEQ     ANDEA
00002144                          1928                  
00002144  B83C 0015               1929                  CMP.B   #$15, D4
00002148  6700 0F3A               1930                  BEQ     LSREA
0000214C                          1931                  
0000214C  B83C 0016               1932                  CMP.B   #$16, D4
00002150  6700 1014               1933                  BEQ     ASREA
00002154                          1934                  
00002154  B83C 0017               1935                  CMP.B   #$17, D4
00002158  6700 10EE               1936                  BEQ     ROREA
0000215C                          1937                  
0000215C  B83C 0019               1938                  CMP.B   #$19, D4
00002160  6700 11C8               1939                  BEQ     CMPEA
00002164                          1940                  
00002164  B83C 0021               1941                  CMP.B   #$21, D4
00002168  6700 12F2               1942                  BEQ     BCCEA
0000216C                          1943                  
0000216C  B83C 0022               1944                  CMP.B   #$22, D4
00002170  6700 1388               1945                  BEQ     JSREA
00002174                          1946                  
00002174  B83C 0023               1947                  CMP.B   #$23, D4
00002178  6700 0020               1948                  BEQ     RTSEA
0000217C                          1949                  
0000217C  B83C 0025               1950                  CMP.B   #$25, D4
00002180  6700 0F4A               1951                  BEQ     LSMEA
00002184                          1952                  
00002184  B83C 0026               1953                  CMP.B   #$26, D4
00002188  6700 1024               1954                  BEQ     ASMEA
0000218C                          1955                  
0000218C  B83C 0027               1956                  CMP.B   #$27, D4
00002190  6700 10FE               1957                  BEQ     ROMEA
00002194                          1958                  
00002194                          1959  
00002194                          1960  
00002194  1A3C 00FF               1961  NOPEA       MOVE.B  #-1, D5
00002198  4E75                    1962              RTS
0000219A                          1963              
0000219A  1A3C 00FF               1964  RTSEA       MOVE.B  #-1, D5
0000219E  4E75                    1965              RTS
000021A0                          1966  
000021A0  2200                    1967  MOVEEA      MOVE.L  D0, D1
000021A2  C2BC 00000038           1968              AND.L   #$38, D1    *Isolate source mode
000021A8                          1969              
000021A8  B2BC 00000000           1970              CMP.L   #$0, D1     *Check if 000
000021AE  6700 0038               1971              BEQ     MOVEDATAREG
000021B2                          1972              
000021B2  B2BC 00000008           1973              CMP.L   #$8, D1     *Check if 001
000021B8  6700 0040               1974              BEQ     MOVEADDRREG
000021BC                          1975              
000021BC  B2BC 00000010           1976              CMP.L   #$10, D1    *Check if 010
000021C2  6700 0048               1977              BEQ     MOVEINADDRREG
000021C6                          1978              
000021C6  B2BC 00000018           1979              CMP.L   #$18, D1    *Check if 011
000021CC  6700 0050               1980              BEQ     MOVEPLUSADDRREG
000021D0                          1981              
000021D0  B2BC 00000020           1982              CMP.L   #$20, D1    *Check if 100
000021D6  6700 0058               1983              BEQ     MOVEMINUSADDRREG
000021DA                          1984              
000021DA  B2BC 00000038           1985              CMP.L   #$38, D1     *Check if 111
000021E0  6700 0060               1986              BEQ     MOVEADDRESSDATA
000021E4                          1987              
000021E4  6000 EF42               1988              BRA     INVALIDOPCODE
000021E8                          1989              
000021E8  2200                    1990  MOVEDATAREG MOVE.L  D0, D1
000021EA  C2BC 00000007           1991              AND.L   #$7, D1     *Isolate register
000021F0  2401                    1992              MOVE.L  D1, D2      *Move value of Dn
000021F2  1A3C 0000               1993              MOVE.B  #$0, D5     *Move type of source
000021F6                          1994              
000021F6  6000 00C8               1995              BRA     MOVEDEST
000021FA                          1996              
000021FA  2200                    1997  MOVEADDRREG MOVE.L  D0, D1
000021FC  C2BC 00000007           1998              AND.L   #$7, D1     *Isolate register
00002202  2401                    1999              MOVE.L  D1, D2      *Move value of An
00002204  1A3C 0001               2000              MOVE.B  #$1, D5     *Move type of source
00002208                          2001              
00002208  6000 00B6               2002              BRA     MOVEDEST
0000220C                          2003              
0000220C  2200                    2004  MOVEINADDRREG MOVE.L  D0, D1
0000220E  C2BC 00000007           2005              AND.L   #$7, D1     *Isolate register
00002214  2401                    2006              MOVE.L  D1, D2      *Move value of an
00002216  1A3C 0003               2007              MOVE.B  #$3, D5     *Move type of source
0000221A                          2008              
0000221A  6000 00A4               2009              BRA     MOVEDEST
0000221E                          2010              
0000221E  2200                    2011  MOVEPLUSADDRREG MOVE.L  D0, D1
00002220  C2BC 00000007           2012              AND.L   #$7, D1     *Isolate register
00002226  2401                    2013              MOVE.L  D1, D2      *Move value of an
00002228  1A3C 0004               2014              MOVE.B  #$4, D5     *Move type of source
0000222C                          2015              
0000222C  6000 0092               2016              BRA     MOVEDEST
00002230                          2017              
00002230  2200                    2018  MOVEMINUSADDRREG MOVE.L  D0, D1
00002232  C2BC 00000007           2019              AND.L   #$7, D1     *Isolate register
00002238  2401                    2020              MOVE.L  D1, D2      *Move value of an
0000223A  1A3C 0005               2021              MOVE.B  #$5, D5     *Move type of source
0000223E                          2022              
0000223E  6000 0080               2023              BRA     MOVEDEST
00002242                          2024              
00002242  2200                    2025  MOVEADDRESSDATA MOVE.L  D0, D1
00002244  C2BC 00000007           2026              AND.L   #$7, D1     *Isolate register
0000224A                          2027              
0000224A  B2BC 00000000           2028              CMP.L   #$0, D1     *Check if 000
00002250  6700 001A               2029              BEQ     MOVEADDRW
00002254                          2030              
00002254  B2BC 00000001           2031              CMP.L   #$1, D1     *Check if 001
0000225A  6700 001C               2032              BEQ     MOVEADDRL
0000225E                          2033              
0000225E  B2BC 00000004           2034              CMP.L   #$4, D1     *Check if 100
00002264  6700 001E               2035              BEQ     MOVEDATA
00002268                          2036              
00002268  6000 EEBE               2037              BRA     INVALIDOPCODE
0000226C                          2038              
0000226C  3410                    2039  MOVEADDRW   MOVE.W  (A0),D2     *Move addr
0000226E  1A3C 0006               2040              MOVE.B  #$6, D5     *Store type
00002272  5488                    2041              ADDA.L  #$2, A0 
00002274                          2042              
00002274  6000 004A               2043              BRA     MOVEDEST
00002278                          2044  
00002278  2410                    2045  MOVEADDRL   MOVE.L  (A0),D2     *Move addr
0000227A  1A3C 0007               2046              MOVE.B  #$7, D5     *Store type
0000227E  5888                    2047              ADDA.L  #$4, A0 
00002280                          2048              
00002280  6000 003E               2049              BRA     MOVEDEST
00002284                          2050              
00002284  BE3C 0001               2051  MOVEDATA    CMP.B   #$1,D7     *Compare if the size is a byte  
00002288  6700 0012               2052              BEQ     MOVESIZEB
0000228C                          2053      
0000228C  BE3C 0002               2054              CMP.B   #$2,D7     *Compare if the size is a word 
00002290  6700 0016               2055              BEQ     MOVESIZEW
00002294                          2056      
00002294  BE3C 0003               2057              CMP.B   #$3,D7     *Compare if the size is a long 
00002298  6700 001A               2058              BEQ     MOVESIZEL 
0000229C                          2059  
0000229C  3410                    2060  MOVESIZEB   MOVE.W  (A0),D2 
0000229E  1A3C 0008               2061              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
000022A2  5488                    2062              ADDA.L  #$2, A0 
000022A4                          2063          
000022A4  6000 001A               2064              BRA     MOVEDEST    *Branches to destination
000022A8                          2065  
000022A8  3410                    2066  MOVESIZEW   MOVE.W  (A0),D2 
000022AA  1A3C 0008               2067              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
000022AE  5488                    2068              ADDA.L  #$2, A0 
000022B0                          2069          
000022B0  6000 000E               2070              BRA     MOVEDEST    *Branches to destination
000022B4                          2071  
000022B4  2410                    2072  MOVESIZEL   MOVE.L  (A0),D2 
000022B6  1A3C 0008               2073              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
000022BA  5888                    2074              ADDA.L  #$4, A0 
000022BC                          2075          
000022BC  6000 0002               2076              BRA     MOVEDEST    *Branches to destination
000022C0                          2077  
000022C0  3200                    2078  MOVEDEST    MOVE.W  D0, D1
000022C2  C27C 01C0               2079              AND.W   #$1C0, D1 *Moves hex value to D1 for Comparison 00000111000000
000022C6  B27C 0000               2080              CMP.W   #$0, D1   *Checks to see if the size is Dn(Data Register) 
000022CA  6700 0026               2081              BEQ     MOVEDATAREGD  *Goes to Dn Process 
000022CE                          2082          
000022CE  B27C 0080               2083              CMP.W   #$80, D1   *Checks (An)
000022D2  6700 0030               2084              BEQ     MOVEINADDRD
000022D6                          2085          
000022D6  B27C 0018               2086              CMP.W   #$18, D1 *Checks (An)+
000022DA  6700 003A               2087              BEQ     MOVEPOSTADDRD
000022DE                          2088          
000022DE  B27C 0020               2089              CMP.W   #$20, D1 *Checks -(An)
000022E2  6700 0044               2090              BEQ     MOVEPREADDRD
000022E6                          2091          
000022E6  B27C 01C0               2092              CMP.W   #$1C0, D1 *Checks Addressing Mode
000022EA  6700 004E               2093              BEQ     MOVEADDRD
000022EE                          2094              
000022EE  6000 EE38               2095              BRA     INVALIDOPCODE
000022F2                          2096              
000022F2  3200                    2097  MOVEDATAREGD    MOVE.W  D0, D1
000022F4  C27C 0E00               2098                  AND.W   #$E00, D1   *Isolate register
000022F8  E081                    2099                  ASR.L   #8, D1
000022FA  E281                    2100                  ASR.L   #1, D1
000022FC  3601                    2101                  MOVE.W  D1, D3
000022FE  1C3C 0000               2102                  MOVE.B  #$0, D6
00002302                          2103                  
00002302  4E75                    2104                  RTS
00002304                          2105                  
00002304  3200                    2106  MOVEINADDRD     MOVE.W  D0, D1
00002306  C27C 0E00               2107                  AND.W   #$E00, D1   *Isolate register
0000230A  E081                    2108                  ASR.L   #8, D1
0000230C  E281                    2109                  ASR.L   #1, D1
0000230E  3601                    2110                  MOVE.W  D1, D3
00002310  1C3C 0001               2111                  MOVE.B  #$1, D6
00002314                          2112                  
00002314  4E75                    2113                  RTS
00002316                          2114                  
00002316  3200                    2115  MOVEPOSTADDRD   MOVE.W  D0, D1
00002318  C27C 0E00               2116                  AND.W   #$E00, D1   *Isolate register
0000231C  E081                    2117                  ASR.L   #8, D1
0000231E  E281                    2118                  ASR.L   #1, D1
00002320  3601                    2119                  MOVE.W  D1, D3
00002322  1C3C 0003               2120                  MOVE.B  #$3, D6
00002326                          2121                  
00002326  4E75                    2122                  RTS
00002328                          2123                  
00002328  3200                    2124  MOVEPREADDRD    MOVE.W  D0, D1
0000232A  C27C 0E00               2125                  AND.W   #$E00, D1   *Isolate register
0000232E  E081                    2126                  ASR.L   #8, D1
00002330  E281                    2127                  ASR.L   #1, D1
00002332  3601                    2128                  MOVE.W  D1, D3
00002334  1C3C 0004               2129                  MOVE.B  #$4, D6
00002338                          2130                  
00002338  4E75                    2131                  RTS
0000233A                          2132                  
0000233A  3200                    2133  MOVEADDRD       MOVE.W  D0, D1
0000233C  C27C 0E00               2134                  AND.W   #$E00, D1   *Isolate register
00002340                          2135                  
00002340  B27C 0000               2136                  CMP.W   #$0, D1     *Check if 000
00002344  6700 000E               2137                  BEQ     MOVEADDRWD  
00002348                          2138                  
00002348  B27C 0200               2139                  CMP.W   #$200, D1     *Check if 001
0000234C  6700 0010               2140                  BEQ     MOVEADDRLD  
00002350                          2141                  
00002350  6000 EDD6               2142                  BRA     INVALIDOPCODE
00002354                          2143                  
00002354  3610                    2144  MOVEADDRWD      MOVE.W  (A0), D3
00002356  1C3C 0006               2145                  MOVE.B  #$6, D6
0000235A  5488                    2146                  ADDA.L  #$2, A0
0000235C                          2147                  
0000235C  4E75                    2148                  RTS
0000235E                          2149                  
0000235E  2610                    2150  MOVEADDRLD      MOVE.L  (A0), D3
00002360  1C3C 0007               2151                  MOVE.B  #$7, D6
00002364  5888                    2152                  ADDA.L  #$4, A0
00002366                          2153                  
00002366  4E75                    2154                  RTS
00002368                          2155  
00002368                          2156  
00002368                          2157  
00002368                          2158  
00002368                          2159  
00002368                          2160  
00002368                          2161  
00002368  2200                    2162  MOVEQEA         MOVE.L  D0, D1
0000236A  C27C 00FF               2163                  AND.W   #$FF, D1    *Isolate data
0000236E  3401                    2164                  MOVE.W  D1, D2
00002370  1A3C 0008               2165                  MOVE.B  #$8, D5
00002374                          2166                  
00002374  2200                    2167                  MOVE.L  D0, D1
00002376  C27C 0E00               2168                  AND.W   #$E00, D1    *Isolate register
0000237A  E081                    2169                  ASR.L   #8, D1
0000237C  E281                    2170                  ASR.L   #1, D1
0000237E  3601                    2171                  MOVE.W  D1, D3
00002380  1C3C 0000               2172                  MOVE.B  #$0, D6
00002384                          2173                  
00002384  4E75                    2174                  RTS
00002386                          2175                  
00002386                          2176                  
00002386                          2177                  
00002386                          2178  registers       DS.L    16
000023C6                          2179                  
000023C6  2200                    2180  MOVEMEA         MOVE.L  D0, D1
000023C8  C27C 0400               2181                  AND.W   #$400, D1       *Isolate dr field 
000023CC                          2182                  
000023CC  B27C 0400               2183                  CMP.W   #$400, D1       *Check if it's 1
000023D0  6700 00C8               2184                  BEQ     MOVEMMR
000023D4                          2185                  
000023D4  6000 0002               2186                  BRA     MOVEMRM
000023D8                          2187                  
000023D8  3410                    2188  MOVEMRM         MOVE.W  (A0), D2
000023DA  5488                    2189                  ADDA.L  #$2, A0
000023DC  45F8 2386               2190                  LEA     registers, A2   *Store array
000023E0  7A10                    2191                  MOVE.L  #$10, D5
000023E2  7C00                    2192                  MOVE.L  #$0, D6     *Counter
000023E4  3202                    2193  MOVEMRLOOP      MOVE.W  D2, D1      *For editing
000023E6  C27C 0001               2194                  AND.W   #$1, D1
000023EA                          2195                  
000023EA  B27C 0001               2196                  CMP.W   #$1, D1
000023EE  6600 0016               2197                  BNE     MOVEMNOONES
000023F2                          2198                  
000023F2  15BC 0001 6000          2199                  MOVE.B  #$1, (A2, D6)   *Insert 1 to array
000023F8  5246                    2200                  ADD.W   #1, D6
000023FA  E242                    2201                  ASR.W   #$1, D2     *Shift to right
000023FC                          2202                  
000023FC  BC7C 0010               2203                  CMP.W   #16, D6
00002400  66E2                    2204                  BNE     MOVEMRLOOP
00002402                          2205                  
00002402  6000 0016               2206                  BRA     MOVEMMDEST
00002406                          2207                  
00002406  15BC 0000 6000          2208  MOVEMNOONES     MOVE.B  #$0, (A2, D6)
0000240C  5246                    2209                  ADD.W  #1, D6     *Add counter
0000240E  E242                    2210                  ASR.W   #$1, D2     *Shift to right
00002410                          2211                  
00002410  BC7C 0010               2212                  CMP.W   #16, D6
00002414  66CE                    2213                  BNE     MOVEMRLOOP
00002416                          2214                  
00002416  6000 0002               2215                  BRA     MOVEMMDEST
0000241A                          2216                  
0000241A  4246                    2217  MOVEMMDEST      CLR     D6
0000241C  2200                    2218                  MOVE.L  D0, D1
0000241E  C2BC 00000038           2219                  AND.L   #$38, D1    *Isolate source mode
00002424                          2220              
00002424  B2BC 00000010           2221                  CMP.L   #$10, D1    *Check if 010
0000242A  6700 0018               2222                  BEQ     MOVEMINADDRREGD
0000242E                          2223                  
0000242E  B27C 0020               2224                  CMP.W   #$20, D1 *Checks -(An)
00002432  6700 0020               2225                  BEQ     MOVEMPREADDRD
00002436                          2226              
00002436  B2BC 00000038           2227                  CMP.L   #$38, D1     *Check if 111
0000243C  6700 0028               2228                  BEQ     MOVEMADDRESSD
00002440                          2229                  
00002440  6000 ECE6               2230                  BRA     INVALIDOPCODE
00002444                          2231                  
00002444  2200                    2232  MOVEMINADDRREGD MOVE.L  D0, D1
00002446  C2BC 00000007           2233                  AND.L   #$7, D1     *Isolate register
0000244C  2601                    2234                  MOVE.L  D1, D3      *Move value of an
0000244E  1C3C 0003               2235                  MOVE.B  #$3, D6     *Move type of dest
00002452                          2236              
00002452  4E75                    2237                  RTS
00002454                          2238                  
00002454  2200                    2239  MOVEMPREADDRD   MOVE.L  D0, D1
00002456  C2BC 00000007           2240                  AND.L   #$7, D1     *Isolate register
0000245C  2601                    2241                  MOVE.L  D1, D3      *Move value of an
0000245E  1C3C 0005               2242                  MOVE.B  #$5, D6     *Move type of dest
00002462  7A11                    2243                  MOVE.L  #$11, D5    *flip mask
00002464                          2244              
00002464  4E75                    2245                  RTS
00002466                          2246              
00002466  2200                    2247  MOVEMADDRESSD   MOVE.L  D0, D1
00002468  C2BC 00000007           2248                  AND.L   #$7, D1     *Isolate register
0000246E                          2249              
0000246E  B2BC 00000000           2250                  CMP.L   #$0, D1     *Check if 000
00002474  6700 0010               2251                  BEQ     MOVEMADDRWD
00002478                          2252              
00002478  B2BC 00000001           2253                  CMP.L   #$1, D1     *Check if 001
0000247E  6700 0010               2254                  BEQ     MOVEMADDRLD
00002482                          2255                  
00002482  6000 ECA4               2256                  BRA     INVALIDOPCODE
00002486                          2257              
00002486  3610                    2258  MOVEMADDRWD     MOVE.W  (A0),D3     *Move addr
00002488  1C3C 0006               2259                  MOVE.B  #$6, D6     *Store type
0000248C  5488                    2260                  ADDA.L  #$2, A0 
0000248E                          2261              
0000248E  4E75                    2262                  RTS
00002490                          2263  
00002490  2610                    2264  MOVEMADDRLD     MOVE.L  (A0),D3     *Move addr
00002492  1C3C 0007               2265                  MOVE.B  #$7, D6     *Store type
00002496  5888                    2266                  ADDA.L  #$4, A0
00002498                          2267              
00002498  4E75                    2268                  RTS
0000249A                          2269                  
0000249A                          2270                  
0000249A                          2271                  
0000249A                          2272       
0000249A  3610                    2273  MOVEMMR         MOVE.W  (A0), D3
0000249C  5488                    2274                  ADDA.L  #$2, A0
0000249E  45F8 2386               2275                  LEA     registers, A2   *Store array
000024A2  7C10                    2276                  MOVE.L  #$10, D6
000024A4  7A00                    2277                  MOVE.L  #$0, D5     *Counter
000024A6  3203                    2278  MOVEMRLOOPD     MOVE.W  D3, D1      *For editing
000024A8  C27C 0001               2279                  AND.W   #$1, D1
000024AC                          2280                  
000024AC  B27C 0001               2281                  CMP.W   #$1, D1
000024B0  6600 0016               2282                  BNE     MOVEMNOONE
000024B4                          2283                  
000024B4  15BC 0001 5000          2284                  MOVE.B  #$1, (A2, D5)   *Insert 1 to array
000024BA  5245                    2285                  ADD.W   #1, D5
000024BC  E243                    2286                  ASR.W   #$1, D3     *Shift to right
000024BE                          2287                  
000024BE  BA7C 0010               2288                  CMP.W   #16, D5
000024C2  66E2                    2289                  BNE     MOVEMRLOOPD
000024C4                          2290                  
000024C4  6000 0016               2291                  BRA     MOVEMRDEST
000024C8                          2292                  
000024C8  15BC 0000 5000          2293  MOVEMNOONE      MOVE.B  #$0, (A2, D5)
000024CE  5245                    2294                  ADD.W  #1, D5     *Add counter
000024D0  E243                    2295                  ASR.W   #$1, D3     *Shift to right
000024D2                          2296                  
000024D2  BA7C 0010               2297                  CMP.W   #16, D5
000024D6  66CE                    2298                  BNE     MOVEMRLOOPD
000024D8                          2299                  
000024D8  6000 0002               2300                  BRA     MOVEMRDEST
000024DC                          2301                  
000024DC  2200                    2302  MOVEMRDEST      MOVE.L  D0, D1
000024DE  C2BC 00000038           2303                  AND.L   #$38, D1    *Isolate source mode
000024E4                          2304              
000024E4  B2BC 00000010           2305                  CMP.L   #$10, D1    *Check if 010
000024EA  6700 001A               2306                  BEQ     MOVEMINADDRREG
000024EE                          2307                  
000024EE  B2BC 00000018           2308                  CMP.L   #$18, D1    *Check if 011
000024F4  6700 0020               2309                  BEQ     MOVEMPLUSADDRREG
000024F8                          2310              
000024F8  B2BC 00000038           2311                  CMP.L   #$38, D1     *Check if 111
000024FE  6700 0026               2312                  BEQ     MOVEMADDRESS
00002502                          2313                  
00002502  6000 EC24               2314                  BRA     INVALIDOPCODE
00002506                          2315              
00002506  2200                    2316  MOVEMINADDRREG  MOVE.L  D0, D1
00002508  C2BC 00000007           2317                  AND.L   #$7, D1     *Isolate register
0000250E  2401                    2318                  MOVE.L  D1, D2      *Move value of an
00002510  1A3C 0003               2319                  MOVE.B  #$3, D5     *Move type of source
00002514                          2320              
00002514  4E75                    2321                  RTS 
00002516                          2322                  
00002516  2200                    2323  MOVEMPLUSADDRREG MOVE.L  D0, D1
00002518  C2BC 00000007           2324                  AND.L   #$7, D1     *Isolate register
0000251E  2401                    2325                  MOVE.L  D1, D2      *Move value of an
00002520  1A3C 0004               2326                  MOVE.B  #$4, D5     *Move type of source
00002524                          2327              
00002524  4E75                    2328                  RTS
00002526                          2329              
00002526  2200                    2330  MOVEMADDRESS    MOVE.L  D0, D1
00002528  C2BC 00000007           2331                  AND.L   #$7, D1     *Isolate register
0000252E                          2332              
0000252E  B2BC 00000000           2333                  CMP.L   #$0, D1     *Check if 000
00002534  6700 000E               2334                  BEQ     MOVEMADDRW
00002538                          2335              
00002538  B2BC 00000001           2336                  CMP.L   #$1, D1     *Check if 001
0000253E  6700 000E               2337                  BEQ     MOVEMADDRL
00002542                          2338                  
00002542  4E75                    2339                  RTS
00002544                          2340              
00002544  3410                    2341  MOVEMADDRW      MOVE.W  (A0),D2     *Move addr
00002546  1A3C 0006               2342                  MOVE.B  #$6, D5     *Store type
0000254A  5488                    2343                  ADDA.L  #$2, A0 
0000254C                          2344              
0000254C  4E75                    2345                  RTS
0000254E                          2346  
0000254E  2410                    2347  MOVEMADDRL      MOVE.L  (A0),D2     *Move addr
00002550  1A3C 0007               2348                  MOVE.B  #$7, D5     *Store type
00002554  5888                    2349                  ADDA.L  #$4, A0
00002556                          2350              
00002556  4E75                    2351                  RTS
00002558                          2352  
00002558                          2353                  
00002558                          2354                  
00002558                          2355                  
00002558                          2356                  
00002558                          2357                  
00002558                          2358  
00002558                          2359                 
00002558                          2360                  
00002558                          2361                  
00002558                          2362                  
00002558                          2363                  
00002558                          2364                  
00002558  3200                    2365  ADDEA           MOVE.W  D0, D1
0000255A  C27C 01C0               2366                  AND.W   #$1C0, D1     *Isolate opmode
0000255E                          2367                  
0000255E  B27C 0100               2368                  CMP.W   #$100, D1     *Check if < 100
00002562  6D00 00B2               2369                  BLT     ADDEADN
00002566                          2370                  
00002566  6000 0002               2371                  BRA     ADDDNEA
0000256A                          2372                  
0000256A  3200                    2373  ADDDNEA         MOVE.W  D0, D1
0000256C  C27C 0E00               2374                  AND.W   #$E00, D1   *Isolate register
00002570  E081                    2375                  ASR.L   #8, D1
00002572  E281                    2376                  ASR.L   #1, D1
00002574  3401                    2377                  MOVE.W  D1, D2      *Move register to d2
00002576  1A3C 0000               2378                  MOVE.B  #$0, D5
0000257A                          2379                  
0000257A  6000 0002               2380                  BRA     ADDDNEADEST
0000257E                          2381                  
0000257E  2200                    2382  ADDDNEADEST     MOVE.L  D0, D1
00002580  C2BC 00000038           2383                  AND.L   #$38, D1    *Isolate mode
00002586                          2384              
00002586  B2BC 00000010           2385                  CMP.L   #$10, D1    *Check if 010
0000258C  6700 0024               2386                  BEQ     ADDINADDRREGD
00002590                          2387              
00002590  B2BC 00000018           2388                  CMP.L   #$18, D1    *Check if 011
00002596  6700 002A               2389                  BEQ     ADDPLUSADDRREGD
0000259A                          2390              
0000259A  B2BC 00000020           2391                  CMP.L   #$20, D1    *Check if 100
000025A0  6700 0030               2392                  BEQ     ADDMINUSADDRREGD
000025A4                          2393              
000025A4  B2BC 00000038           2394                  CMP.L   #$38, D1     *Check if 111
000025AA  6700 0036               2395                  BEQ     ADDADDRESSD
000025AE                          2396                  
000025AE  6000 EB78               2397                  BRA     INVALIDOPCODE
000025B2                          2398                  
000025B2                          2399              
000025B2  2200                    2400  ADDINADDRREGD MOVE.L  D0, D1
000025B4  C2BC 00000007           2401              AND.L   #$7, D1     *Isolate register
000025BA  2601                    2402              MOVE.L  D1, D3      *Move value of an
000025BC  1C3C 0003               2403              MOVE.B  #$3, D6     *Move type of source
000025C0                          2404              
000025C0  4E75                    2405              RTS
000025C2                          2406              
000025C2  2200                    2407  ADDPLUSADDRREGD MOVE.L  D0, D1
000025C4  C2BC 00000007           2408              AND.L   #$7, D1     *Isolate register
000025CA  2601                    2409              MOVE.L  D1, D3      *Move value of an
000025CC  1C3C 0004               2410              MOVE.B  #$4, D6     *Move type of source
000025D0                          2411              
000025D0  4E75                    2412              RTS
000025D2                          2413              
000025D2  2200                    2414  ADDMINUSADDRREGD MOVE.L  D0, D1
000025D4  C2BC 00000007           2415              AND.L   #$7, D1     *Isolate register
000025DA  2601                    2416              MOVE.L  D1, D3      *Move value of an
000025DC  1C3C 0005               2417              MOVE.B  #$5, D6     *Move type of source
000025E0                          2418              
000025E0  4E75                    2419              RTS
000025E2                          2420              
000025E2  2200                    2421  ADDADDRESSD MOVE.L  D0, D1
000025E4  C2BC 00000007           2422              AND.L   #$7, D1     *Isolate register
000025EA                          2423              
000025EA  B2BC 00000000           2424              CMP.L   #$0, D1     *Check if 000
000025F0  6700 0010               2425              BEQ     ADDADDRWD
000025F4                          2426              
000025F4  B2BC 00000001           2427              CMP.L   #$1, D1     *Check if 001
000025FA  6700 0010               2428              BEQ     ADDADDRLD
000025FE                          2429              
000025FE  6000 EB28               2430              BRA     INVALIDOPCODE
00002602                          2431              
00002602  3610                    2432  ADDADDRWD   MOVE.W  (A0),D3     *Move addr
00002604  1C3C 0006               2433              MOVE.B  #$6, D6     *Store type
00002608  5488                    2434              ADDA.L  #$2, A0 
0000260A                          2435              
0000260A  4E75                    2436              RTS
0000260C                          2437  
0000260C  2610                    2438  ADDADDRLD   MOVE.L  (A0),D3     *Move addr
0000260E  1C3C 0007               2439              MOVE.B  #$7, D6     *Store type
00002612  5888                    2440              ADDA.L  #$4, A0
00002614                          2441              
00002614  4E75                    2442              RTS
00002616                          2443                  
00002616  2200                    2444  ADDEADN     MOVE.L  D0, D1
00002618  C2BC 00000038           2445              AND.L   #$38, D1    *Isolate source mode
0000261E                          2446              
0000261E  B2BC 00000000           2447              CMP.L   #$0, D1     *Check if 000
00002624  6700 0038               2448              BEQ     ADDDATAREG
00002628                          2449              
00002628  B2BC 00000008           2450              CMP.L   #$8, D1     *Check if 001
0000262E  6700 0040               2451              BEQ     ADDADDRREG
00002632                          2452              
00002632  B2BC 00000010           2453              CMP.L   #$10, D1    *Check if 010
00002638  6700 0048               2454              BEQ     ADDINADDRREG
0000263C                          2455              
0000263C  B2BC 00000018           2456              CMP.L   #$18, D1    *Check if 011
00002642  6700 0050               2457              BEQ     ADDPLUSADDRREG
00002646                          2458              
00002646  B2BC 00000020           2459              CMP.L   #$20, D1    *Check if 100
0000264C  6700 0058               2460              BEQ     ADDMINUSADDRREG
00002650                          2461              
00002650  B2BC 00000038           2462              CMP.L   #$38, D1     *Check if 111
00002656  6700 0060               2463              BEQ     ADDADDRESSDATA
0000265A                          2464              
0000265A  6000 EACC               2465              BRA     INVALIDOPCODE
0000265E                          2466                  
0000265E  2200                    2467  ADDDATAREG  MOVE.L  D0, D1
00002660  C2BC 00000007           2468              AND.L   #$7, D1     *Isolate register
00002666  2401                    2469              MOVE.L  D1, D2      *Move value of Dn
00002668  1A3C 0000               2470              MOVE.B  #$0, D5     *Move type of source
0000266C                          2471              
0000266C  6000 00C8               2472              BRA     ADDDNDEST
00002670                          2473              
00002670  2200                    2474  ADDADDRREG  MOVE.L  D0, D1
00002672  C2BC 00000007           2475              AND.L   #$7, D1     *Isolate register
00002678  2401                    2476              MOVE.L  D1, D2      *Move value of An
0000267A  1A3C 0001               2477              MOVE.B  #$1, D5     *Move type of source
0000267E                          2478              
0000267E  6000 00B6               2479              BRA     ADDDNDEST
00002682                          2480              
00002682  2200                    2481  ADDINADDRREG MOVE.L  D0, D1
00002684  C2BC 00000007           2482              AND.L   #$7, D1     *Isolate register
0000268A  2401                    2483              MOVE.L  D1, D2      *Move value of an
0000268C  1A3C 0003               2484              MOVE.B  #$3, D5     *Move type of source
00002690                          2485              
00002690  6000 00A4               2486              BRA     ADDDNDEST
00002694                          2487              
00002694  2200                    2488  ADDPLUSADDRREG MOVE.L  D0, D1
00002696  C2BC 00000007           2489              AND.L   #$7, D1     *Isolate register
0000269C  2401                    2490              MOVE.L  D1, D2      *Move value of an
0000269E  1A3C 0004               2491              MOVE.B  #$4, D5     *Move type of source
000026A2                          2492              
000026A2  6000 0092               2493              BRA     ADDDNDEST
000026A6                          2494              
000026A6  2200                    2495  ADDMINUSADDRREG MOVE.L  D0, D1
000026A8  C2BC 00000007           2496              AND.L   #$7, D1     *Isolate register
000026AE  2401                    2497              MOVE.L  D1, D2      *Move value of an
000026B0  1A3C 0005               2498              MOVE.B  #$5, D5     *Move type of source
000026B4                          2499              
000026B4  6000 0080               2500              BRA     ADDDNDEST
000026B8                          2501              
000026B8  2200                    2502  ADDADDRESSDATA MOVE.L  D0, D1
000026BA  C2BC 00000007           2503              AND.L   #$7, D1     *Isolate register
000026C0                          2504              
000026C0  B2BC 00000000           2505              CMP.L   #$0, D1     *Check if 000
000026C6  6700 001A               2506              BEQ     ADDADDRW
000026CA                          2507              
000026CA  B2BC 00000001           2508              CMP.L   #$1, D1     *Check if 001
000026D0  6700 001C               2509              BEQ     ADDADDRL
000026D4                          2510              
000026D4  B2BC 00000004           2511              CMP.L   #$4, D1     *Check if 100
000026DA  6700 001E               2512              BEQ     ADDDATA
000026DE                          2513              
000026DE  6000 EA48               2514              BRA     INVALIDOPCODE
000026E2                          2515              
000026E2  3410                    2516  ADDADDRW    MOVE.W  (A0),D2     *Move addr
000026E4  1A3C 0006               2517              MOVE.B  #$6, D5     *Store type
000026E8  5488                    2518              ADDA.L  #$2, A0 
000026EA                          2519              
000026EA  6000 004A               2520              BRA     ADDDNDEST
000026EE                          2521  
000026EE  2410                    2522  ADDADDRL    MOVE.L  (A0),D2     *Move addr
000026F0  1A3C 0007               2523              MOVE.B  #$7, D5     *Store type
000026F4  5888                    2524              ADDA.L  #$4, A0 
000026F6                          2525              
000026F6  6000 003E               2526              BRA     ADDDNDEST
000026FA                          2527              
000026FA  BE3C 0001               2528  ADDDATA     CMP.B   #$1,D7     *Compare if the size is a byte  
000026FE  6700 0012               2529              BEQ     ADDSIZEB
00002702                          2530      
00002702  BE3C 0002               2531              CMP.B   #$2,D7     *Compare if the size is a word 
00002706  6700 0016               2532              BEQ     ADDSIZEW
0000270A                          2533      
0000270A  BE3C 0003               2534              CMP.B   #$3,D7     *Compare if the size is a long 
0000270E  6700 001A               2535              BEQ     ADDSIZEL 
00002712                          2536  
00002712  3410                    2537  ADDSIZEB    MOVE.W  (A0),D2 
00002714  1A3C 0008               2538              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002718  5488                    2539              ADDA.L  #$2, A0 
0000271A                          2540          
0000271A  6000 001A               2541              BRA     ADDDNDEST *Branches to destination
0000271E                          2542  
0000271E  3410                    2543  ADDSIZEW    MOVE.W  (A0),D2 
00002720  1A3C 0008               2544              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002724  5488                    2545              ADDA.L  #$2, A0 
00002726                          2546          
00002726  6000 000E               2547              BRA     ADDDNDEST *Branches to destination
0000272A                          2548  
0000272A  2410                    2549  ADDSIZEL    MOVE.L  (A0),D2 
0000272C  1A3C 0008               2550              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002730  5888                    2551              ADDA.L  #$4, A0 
00002732                          2552          
00002732  6000 0002               2553              BRA     ADDDNDEST *Branches to destination
00002736                          2554              
00002736  3200                    2555  ADDDNDEST   MOVE.W  D0, D1
00002738  C27C 0E00               2556              AND.W   #$E00, D1   *Isolate register
0000273C  E081                    2557              ASR.L   #8, D1
0000273E  E281                    2558              ASR.L   #1, D1
00002740  3601                    2559              MOVE.W  D1, D3      *Move register to d3
00002742  1C3C 0000               2560              MOVE.B  #$0, D6
00002746                          2561              
00002746  4E75                    2562              RTS
00002748                          2563              *Check add size
00002748                          2564              
00002748                          2565              
00002748                          2566              
00002748                          2567              
00002748  2200                    2568  ADDAEA      MOVE.L  D0, D1
0000274A  C2BC 00000038           2569              AND.L   #$38, D1    *Isolate source mode
00002750                          2570              
00002750  B2BC 00000000           2571              CMP.L   #$0, D1     *Check if 000
00002756  6700 0038               2572              BEQ     ADDADATAREG
0000275A                          2573              
0000275A  B2BC 00000008           2574              CMP.L   #$8, D1     *Check if 001
00002760  6700 0040               2575              BEQ     ADDAADDRREG
00002764                          2576              
00002764  B2BC 00000010           2577              CMP.L   #$10, D1    *Check if 010
0000276A  6700 0048               2578              BEQ     ADDAINADDRREG
0000276E                          2579              
0000276E  B2BC 00000018           2580              CMP.L   #$18, D1    *Check if 011
00002774  6700 0050               2581              BEQ     ADDAPLUSADDRREG
00002778                          2582              
00002778  B2BC 00000020           2583              CMP.L   #$20, D1    *Check if 100
0000277E  6700 0058               2584              BEQ     ADDAMINUSADDRREG
00002782                          2585              
00002782  B2BC 00000038           2586              CMP.L   #$38, D1     *Check if 111
00002788  6700 0060               2587              BEQ     ADDAADDRESSDATA
0000278C                          2588              
0000278C  6000 E99A               2589              BRA     INVALIDOPCODE
00002790                          2590              
00002790  2200                    2591  ADDADATAREG MOVE.L  D0, D1
00002792  C2BC 00000007           2592              AND.L   #$7, D1     *Isolate register
00002798  2401                    2593              MOVE.L  D1, D2      *Move value of Dn
0000279A  1A3C 0000               2594              MOVE.B  #$0, D5     *Move type of source
0000279E                          2595              
0000279E  6000 00C8               2596              BRA     ADDADEST 
000027A2                          2597              
000027A2  2200                    2598  ADDAADDRREG MOVE.L  D0, D1
000027A4  C2BC 00000007           2599              AND.L   #$7, D1     *Isolate register
000027AA  2401                    2600              MOVE.L  D1, D2      *Move value of An
000027AC  1A3C 0001               2601              MOVE.B  #$1, D5     *Move type of source
000027B0                          2602              
000027B0  6000 00B6               2603              BRA     ADDADEST 
000027B4                          2604              
000027B4  2200                    2605  ADDAINADDRREG MOVE.L  D0, D1
000027B6  C2BC 00000007           2606              AND.L   #$7, D1     *Isolate register
000027BC  2401                    2607              MOVE.L  D1, D2      *Move value of an
000027BE  1A3C 0003               2608              MOVE.B  #$3, D5     *Move type of source
000027C2                          2609              
000027C2  6000 00A4               2610              BRA     ADDADEST 
000027C6                          2611              
000027C6  2200                    2612  ADDAPLUSADDRREG MOVE.L  D0, D1
000027C8  C2BC 00000007           2613              AND.L   #$7, D1     *Isolate register
000027CE  2401                    2614              MOVE.L  D1, D2      *Move value of an
000027D0  1A3C 0004               2615              MOVE.B  #$4, D5     *Move type of source
000027D4                          2616              
000027D4  6000 0092               2617              BRA     ADDADEST 
000027D8                          2618              
000027D8  2200                    2619  ADDAMINUSADDRREG MOVE.L  D0, D1
000027DA  C2BC 00000007           2620              AND.L   #$7, D1     *Isolate register
000027E0  2401                    2621              MOVE.L  D1, D2      *Move value of an
000027E2  1A3C 0005               2622              MOVE.B  #$5, D5     *Move type of source
000027E6                          2623              
000027E6  6000 0080               2624              BRA     ADDADEST 
000027EA                          2625              
000027EA  2200                    2626  ADDAADDRESSDATA MOVE.L  D0, D1
000027EC  C2BC 00000007           2627              AND.L   #$7, D1     *Isolate register
000027F2                          2628              
000027F2  B2BC 00000000           2629              CMP.L   #$0, D1     *Check if 000
000027F8  6700 001A               2630              BEQ     ADDAADDRW
000027FC                          2631              
000027FC  B2BC 00000001           2632              CMP.L   #$1, D1     *Check if 001
00002802  6700 001C               2633              BEQ     ADDAADDRL
00002806                          2634              
00002806  B2BC 00000004           2635              CMP.L   #$4, D1     *Check if 100
0000280C  6700 001E               2636              BEQ     ADDADATA
00002810                          2637              
00002810  6000 E916               2638              BRA     INVALIDOPCODE
00002814                          2639              
00002814  3410                    2640  ADDAADDRW   MOVE.W  (A0),D2     *Move addr
00002816  1A3C 0006               2641              MOVE.B  #$6, D5     *Store type
0000281A  5488                    2642              ADDA.L  #$2, A0 
0000281C                          2643              
0000281C  6000 004A               2644              BRA     ADDADEST 
00002820                          2645  
00002820  2410                    2646  ADDAADDRL   MOVE.L  (A0),D2     *Move addr
00002822  1A3C 0007               2647              MOVE.B  #$7, D5     *Store type
00002826  5888                    2648              ADDA.L  #$4, A0 
00002828                          2649              
00002828  6000 003E               2650              BRA     ADDADEST 
0000282C                          2651              
0000282C  BE3C 0001               2652  ADDADATA    CMP.B   #$1,D7     *Compare if the size is a byte  
00002830  6700 0012               2653              BEQ     ADDASIZEB
00002834                          2654      
00002834  BE3C 0002               2655              CMP.B   #$2,D7     *Compare if the size is a word 
00002838  6700 0016               2656              BEQ     ADDASIZEW
0000283C                          2657      
0000283C  BE3C 0003               2658              CMP.B   #$3,D7     *Compare if the size is a long 
00002840  6700 001A               2659              BEQ     ADDASIZEL 
00002844                          2660  
00002844  3410                    2661  ADDASIZEB   MOVE.W  (A0),D2 
00002846  1A3C 0008               2662              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
0000284A  5488                    2663              ADDA.L  #$2, A0 
0000284C                          2664          
0000284C  6000 001A               2665              BRA     ADDADEST *Branches to destination
00002850                          2666  
00002850  3410                    2667  ADDASIZEW   MOVE.W  (A0),D2 
00002852  1A3C 0008               2668              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002856  5488                    2669              ADDA.L  #$2, A0 
00002858                          2670          
00002858  6000 000E               2671              BRA     ADDADEST *Branches to destination
0000285C                          2672  
0000285C  2410                    2673  ADDASIZEL   MOVE.L  (A0),D2 
0000285E  1A3C 0008               2674              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002862  5888                    2675              ADDA.L  #$4, A0 
00002864                          2676          
00002864  6000 0002               2677              BRA     ADDADEST 
00002868                          2678  
00002868  3200                    2679  ADDADEST    MOVE.W  D0, D1
0000286A  C27C 0E00               2680              AND.W   #$E00, D1   *Isolate register
0000286E  E081                    2681              ASR.L   #8, D1
00002870  E281                    2682              ASR.L   #1, D1
00002872  3601                    2683              MOVE.W  D1, D3
00002874  1C3C 0001               2684              MOVE.B  #$1, D6
00002878                          2685              
00002878  4E75                    2686              RTS
0000287A                          2687              
0000287A                          2688              
0000287A  BE3C 0001               2689  ADDIEA      CMP.B   #$1,D7     *Compare if the size is a byte  
0000287E  6700 0012               2690              BEQ     ADDISIZEB
00002882                          2691      
00002882  BE3C 0002               2692              CMP.B   #$2,D7     *Compare if the size is a word 
00002886  6700 0016               2693              BEQ     ADDISIZEW
0000288A                          2694      
0000288A  BE3C 0003               2695              CMP.B   #$3,D7     *Compare if the size is a long 
0000288E  6700 001A               2696              BEQ     ADDISIZEL 
00002892                          2697  
00002892  3410                    2698  ADDISIZEB   MOVE.W  (A0),D2 
00002894  1A3C 0008               2699              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002898  5488                    2700              ADDA.L  #$2, A0 
0000289A                          2701          
0000289A  6000 001A               2702              BRA     ADDIDEST *Branches to destination
0000289E                          2703  
0000289E  3410                    2704  ADDISIZEW   MOVE.W  (A0),D2 
000028A0  1A3C 0008               2705              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
000028A4  5488                    2706              ADDA.L  #$2, A0 
000028A6                          2707          
000028A6  6000 000E               2708              BRA     ADDIDEST *Branches to destination
000028AA                          2709  
000028AA  2410                    2710  ADDISIZEL   MOVE.L  (A0),D2 
000028AC  1A3C 0008               2711              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
000028B0  5888                    2712              ADDA.L  #$4, A0
000028B2                          2713              
000028B2  6000 0002               2714              BRA     ADDIDEST
000028B6                          2715              
000028B6  2200                    2716  ADDIDEST    MOVE.L  D0, D1
000028B8  C2BC 00000038           2717              AND.L   #$38, D1    *Isolate source mode
000028BE                          2718              
000028BE  B2BC 00000000           2719              CMP.L   #$0, D1     *Check if 000
000028C4  6700 002E               2720              BEQ     ADDIDATAREG
000028C8                          2721              
000028C8  B2BC 00000010           2722              CMP.L   #$10, D1    *Check if 010
000028CE  6700 0034               2723              BEQ     ADDIINADDRREG
000028D2                          2724              
000028D2  B2BC 00000018           2725              CMP.L   #$18, D1    *Check if 011
000028D8  6700 003A               2726              BEQ     ADDIPLUSADDRREG
000028DC                          2727              
000028DC  B2BC 00000020           2728              CMP.L   #$20, D1    *Check if 100
000028E2  6700 0040               2729              BEQ     ADDIMINUSADDRREG
000028E6                          2730              
000028E6  B2BC 00000038           2731              CMP.L   #$38, D1     *Check if 111
000028EC  6700 0046               2732              BEQ     ADDIADDRESS
000028F0                          2733              
000028F0  6000 E836               2734              BRA     INVALIDOPCODE
000028F4                          2735              
000028F4  2200                    2736  ADDIDATAREG MOVE.L  D0, D1
000028F6  C2BC 00000007           2737              AND.L   #$7, D1     *Isolate register
000028FC  2401                    2738              MOVE.L  D1, D2      *Move value of Dn
000028FE  1A3C 0000               2739              MOVE.B  #$0, D5     *Move type of source
00002902                          2740              
00002902  4E75                    2741              RTS
00002904                          2742              
00002904  2200                    2743  ADDIINADDRREG MOVE.L  D0, D1
00002906  C2BC 00000007           2744              AND.L   #$7, D1     *Isolate register
0000290C  2401                    2745              MOVE.L  D1, D2      *Move value of an
0000290E  1A3C 0003               2746              MOVE.B  #$3, D5     *Move type of source
00002912                          2747              
00002912  4E75                    2748              RTS
00002914                          2749              
00002914  2200                    2750  ADDIPLUSADDRREG MOVE.L  D0, D1
00002916  C2BC 00000007           2751              AND.L   #$7, D1     *Isolate register
0000291C  2401                    2752              MOVE.L  D1, D2      *Move value of an
0000291E  1A3C 0004               2753              MOVE.B  #$4, D5     *Move type of source
00002922                          2754              
00002922  4E75                    2755              RTS
00002924                          2756              
00002924  2200                    2757  ADDIMINUSADDRREG MOVE.L  D0, D1
00002926  C2BC 00000007           2758              AND.L   #$7, D1     *Isolate register
0000292C  2401                    2759              MOVE.L  D1, D2      *Move value of an
0000292E  1A3C 0005               2760              MOVE.B  #$5, D5     *Move type of source
00002932                          2761              
00002932  4E75                    2762              RTS
00002934                          2763              
00002934  2200                    2764  ADDIADDRESS MOVE.L  D0, D1
00002936  C2BC 00000007           2765              AND.L   #$7, D1     *Isolate register
0000293C                          2766              
0000293C  B2BC 00000000           2767              CMP.L   #$0, D1     *Check if 000
00002942  6700 0010               2768              BEQ     ADDIADDRW
00002946                          2769              
00002946  B2BC 00000001           2770              CMP.L   #$1, D1     *Check if 001
0000294C  6700 0010               2771              BEQ     ADDIADDRL
00002950                          2772              
00002950  6000 E7D6               2773              BRA     INVALIDOPCODE
00002954                          2774              
00002954  3410                    2775  ADDIADDRW   MOVE.W  (A0),D2     *Move addr
00002956  1A3C 0006               2776              MOVE.B  #$6, D5     *Store type
0000295A  5488                    2777              ADDA.L  #$2, A0 
0000295C                          2778              
0000295C  4E75                    2779              RTS
0000295E                          2780  
0000295E  2410                    2781  ADDIADDRL   MOVE.L  (A0),D2     *Move addr
00002960  1A3C 0007               2782              MOVE.B  #$7, D5     *Store type
00002964  5888                    2783              ADDA.L  #$4, A0 
00002966                          2784              
00002966  4E75                    2785              RTS
00002968                          2786  
00002968                          2787  
00002968                          2788  
00002968                          2789              
00002968                          2790              
00002968  3200                    2791  SUBEA           MOVE.W  D0, D1
0000296A  C27C 01C0               2792                  AND.W   #$1C0, D1     *Isolate opmode
0000296E                          2793                  
0000296E  B27C 0100               2794                  CMP.W   #$100, D1     *Check if < 100
00002972  6D00 00B2               2795                  BLT     SUBEADN
00002976                          2796                  
00002976  6000 0002               2797                  BRA     SUBDNEA
0000297A                          2798                  
0000297A  3200                    2799  SUBDNEA         MOVE.W  D0, D1
0000297C  C27C 0E00               2800                  AND.W   #$E00, D1   *Isolate register
00002980  E081                    2801                  ASR.L   #8, D1
00002982  E281                    2802                  ASR.L   #1, D1
00002984  3401                    2803                  MOVE.W  D1, D2      *Move register to d2
00002986  1A3C 0000               2804                  MOVE.B  #$0, D5
0000298A                          2805                  
0000298A  6000 0002               2806                  BRA     SUBEADEST
0000298E                          2807                  
0000298E  2200                    2808  SUBEADEST       MOVE.L  D0, D1
00002990  C2BC 00000038           2809                  AND.L   #$38, D1    *Isolate mode
00002996                          2810              
00002996  B2BC 00000010           2811                  CMP.L   #$10, D1    *Check if 010
0000299C  6700 0024               2812                  BEQ     SUBINADDRREGD
000029A0                          2813              
000029A0  B2BC 00000018           2814                  CMP.L   #$18, D1    *Check if 011
000029A6  6700 002A               2815                  BEQ     SUBPLUSADDRREGD
000029AA                          2816              
000029AA  B2BC 00000020           2817                  CMP.L   #$20, D1    *Check if 100
000029B0  6700 0030               2818                  BEQ     SUBMINUSADDRREGD
000029B4                          2819              
000029B4  B2BC 00000038           2820                  CMP.L   #$38, D1     *Check if 111
000029BA  6700 0036               2821                  BEQ     SUBADDRESSD
000029BE                          2822                  
000029BE  6000 E768               2823                  BRA     INVALIDOPCODE
000029C2                          2824                  
000029C2                          2825              
000029C2  2200                    2826  SUBINADDRREGD MOVE.L  D0, D1
000029C4  C2BC 00000007           2827              AND.L   #$7, D1     *Isolate register
000029CA  2601                    2828              MOVE.L  D1, D3      *Move value of an
000029CC  1C3C 0003               2829              MOVE.B  #$3, D6     *Move type of source
000029D0                          2830              
000029D0  4E75                    2831              RTS
000029D2                          2832              
000029D2  2200                    2833  SUBPLUSADDRREGD MOVE.L  D0, D1
000029D4  C2BC 00000007           2834              AND.L   #$7, D1     *Isolate register
000029DA  2601                    2835              MOVE.L  D1, D3      *Move value of an
000029DC  1C3C 0004               2836              MOVE.B  #$4, D6     *Move type of source
000029E0                          2837              
000029E0  4E75                    2838              RTS
000029E2                          2839              
000029E2  2200                    2840  SUBMINUSADDRREGD MOVE.L  D0, D1
000029E4  C2BC 00000007           2841              AND.L   #$7, D1     *Isolate register
000029EA  2601                    2842              MOVE.L  D1, D3      *Move value of an
000029EC  1C3C 0005               2843              MOVE.B  #$5, D6     *Move type of source
000029F0                          2844              
000029F0  4E75                    2845              RTS
000029F2                          2846              
000029F2  2200                    2847  SUBADDRESSD MOVE.L  D0, D1
000029F4  C2BC 00000007           2848              AND.L   #$7, D1     *Isolate register
000029FA                          2849              
000029FA  B2BC 00000000           2850              CMP.L   #$0, D1     *Check if 000
00002A00  6700 0010               2851              BEQ     SUBADDRWD
00002A04                          2852              
00002A04  B2BC 00000001           2853              CMP.L   #$1, D1     *Check if 001
00002A0A  6700 0010               2854              BEQ     SUBADDRLD
00002A0E                          2855              
00002A0E  6000 E718               2856              BRA     INVALIDOPCODE
00002A12                          2857              
00002A12  3610                    2858  SUBADDRWD   MOVE.W  (A0),D3     *Move addr
00002A14  1C3C 0006               2859              MOVE.B  #$6, D6     *Store type
00002A18  5488                    2860              ADDA.L  #$2, A0 
00002A1A                          2861              
00002A1A  4E75                    2862              RTS
00002A1C                          2863  
00002A1C  2610                    2864  SUBADDRLD   MOVE.L  (A0),D3     *Move addr
00002A1E  1C3C 0007               2865              MOVE.B  #$7, D6     *Store type
00002A22  5888                    2866              ADDA.L  #$4, A0
00002A24                          2867              
00002A24  4E75                    2868              RTS
00002A26                          2869                  
00002A26  2200                    2870  SUBEADN     MOVE.L  D0, D1
00002A28  C2BC 00000038           2871              AND.L   #$38, D1    *Isolate source mode
00002A2E                          2872              
00002A2E  B2BC 00000000           2873              CMP.L   #$0, D1     *Check if 000
00002A34  6700 0038               2874              BEQ     SUBDATAREG
00002A38                          2875              
00002A38  B2BC 00000008           2876              CMP.L   #$8, D1     *Check if 001
00002A3E  6700 0040               2877              BEQ     SUBADDRREG
00002A42                          2878              
00002A42  B2BC 00000010           2879              CMP.L   #$10, D1    *Check if 010
00002A48  6700 0048               2880              BEQ     SUBINADDRREG
00002A4C                          2881              
00002A4C  B2BC 00000018           2882              CMP.L   #$18, D1    *Check if 011
00002A52  6700 0050               2883              BEQ     SUBPLUSADDRREG
00002A56                          2884              
00002A56  B2BC 00000020           2885              CMP.L   #$20, D1    *Check if 100
00002A5C  6700 0058               2886              BEQ     SUBMINUSADDRREG
00002A60                          2887              
00002A60  B2BC 00000038           2888              CMP.L   #$38, D1     *Check if 111
00002A66  6700 0060               2889              BEQ     SUBADDRESSDATA
00002A6A                          2890              
00002A6A  6000 E6BC               2891              BRA     INVALIDOPCODE
00002A6E                          2892                  
00002A6E  2200                    2893  SUBDATAREG  MOVE.L  D0, D1
00002A70  C2BC 00000007           2894              AND.L   #$7, D1     *Isolate register
00002A76  2401                    2895              MOVE.L  D1, D2      *Move value of Dn
00002A78  1A3C 0000               2896              MOVE.B  #$0, D5     *Move type of source
00002A7C                          2897              
00002A7C  6000 00C8               2898              BRA     SUBDNDEST
00002A80                          2899              
00002A80  2200                    2900  SUBADDRREG  MOVE.L  D0, D1
00002A82  C2BC 00000007           2901              AND.L   #$7, D1     *Isolate register
00002A88  2401                    2902              MOVE.L  D1, D2      *Move value of An
00002A8A  1A3C 0001               2903              MOVE.B  #$1, D5     *Move type of source
00002A8E                          2904              
00002A8E  6000 00B6               2905              BRA     SUBDNDEST
00002A92                          2906              
00002A92  2200                    2907  SUBINADDRREG MOVE.L  D0, D1
00002A94  C2BC 00000007           2908              AND.L   #$7, D1     *Isolate register
00002A9A  2401                    2909              MOVE.L  D1, D2      *Move value of an
00002A9C  1A3C 0003               2910              MOVE.B  #$3, D5     *Move type of source
00002AA0                          2911              
00002AA0  6000 00A4               2912              BRA     SUBDNDEST
00002AA4                          2913              
00002AA4  2200                    2914  SUBPLUSADDRREG MOVE.L  D0, D1
00002AA6  C2BC 00000007           2915              AND.L   #$7, D1     *Isolate register
00002AAC  2401                    2916              MOVE.L  D1, D2      *Move value of an
00002AAE  1A3C 0004               2917              MOVE.B  #$4, D5     *Move type of source
00002AB2                          2918              
00002AB2  6000 0092               2919              BRA     SUBDNDEST
00002AB6                          2920              
00002AB6  2200                    2921  SUBMINUSADDRREG MOVE.L  D0, D1
00002AB8  C2BC 00000007           2922              AND.L   #$7, D1     *Isolate register
00002ABE  2401                    2923              MOVE.L  D1, D2      *Move value of an
00002AC0  1A3C 0005               2924              MOVE.B  #$5, D5     *Move type of source
00002AC4                          2925              
00002AC4  6000 0080               2926              BRA     SUBDNDEST
00002AC8                          2927              
00002AC8  2200                    2928  SUBADDRESSDATA MOVE.L  D0, D1
00002ACA  C2BC 00000007           2929              AND.L   #$7, D1     *Isolate register
00002AD0                          2930              
00002AD0  B2BC 00000000           2931              CMP.L   #$0, D1     *Check if 000
00002AD6  6700 001A               2932              BEQ     SUBADDRW
00002ADA                          2933              
00002ADA  B2BC 00000001           2934              CMP.L   #$1, D1     *Check if 001
00002AE0  6700 001C               2935              BEQ     SUBADDRL
00002AE4                          2936              
00002AE4  B2BC 00000004           2937              CMP.L   #$4, D1     *Check if 100
00002AEA  6700 001E               2938              BEQ     SUBDATA
00002AEE                          2939              
00002AEE  6000 E638               2940              BRA     INVALIDOPCODE
00002AF2                          2941              
00002AF2  3410                    2942  SUBADDRW    MOVE.W  (A0),D2     *Move addr
00002AF4  1A3C 0006               2943              MOVE.B  #$6, D5     *Store type
00002AF8  5488                    2944              ADDA.L  #$2, A0 
00002AFA                          2945              
00002AFA  6000 004A               2946              BRA     SUBDNDEST
00002AFE                          2947  
00002AFE  2410                    2948  SUBADDRL    MOVE.L  (A0),D2     *Move addr
00002B00  1A3C 0007               2949              MOVE.B  #$7, D5     *Store type
00002B04  5888                    2950              ADDA.L  #$4, A0 
00002B06                          2951              
00002B06  6000 003E               2952              BRA     SUBDNDEST
00002B0A                          2953              
00002B0A  BE3C 0001               2954  SUBDATA     CMP.B   #$1,D7     *Compare if the size is a byte  
00002B0E  6700 0012               2955              BEQ     SUBSIZEB
00002B12                          2956      
00002B12  BE3C 0002               2957              CMP.B   #$2,D7     *Compare if the size is a word 
00002B16  6700 0016               2958              BEQ     SUBSIZEW
00002B1A                          2959      
00002B1A  BE3C 0003               2960              CMP.B   #$3,D7     *Compare if the size is a long 
00002B1E  6700 001A               2961              BEQ     SUBSIZEL 
00002B22                          2962  
00002B22  3410                    2963  SUBSIZEB    MOVE.W  (A0),D2 
00002B24  1A3C 0008               2964              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002B28  5488                    2965              ADDA.L  #$2, A0 
00002B2A                          2966          
00002B2A  6000 001A               2967              BRA     SUBDNDEST *Branches to destination
00002B2E                          2968  
00002B2E  3410                    2969  SUBSIZEW    MOVE.W  (A0),D2 
00002B30  1A3C 0008               2970              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002B34  5488                    2971              ADDA.L  #$2, A0 
00002B36                          2972          
00002B36  6000 000E               2973              BRA     SUBDNDEST *Branches to destination
00002B3A                          2974  
00002B3A  2410                    2975  SUBSIZEL    MOVE.L  (A0),D2 
00002B3C  1A3C 0008               2976              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002B40  5888                    2977              ADDA.L  #$4, A0 
00002B42                          2978          
00002B42  6000 0002               2979              BRA     SUBDNDEST *Branches to destination
00002B46                          2980              
00002B46  3200                    2981  SUBDNDEST   MOVE.W  D0, D1
00002B48  C27C 0E00               2982              AND.W   #$E00, D1   *Isolate register
00002B4C  E081                    2983              ASR.L   #8, D1
00002B4E  E281                    2984              ASR.L   #1, D1
00002B50  3601                    2985              MOVE.W  D1, D3      *Move register to d3
00002B52  1C3C 0000               2986              MOVE.B  #$0, D6
00002B56                          2987              
00002B56  4E75                    2988              RTS
00002B58                          2989  
00002B58                          2990  
00002B58                          2991  
00002B58  2200                    2992  MULSEA      MOVE.L  D0, D1
00002B5A  C2BC 00000038           2993              AND.L   #$38, D1    *Isolate source mode
00002B60                          2994              
00002B60  B2BC 00000000           2995              CMP.L   #$0, D1     *Check if 000
00002B66  6700 002E               2996              BEQ     MULSDATAREG
00002B6A                          2997              
00002B6A  B2BC 00000010           2998              CMP.L   #$10, D1    *Check if 010
00002B70  6700 0036               2999              BEQ     MULSINADDRREG
00002B74                          3000              
00002B74  B2BC 00000018           3001              CMP.L   #$18, D1    *Check if 011
00002B7A  6700 003E               3002              BEQ     MULSPLUSADDRREG
00002B7E                          3003              
00002B7E  B2BC 00000020           3004              CMP.L   #$20, D1    *Check if 100
00002B84  6700 0046               3005              BEQ     MULSMINUSADDRREG
00002B88                          3006              
00002B88  B2BC 00000038           3007              CMP.L   #$38, D1     *Check if 111
00002B8E  6700 004E               3008              BEQ     MULSADDRESSDATA
00002B92                          3009              
00002B92  6000 E594               3010              BRA     INVALIDOPCODE
00002B96                          3011                  
00002B96  2200                    3012  MULSDATAREG MOVE.L  D0, D1
00002B98  C2BC 00000007           3013              AND.L   #$7, D1     *Isolate register
00002B9E  2401                    3014              MOVE.L  D1, D2      *Move value of Dn
00002BA0  1A3C 0000               3015              MOVE.B  #$0, D5     *Move type of source
00002BA4                          3016              
00002BA4  6000 00B6               3017              BRA     MULSDEST
00002BA8                          3018              
00002BA8  2200                    3019  MULSINADDRREG MOVE.L  D0, D1
00002BAA  C2BC 00000007           3020              AND.L   #$7, D1     *Isolate register
00002BB0  2401                    3021              MOVE.L  D1, D2      *Move value of an
00002BB2  1A3C 0003               3022              MOVE.B  #$3, D5     *Move type of source
00002BB6                          3023              
00002BB6  6000 00A4               3024              BRA     MULSDEST 
00002BBA                          3025             
00002BBA  2200                    3026  MULSPLUSADDRREG MOVE.L  D0, D1
00002BBC  C2BC 00000007           3027              AND.L   #$7, D1     *Isolate register
00002BC2  2401                    3028              MOVE.L  D1, D2      *Move value of an
00002BC4  1A3C 0004               3029              MOVE.B  #$4, D5     *Move type of source
00002BC8                          3030              
00002BC8  6000 0092               3031              BRA     MULSDEST 
00002BCC                          3032              
00002BCC  2200                    3033  MULSMINUSADDRREG MOVE.L  D0, D1
00002BCE  C2BC 00000007           3034              AND.L   #$7, D1     *Isolate register
00002BD4  2401                    3035              MOVE.L  D1, D2      *Move value of an
00002BD6  1A3C 0005               3036              MOVE.B  #$5, D5     *Move type of source
00002BDA                          3037              
00002BDA  6000 0080               3038              BRA     MULSDEST 
00002BDE                          3039              
00002BDE  2200                    3040  MULSADDRESSDATA MOVE.L  D0, D1
00002BE0  C2BC 00000007           3041              AND.L   #$7, D1     *Isolate register
00002BE6                          3042              
00002BE6  B2BC 00000000           3043              CMP.L   #$0, D1     *Check if 000
00002BEC  6700 001A               3044              BEQ     MULSADDRW
00002BF0                          3045              
00002BF0  B2BC 00000001           3046              CMP.L   #$1, D1     *Check if 001
00002BF6  6700 001C               3047              BEQ     MULSADDRL
00002BFA                          3048              
00002BFA  B2BC 00000004           3049              CMP.L   #$4, D1     *Check if 100
00002C00  6700 001E               3050              BEQ     MULSDATA
00002C04                          3051              
00002C04  6000 E522               3052              BRA     INVALIDOPCODE
00002C08                          3053              
00002C08  3410                    3054  MULSADDRW   MOVE.W  (A0),D2     *Move addr
00002C0A  1A3C 0006               3055              MOVE.B  #$6, D5     *Store type
00002C0E  5488                    3056              ADDA.L  #$2, A0 
00002C10                          3057              
00002C10  6000 004A               3058              BRA     MULSDEST
00002C14                          3059  
00002C14  2410                    3060  MULSADDRL   MOVE.L  (A0),D2     *Move addr
00002C16  1A3C 0007               3061              MOVE.B  #$7, D5     *Store type
00002C1A  5888                    3062              ADDA.L  #$4, A0 
00002C1C                          3063              
00002C1C  6000 003E               3064              BRA     MULSDEST
00002C20                          3065              
00002C20  BE3C 0001               3066  MULSDATA    CMP.B   #$1,D7     *Compare if the size is a byte  
00002C24  6700 0012               3067              BEQ     MULSSIZEB
00002C28                          3068      
00002C28  BE3C 0002               3069              CMP.B   #$2,D7     *Compare if the size is a word 
00002C2C  6700 0016               3070              BEQ     MULSSIZEW
00002C30                          3071      
00002C30  BE3C 0003               3072              CMP.B   #$3,D7     *Compare if the size is a long 
00002C34  6700 001A               3073              BEQ     MULSSIZEL 
00002C38                          3074  
00002C38  3410                    3075  MULSSIZEB   MOVE.W  (A0),D2 
00002C3A  1A3C 0008               3076              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002C3E  5488                    3077              ADDA.L  #$2, A0 
00002C40                          3078          
00002C40  6000 001A               3079              BRA     MULSDEST *Branches to destination
00002C44                          3080  
00002C44  3410                    3081  MULSSIZEW   MOVE.W  (A0),D2 
00002C46  1A3C 0008               3082              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002C4A  5488                    3083              ADDA.L  #$2, A0 
00002C4C                          3084          
00002C4C  6000 000E               3085              BRA     MULSDEST *Branches to destination
00002C50                          3086  
00002C50  2410                    3087  MULSSIZEL   MOVE.L  (A0),D2 
00002C52  1A3C 0008               3088              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002C56  5888                    3089              ADDA.L  #$4, A0 
00002C58                          3090          
00002C58  6000 0002               3091              BRA     MULSDEST *Branches to destination
00002C5C                          3092              
00002C5C  3200                    3093  MULSDEST    MOVE.W  D0, D1
00002C5E  C27C 0E00               3094              AND.W   #$E00, D1   *Isolate register
00002C62  E081                    3095              ASR.L   #8, D1
00002C64  E281                    3096              ASR.L   #1, D1
00002C66  3601                    3097              MOVE.W  D1, D3      *Move register to d3
00002C68  1C3C 0000               3098              MOVE.B  #$0, D6
00002C6C                          3099              
00002C6C  4E75                    3100              RTS
00002C6E                          3101  
00002C6E                          3102  
00002C6E                          3103  
00002C6E                          3104  
00002C6E  2200                    3105  DIVUEA      MOVE.L  D0, D1
00002C70  C2BC 00000038           3106              AND.L   #$38, D1    *Isolate source mode
00002C76                          3107              
00002C76  B2BC 00000000           3108              CMP.L   #$0, D1     *Check if 000
00002C7C  6700 002E               3109              BEQ     DIVUDATAREG
00002C80                          3110              
00002C80  B2BC 00000010           3111              CMP.L   #$10, D1    *Check if 010
00002C86  6700 0036               3112              BEQ     DIVUINADDRREG
00002C8A                          3113              
00002C8A  B2BC 00000018           3114              CMP.L   #$18, D1    *Check if 011
00002C90  6700 003E               3115              BEQ     DIVUPLUSADDRREG
00002C94                          3116              
00002C94  B2BC 00000020           3117              CMP.L   #$20, D1    *Check if 100
00002C9A  6700 0046               3118              BEQ     DIVUMINUSADDRREG
00002C9E                          3119              
00002C9E  B2BC 00000038           3120              CMP.L   #$38, D1     *Check if 111
00002CA4  6700 004E               3121              BEQ     DIVUADDRESSDATA
00002CA8                          3122              
00002CA8  6000 E47E               3123              BRA     INVALIDOPCODE
00002CAC                          3124                  
00002CAC  2200                    3125  DIVUDATAREG MOVE.L  D0, D1
00002CAE  C2BC 00000007           3126              AND.L   #$7, D1     *Isolate register
00002CB4  2401                    3127              MOVE.L  D1, D2      *Move value of Dn
00002CB6  1A3C 0000               3128              MOVE.B  #$0, D5     *Move type of source
00002CBA                          3129              
00002CBA  6000 00B6               3130              BRA     DIVUDEST
00002CBE                          3131              
00002CBE  2200                    3132  DIVUINADDRREG MOVE.L  D0, D1
00002CC0  C2BC 00000007           3133              AND.L   #$7, D1     *Isolate register
00002CC6  2401                    3134              MOVE.L  D1, D2      *Move value of an
00002CC8  1A3C 0003               3135              MOVE.B  #$3, D5     *Move type of source
00002CCC                          3136              
00002CCC  6000 00A4               3137              BRA     DIVUDEST 
00002CD0                          3138             
00002CD0  2200                    3139  DIVUPLUSADDRREG MOVE.L  D0, D1
00002CD2  C2BC 00000007           3140              AND.L   #$7, D1     *Isolate register
00002CD8  2401                    3141              MOVE.L  D1, D2      *Move value of an
00002CDA  1A3C 0004               3142              MOVE.B  #$4, D5     *Move type of source
00002CDE                          3143              
00002CDE  6000 0092               3144              BRA     DIVUDEST 
00002CE2                          3145              
00002CE2  2200                    3146  DIVUMINUSADDRREG MOVE.L  D0, D1
00002CE4  C2BC 00000007           3147              AND.L   #$7, D1     *Isolate register
00002CEA  2401                    3148              MOVE.L  D1, D2      *Move value of an
00002CEC  1A3C 0005               3149              MOVE.B  #$5, D5     *Move type of source
00002CF0                          3150              
00002CF0  6000 0080               3151              BRA     DIVUDEST 
00002CF4                          3152              
00002CF4  2200                    3153  DIVUADDRESSDATA MOVE.L  D0, D1
00002CF6  C2BC 00000007           3154              AND.L   #$7, D1     *Isolate register
00002CFC                          3155              
00002CFC  B2BC 00000000           3156              CMP.L   #$0, D1     *Check if 000
00002D02  6700 001A               3157              BEQ     DIVUADDRW
00002D06                          3158              
00002D06  B2BC 00000001           3159              CMP.L   #$1, D1     *Check if 001
00002D0C  6700 001C               3160              BEQ     DIVUADDRL
00002D10                          3161              
00002D10  B2BC 00000004           3162              CMP.L   #$4, D1     *Check if 100
00002D16  6700 001E               3163              BEQ     DIVUDATA
00002D1A                          3164              
00002D1A  6000 E40C               3165              BRA     INVALIDOPCODE
00002D1E                          3166              
00002D1E  3410                    3167  DIVUADDRW   MOVE.W  (A0),D2     *Move addr
00002D20  1A3C 0006               3168              MOVE.B  #$6, D5     *Store type
00002D24  5488                    3169              ADDA.L  #$2, A0 
00002D26                          3170              
00002D26  6000 004A               3171              BRA     DIVUDEST
00002D2A                          3172  
00002D2A  2410                    3173  DIVUADDRL   MOVE.L  (A0),D2     *Move addr
00002D2C  1A3C 0007               3174              MOVE.B  #$7, D5     *Store type
00002D30  5888                    3175              ADDA.L  #$4, A0 
00002D32                          3176              
00002D32  6000 003E               3177              BRA     DIVUDEST
00002D36                          3178              
00002D36  BE3C 0001               3179  DIVUDATA    CMP.B   #$1,D7     *Compare if the size is a byte  
00002D3A  6700 0012               3180              BEQ     DIVUSIZEB
00002D3E                          3181      
00002D3E  BE3C 0002               3182              CMP.B   #$2,D7     *Compare if the size is a word 
00002D42  6700 0016               3183              BEQ     DIVUSIZEW
00002D46                          3184      
00002D46  BE3C 0003               3185              CMP.B   #$3,D7     *Compare if the size is a long 
00002D4A  6700 001A               3186              BEQ     DIVUSIZEL 
00002D4E                          3187  
00002D4E  3410                    3188  DIVUSIZEB   MOVE.W  (A0),D2 
00002D50  1A3C 0008               3189              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002D54  5488                    3190              ADDA.L  #$2, A0 
00002D56                          3191          
00002D56  6000 001A               3192              BRA     DIVUDEST *Branches to destination
00002D5A                          3193  
00002D5A  3410                    3194  DIVUSIZEW   MOVE.W  (A0),D2 
00002D5C  1A3C 0008               3195              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002D60  5488                    3196              ADDA.L  #$2, A0 
00002D62                          3197          
00002D62  6000 000E               3198              BRA     DIVUDEST *Branches to destination
00002D66                          3199  
00002D66  2410                    3200  DIVUSIZEL   MOVE.L  (A0),D2 
00002D68  1A3C 0008               3201              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002D6C  5888                    3202              ADDA.L  #$4, A0 
00002D6E                          3203          
00002D6E  6000 0002               3204              BRA     DIVUDEST *Branches to destination
00002D72                          3205              
00002D72  3200                    3206  DIVUDEST    MOVE.W  D0, D1
00002D74  C27C 0E00               3207              AND.W   #$E00, D1   *Isolate register
00002D78  E081                    3208              ASR.L   #8, D1
00002D7A  E281                    3209              ASR.L   #1, D1
00002D7C  3601                    3210              MOVE.W  D1, D3      *Move register to d3
00002D7E  1C3C 0000               3211              MOVE.B  #$0, D6
00002D82                          3212              
00002D82  4E75                    3213              RTS
00002D84                          3214  
00002D84                          3215  
00002D84                          3216  
00002D84  2200                    3217  LEAEA       MOVE.L  D0, D1
00002D86  C2BC 00000038           3218              AND.L   #$38, D1    *Isolate source mode
00002D8C                          3219              
00002D8C  B2BC 00000010           3220              CMP.L   #$10, D1    *Check if 010
00002D92  6700 0010               3221              BEQ     LEAINADDRREG
00002D96                          3222              
00002D96  B2BC 00000038           3223              CMP.L   #$38, D1     *Check if 111
00002D9C  6700 0018               3224              BEQ     LEAADDRESS
00002DA0                          3225              
00002DA0  6000 E386               3226              BRA     INVALIDOPCODE
00002DA4                          3227              
00002DA4  2200                    3228  LEAINADDRREG MOVE.L  D0, D1
00002DA6  C2BC 00000007           3229              AND.L   #$7, D1     *Isolate register
00002DAC  2401                    3230              MOVE.L  D1, D2      *Move value of an
00002DAE  1A3C 0003               3231              MOVE.B  #$3, D5     *Move type of source
00002DB2                          3232              
00002DB2  6000 0036               3233              BRA     LEADEST 
00002DB6                          3234              
00002DB6  2200                    3235  LEAADDRESS  MOVE.L  D0, D1
00002DB8  C2BC 00000007           3236              AND.L   #$7, D1     *Isolate register
00002DBE                          3237              
00002DBE  B2BC 00000000           3238              CMP.L   #$0, D1     *Check if 000
00002DC4  6700 000C               3239              BEQ     LEAADDRW
00002DC8                          3240              
00002DC8  B2BC 00000001           3241              CMP.L   #$1, D1     *Check if 001
00002DCE  6700 000E               3242              BEQ     LEAADDRL
00002DD2                          3243              
00002DD2  3410                    3244  LEAADDRW    MOVE.W  (A0),D2     *Move addr
00002DD4  1A3C 0006               3245              MOVE.B  #$6, D5     *Store type
00002DD8  5488                    3246              ADDA.L  #$2, A0 
00002DDA                          3247              
00002DDA  6000 000E               3248              BRA     LEADEST 
00002DDE                          3249  
00002DDE  2410                    3250  LEAADDRL    MOVE.L  (A0),D2     *Move addr
00002DE0  1A3C 0007               3251              MOVE.B  #$7, D5     *Store type
00002DE4  5888                    3252              ADDA.L  #$4, A0
00002DE6                          3253              
00002DE6  6000 0002               3254              BRA     LEADEST 
00002DEA                          3255              
00002DEA  3200                    3256  LEADEST     MOVE.W  D0, D1
00002DEC  C27C 0E00               3257              AND.W   #$E00, D1   *Isolate register
00002DF0  E081                    3258              ASR.L   #8, D1
00002DF2  E281                    3259              ASR.L   #1, D1
00002DF4  3601                    3260              MOVE.W  D1, D3      *Move register to d3
00002DF6  1C3C 0001               3261              MOVE.B  #$1, D6
00002DFA                          3262              
00002DFA  4E75                    3263              RTS
00002DFC                          3264              
00002DFC                          3265              
00002DFC                          3266              
00002DFC  7CFF                    3267  CLREA       MOVE.L  #-1, D6
00002DFE  2200                    3268              MOVE.L  D0, D1
00002E00  C2BC 00000038           3269              AND.L   #$38, D1    *Isolate source mode
00002E06                          3270              
00002E06  B2BC 00000000           3271              CMP.L   #$0, D1     *Check if 000
00002E0C  6700 002E               3272              BEQ     CLRDATAREG
00002E10                          3273              
00002E10  B2BC 00000010           3274              CMP.L   #$10, D1    *Check if 010
00002E16  6700 0034               3275              BEQ     CLRINADDRREG
00002E1A                          3276              
00002E1A  B2BC 00000018           3277              CMP.L   #$18, D1    *Check if 011
00002E20  6700 003A               3278              BEQ     CLRPLUSADDRREG
00002E24                          3279              
00002E24  B2BC 00000020           3280              CMP.L   #$20, D1    *Check if 100
00002E2A  6700 0040               3281              BEQ     CLRMINUSADDRREG
00002E2E                          3282              
00002E2E  B2BC 00000038           3283              CMP.L   #$38, D1     *Check if 111
00002E34  6700 0046               3284              BEQ     CLRADDRESS            
00002E38                          3285              
00002E38  6000 E2EE               3286              BRA     INVALIDOPCODE
00002E3C                          3287  
00002E3C  2200                    3288  CLRDATAREG  MOVE.L  D0, D1
00002E3E  C2BC 00000007           3289              AND.L   #$7, D1     *Isolate register
00002E44  2401                    3290              MOVE.L  D1, D2      *Move value of Dn
00002E46  1A3C 0000               3291              MOVE.B  #$0, D5     *Move type of source
00002E4A                          3292              
00002E4A  4E75                    3293              RTS
00002E4C                          3294              
00002E4C  2200                    3295  CLRINADDRREG MOVE.L  D0, D1
00002E4E  C2BC 00000007           3296              AND.L   #$7, D1     *Isolate register
00002E54  2401                    3297              MOVE.L  D1, D2      *Move value of an
00002E56  1A3C 0003               3298              MOVE.B  #$3, D5     *Move type of source
00002E5A                          3299              
00002E5A  4E75                    3300              RTS
00002E5C                          3301             
00002E5C  2200                    3302  CLRPLUSADDRREG MOVE.L  D0, D1
00002E5E  C2BC 00000007           3303              AND.L   #$7, D1     *Isolate register
00002E64  2401                    3304              MOVE.L  D1, D2      *Move value of an
00002E66  1A3C 0004               3305              MOVE.B  #$4, D5     *Move type of source
00002E6A                          3306              
00002E6A  4E75                    3307              RTS
00002E6C                          3308              
00002E6C  2200                    3309  CLRMINUSADDRREG MOVE.L  D0, D1
00002E6E  C2BC 00000007           3310              AND.L   #$7, D1     *Isolate register
00002E74  2401                    3311              MOVE.L  D1, D2      *Move value of an
00002E76  1A3C 0005               3312              MOVE.B  #$5, D5     *Move type of source
00002E7A                          3313              
00002E7A  4E75                    3314              RTS
00002E7C                          3315              
00002E7C  2200                    3316  CLRADDRESS  MOVE.L  D0, D1
00002E7E  C2BC 00000007           3317              AND.L   #$7, D1     *Isolate register
00002E84                          3318              
00002E84  B2BC 00000000           3319              CMP.L   #$0, D1     *Check if 000
00002E8A  6700 FE92               3320              BEQ     DIVUADDRW
00002E8E                          3321              
00002E8E  B2BC 00000001           3322              CMP.L   #$1, D1     *Check if 001
00002E94  6700 FE94               3323              BEQ     DIVUADDRL
00002E98                          3324              
00002E98  6000 E28E               3325              BRA     INVALIDOPCODE
00002E9C                          3326              
00002E9C  3410                    3327  CLRADDRW    MOVE.W  (A0),D2     *Move addr
00002E9E  1A3C 0006               3328              MOVE.B  #$6, D5     *Store type
00002EA2  5488                    3329              ADDA.L  #$2, A0 
00002EA4                          3330              
00002EA4  4E75                    3331              RTS
00002EA6                          3332  
00002EA6  2410                    3333  CLRADDRL    MOVE.L  (A0),D2     *Move addr
00002EA8  1A3C 0007               3334              MOVE.B  #$7, D5     *Store type
00002EAC  5888                    3335              ADDA.L  #$4, A0
00002EAE                          3336              
00002EAE  4E75                    3337              RTS
00002EB0                          3338  
00002EB0                          3339  
00002EB0                          3340  
00002EB0                          3341  
00002EB0  3200                    3342  ANDEA           MOVE.W  D0, D1
00002EB2  C27C 01C0               3343                  AND.W   #$1C0, D1     *Isolate opmode
00002EB6                          3344                  
00002EB6  B27C 0100               3345                  CMP.W   #$100, D1     *Check if < 100
00002EBA  6D00 00B2               3346                  BLT     ANDEADN
00002EBE                          3347                  
00002EBE  6000 0002               3348                  BRA     ANDDNEA
00002EC2                          3349                  
00002EC2  3200                    3350  ANDDNEA         MOVE.W  D0, D1
00002EC4  C27C 0E00               3351                  AND.W   #$E00, D1   *Isolate register
00002EC8  E081                    3352                  ASR.L   #8, D1
00002ECA  E281                    3353                  ASR.L   #1, D1
00002ECC  3401                    3354                  MOVE.W  D1, D2      *Move register to d2
00002ECE  1A3C 0000               3355                  MOVE.B  #$0, D5
00002ED2                          3356                  
00002ED2  6000 0002               3357                  BRA     ANDEADEST
00002ED6                          3358                  
00002ED6  2200                    3359  ANDEADEST       MOVE.L  D0, D1
00002ED8  C2BC 00000038           3360                  AND.L   #$38, D1    *Isolate mode
00002EDE                          3361              
00002EDE  B2BC 00000010           3362                  CMP.L   #$10, D1    *Check if 010
00002EE4  6700 0024               3363                  BEQ     ANDINADDRREGD
00002EE8                          3364              
00002EE8  B2BC 00000018           3365                  CMP.L   #$18, D1    *Check if 011
00002EEE  6700 002A               3366                  BEQ     ANDPLUSADDRREGD
00002EF2                          3367              
00002EF2  B2BC 00000020           3368                  CMP.L   #$20, D1    *Check if 100
00002EF8  6700 0030               3369                  BEQ     ANDMINUSADDRREGD
00002EFC                          3370              
00002EFC  B2BC 00000038           3371                  CMP.L   #$38, D1     *Check if 111
00002F02  6700 0036               3372                  BEQ     ANDADDRESSD
00002F06                          3373                  
00002F06  6000 E220               3374                  BRA     INVALIDOPCODE
00002F0A                          3375                  
00002F0A                          3376              
00002F0A  2200                    3377  ANDINADDRREGD MOVE.L  D0, D1
00002F0C  C2BC 00000007           3378              AND.L   #$7, D1     *Isolate register
00002F12  2601                    3379              MOVE.L  D1, D3      *Move value of an
00002F14  1C3C 0003               3380              MOVE.B  #$3, D6     *Move type of source
00002F18                          3381              
00002F18  4E75                    3382              RTS
00002F1A                          3383              
00002F1A  2200                    3384  ANDPLUSADDRREGD MOVE.L  D0, D1
00002F1C  C2BC 00000007           3385              AND.L   #$7, D1     *Isolate register
00002F22  2601                    3386              MOVE.L  D1, D3      *Move value of an
00002F24  1C3C 0004               3387              MOVE.B  #$4, D6     *Move type of source
00002F28                          3388              
00002F28  4E75                    3389              RTS
00002F2A                          3390              
00002F2A  2200                    3391  ANDMINUSADDRREGD MOVE.L  D0, D1
00002F2C  C2BC 00000007           3392              AND.L   #$7, D1     *Isolate register
00002F32  2601                    3393              MOVE.L  D1, D3      *Move value of an
00002F34  1C3C 0005               3394              MOVE.B  #$5, D6     *Move type of source
00002F38                          3395              
00002F38  4E75                    3396              RTS
00002F3A                          3397              
00002F3A  2200                    3398  ANDADDRESSD MOVE.L  D0, D1
00002F3C  C2BC 00000007           3399              AND.L   #$7, D1     *Isolate register
00002F42                          3400              
00002F42  B2BC 00000000           3401              CMP.L   #$0, D1     *Check if 000
00002F48  6700 0010               3402              BEQ     ANDADDRWD
00002F4C                          3403              
00002F4C  B2BC 00000001           3404              CMP.L   #$1, D1     *Check if 001
00002F52  6700 0010               3405              BEQ     ANDADDRLD
00002F56                          3406              
00002F56  6000 E1D0               3407              BRA     INVALIDOPCODE
00002F5A                          3408              
00002F5A  3610                    3409  ANDADDRWD   MOVE.W  (A0),D3     *Move addr
00002F5C  1C3C 0006               3410              MOVE.B  #$6, D6     *Store type
00002F60  5488                    3411              ADDA.L  #$2, A0 
00002F62                          3412              
00002F62  4E75                    3413              RTS
00002F64                          3414  
00002F64  2610                    3415  ANDADDRLD   MOVE.L  (A0),D3     *Move addr
00002F66  1C3C 0007               3416              MOVE.B  #$7, D6     *Store type
00002F6A  5888                    3417              ADDA.L  #$4, A0
00002F6C                          3418              
00002F6C  4E75                    3419              RTS
00002F6E                          3420                  
00002F6E  2200                    3421  ANDEADN     MOVE.L  D0, D1
00002F70  C2BC 00000038           3422              AND.L   #$38, D1    *Isolate source mode
00002F76                          3423              
00002F76  B2BC 00000000           3424              CMP.L   #$0, D1     *Check if 000
00002F7C  6700 002E               3425              BEQ     ANDDATAREG
00002F80                          3426              
00002F80  B2BC 00000010           3427              CMP.L   #$10, D1    *Check if 010
00002F86  6700 0036               3428              BEQ     ANDINADDRREG
00002F8A                          3429              
00002F8A  B2BC 00000018           3430              CMP.L   #$18, D1    *Check if 011
00002F90  6700 003E               3431              BEQ     ANDPLUSADDRREG
00002F94                          3432              
00002F94  B2BC 00000020           3433              CMP.L   #$20, D1    *Check if 100
00002F9A  6700 0046               3434              BEQ     ANDMINUSADDRREG
00002F9E                          3435              
00002F9E  B2BC 00000038           3436              CMP.L   #$38, D1     *Check if 111
00002FA4  6700 004E               3437              BEQ     ANDADDRESSDATA
00002FA8                          3438              
00002FA8  6000 E17E               3439              BRA     INVALIDOPCODE
00002FAC                          3440                  
00002FAC  2200                    3441  ANDDATAREG  MOVE.L  D0, D1
00002FAE  C2BC 00000007           3442              AND.L   #$7, D1     *Isolate register
00002FB4  2401                    3443              MOVE.L  D1, D2      *Move value of Dn
00002FB6  1A3C 0000               3444              MOVE.B  #$0, D5     *Move type of source
00002FBA                          3445              
00002FBA  6000 00B6               3446              BRA     ANDDNDEST
00002FBE                          3447              
00002FBE  2200                    3448  ANDINADDRREG MOVE.L  D0, D1
00002FC0  C2BC 00000007           3449              AND.L   #$7, D1     *Isolate register
00002FC6  2401                    3450              MOVE.L  D1, D2      *Move value of an
00002FC8  1A3C 0003               3451              MOVE.B  #$3, D5     *Move type of source
00002FCC                          3452              
00002FCC  6000 00A4               3453              BRA     ANDDNDEST
00002FD0                          3454              
00002FD0  2200                    3455  ANDPLUSADDRREG MOVE.L  D0, D1
00002FD2  C2BC 00000007           3456              AND.L   #$7, D1     *Isolate register
00002FD8  2401                    3457              MOVE.L  D1, D2      *Move value of an
00002FDA  1A3C 0004               3458              MOVE.B  #$4, D5     *Move type of source
00002FDE                          3459              
00002FDE  6000 0092               3460              BRA     ANDDNDEST
00002FE2                          3461              
00002FE2  2200                    3462  ANDMINUSADDRREG MOVE.L  D0, D1
00002FE4  C2BC 00000007           3463              AND.L   #$7, D1     *Isolate register
00002FEA  2401                    3464              MOVE.L  D1, D2      *Move value of an
00002FEC  1A3C 0005               3465              MOVE.B  #$5, D5     *Move type of source
00002FF0                          3466              
00002FF0  6000 0080               3467              BRA     ANDDNDEST
00002FF4                          3468              
00002FF4  2200                    3469  ANDADDRESSDATA MOVE.L  D0, D1
00002FF6  C2BC 00000007           3470              AND.L   #$7, D1     *Isolate register
00002FFC                          3471              
00002FFC  B2BC 00000000           3472              CMP.L   #$0, D1     *Check if 000
00003002  6700 001A               3473              BEQ     ANDADDRW
00003006                          3474              
00003006  B2BC 00000001           3475              CMP.L   #$1, D1     *Check if 001
0000300C  6700 001C               3476              BEQ     ANDADDRL
00003010                          3477              
00003010  B2BC 00000004           3478              CMP.L   #$4, D1     *Check if 100
00003016  6700 001E               3479              BEQ     ANDDATA
0000301A                          3480              
0000301A  6000 E10C               3481              BRA     INVALIDOPCODE
0000301E                          3482              
0000301E  3410                    3483  ANDADDRW    MOVE.W  (A0),D2     *Move addr
00003020  1A3C 0006               3484              MOVE.B  #$6, D5     *Store type
00003024  5488                    3485              ADDA.L  #$2, A0 
00003026                          3486              
00003026  6000 004A               3487              BRA     ANDDNDEST
0000302A                          3488  
0000302A  2410                    3489  ANDADDRL    MOVE.L  (A0),D2     *Move addr
0000302C  1A3C 0007               3490              MOVE.B  #$7, D5     *Store type
00003030  5888                    3491              ADDA.L  #$4, A0 
00003032                          3492              
00003032  6000 003E               3493              BRA     ANDDNDEST
00003036                          3494              
00003036  BE3C 0001               3495  ANDDATA     CMP.B   #$1,D7     *Compare if the size is a byte  
0000303A  6700 0012               3496              BEQ     ANDSIZEB
0000303E                          3497      
0000303E  BE3C 0002               3498              CMP.B   #$2,D7     *Compare if the size is a word 
00003042  6700 0016               3499              BEQ     ANDSIZEW
00003046                          3500      
00003046  BE3C 0003               3501              CMP.B   #$3,D7     *Compare if the size is a long 
0000304A  6700 001A               3502              BEQ     ANDSIZEL 
0000304E                          3503  
0000304E  3410                    3504  ANDSIZEB    MOVE.W  (A0),D2 
00003050  1A3C 0008               3505              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00003054  5488                    3506              ADDA.L  #$2, A0 
00003056                          3507          
00003056  6000 001A               3508              BRA     ANDDNDEST *Branches to destination
0000305A                          3509  
0000305A  3410                    3510  ANDSIZEW    MOVE.W  (A0),D2 
0000305C  1A3C 0008               3511              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00003060  5488                    3512              ADDA.L  #$2, A0 
00003062                          3513          
00003062  6000 000E               3514              BRA     ANDDNDEST *Branches to destination
00003066                          3515  
00003066  2410                    3516  ANDSIZEL    MOVE.L  (A0),D2 
00003068  1A3C 0008               3517              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
0000306C  5888                    3518              ADDA.L  #$4, A0 
0000306E                          3519          
0000306E  6000 0002               3520              BRA     ANDDNDEST *Branches to destination
00003072                          3521              
00003072  3200                    3522  ANDDNDEST   MOVE.W  D0, D1
00003074  C27C 0E00               3523              AND.W   #$E00, D1   *Isolate register
00003078  E081                    3524              ASR.L   #8, D1
0000307A  E281                    3525              ASR.L   #1, D1
0000307C  3601                    3526              MOVE.W  D1, D3      *Move register to d3
0000307E  1C3C 0000               3527              MOVE.B  #$0, D6
00003082                          3528              
00003082  4E75                    3529              RTS
00003084                          3530  
00003084                          3531  
00003084                          3532  
00003084  3200                    3533  LSREA       MOVE.W  D0, D1
00003086  C27C 0020               3534              AND.W   #$20, D1    *Isolate ir
0000308A                          3535              
0000308A  B27C 0020               3536              CMP.W   #$20, D1    *Check if 1
0000308E  6700 0006               3537              BEQ     LSRD
00003092                          3538              
00003092  6000 0016               3539              BRA     LSRC
00003096                          3540  
00003096  3200                    3541  LSRD        MOVE.W  D0, D1
00003098  C27C 0E00               3542              AND.W   #$E00, D1   *Isolate count/register
0000309C  E081                    3543              ASR.L   #8, D1
0000309E  E281                    3544              ASR.L   #1, D1
000030A0  3401                    3545              MOVE.W  D1, D2
000030A2  1A3C 0000               3546              MOVE.B  #$0, D5
000030A6                          3547              
000030A6  6000 0016               3548              BRA     LSRDEST
000030AA                          3549              
000030AA  3200                    3550  LSRC        MOVE.W  D0, D1
000030AC  C27C 0E00               3551              AND.W   #$E00, D1   *Isolate count/register
000030B0  E081                    3552              ASR.L   #8, D1
000030B2  E281                    3553              ASR.L   #1, D1
000030B4  3401                    3554              MOVE.W  D1, D2
000030B6  1A3C 0008               3555              MOVE.B  #$8, D5
000030BA                          3556              
000030BA  6000 0002               3557              BRA     LSRDEST 
000030BE                          3558              
000030BE  3200                    3559  LSRDEST     MOVE.W  D0, D1
000030C0  C27C 0007               3560              AND.W   #$7, D1     *Isolate register
000030C4  3601                    3561              MOVE.W  D1, D3
000030C6  1C3C 0000               3562              MOVE.B  #$0, D6
000030CA                          3563              
000030CA  4E75                    3564              RTS
000030CC                          3565              
000030CC  7CFF                    3566  LSMEA       MOVE.L  #-1, D6
000030CE  2200                    3567              MOVE.L  D0, D1
000030D0  C2BC 00000038           3568              AND.L   #$38, D1    *Isolate source mode
000030D6                          3569              
000030D6  B2BC 00000010           3570              CMP.L   #$10, D1    *Check if 010
000030DC  6700 0024               3571              BEQ     LSMINADDRREG
000030E0                          3572              
000030E0  B2BC 00000018           3573              CMP.L   #$18, D1    *Check if 011
000030E6  6700 002A               3574              BEQ     LSMPLUSADDRREG
000030EA                          3575              
000030EA  B2BC 00000020           3576              CMP.L   #$20, D1    *Check if 100
000030F0  6700 0030               3577              BEQ     LSMMINUSADDRREG
000030F4                          3578              
000030F4  B2BC 00000038           3579              CMP.L   #$38, D1     *Check if 111
000030FA  6700 0036               3580              BEQ     LSMADDRESS
000030FE                          3581              
000030FE  6000 E028               3582              BRA     INVALIDOPCODE
00003102                          3583              
00003102  2200                    3584  LSMINADDRREG MOVE.L  D0, D1
00003104  C2BC 00000007           3585              AND.L   #$7, D1     *Isolate register
0000310A  2401                    3586              MOVE.L  D1, D2      *Move value of an
0000310C  1A3C 0003               3587              MOVE.B  #$3, D5     *Move type of source
00003110                          3588              
00003110  4E75                    3589              RTS
00003112                          3590              
00003112  2200                    3591  LSMPLUSADDRREG MOVE.L  D0, D1
00003114  C2BC 00000007           3592              AND.L   #$7, D1     *Isolate register
0000311A  2401                    3593              MOVE.L  D1, D2      *Move value of an
0000311C  1A3C 0004               3594              MOVE.B  #$4, D5     *Move type of source
00003120                          3595              
00003120  4E75                    3596              RTS
00003122                          3597              
00003122  2200                    3598  LSMMINUSADDRREG MOVE.L  D0, D1
00003124  C2BC 00000007           3599              AND.L   #$7, D1     *Isolate register
0000312A  2401                    3600              MOVE.L  D1, D2      *Move value of an
0000312C  1A3C 0005               3601              MOVE.B  #$5, D5     *Move type of source
00003130                          3602              
00003130  4E75                    3603              RTS
00003132                          3604              
00003132  2200                    3605  LSMADDRESS  MOVE.L  D0, D1
00003134  C2BC 00000007           3606              AND.L   #$7, D1     *Isolate register
0000313A                          3607              
0000313A  B2BC 00000000           3608              CMP.L   #$0, D1     *Check if 000
00003140  6700 0010               3609              BEQ     LSMADDRW
00003144                          3610              
00003144  B2BC 00000001           3611              CMP.L   #$1, D1     *Check if 001
0000314A  6700 0010               3612              BEQ     LSMADDRL
0000314E                          3613              
0000314E  6000 DFD8               3614              BRA     INVALIDOPCODE
00003152                          3615              
00003152  3410                    3616  LSMADDRW    MOVE.W  (A0),D2     *Move addr
00003154  1A3C 0006               3617              MOVE.B  #$6, D5     *Store type
00003158  5488                    3618              ADDA.L  #$2, A0 
0000315A                          3619              
0000315A  4E75                    3620              RTS
0000315C                          3621  
0000315C  2410                    3622  LSMADDRL    MOVE.L  (A0),D2     *Move addr
0000315E  1A3C 0007               3623              MOVE.B  #$7, D5     *Store type
00003162  5888                    3624              ADDA.L  #$4, A0
00003164                          3625              
00003164  4E75                    3626              RTS
00003166                          3627              
00003166                          3628              
00003166                          3629              
00003166  3200                    3630  ASREA       MOVE.W  D0, D1
00003168  C27C 0020               3631              AND.W   #$20, D1    *Isolate ir
0000316C                          3632              
0000316C  B27C 0020               3633              CMP.W   #$20, D1    *Check if 1
00003170  6700 0006               3634              BEQ     ASRD
00003174                          3635              
00003174  6000 0016               3636              BRA     ASRC
00003178                          3637  
00003178  3200                    3638  ASRD        MOVE.W  D0, D1
0000317A  C27C 0E00               3639              AND.W   #$E00, D1   *Isolate count/register
0000317E  E081                    3640              ASR.L   #8, D1
00003180  E281                    3641              ASR.L   #1, D1
00003182  3401                    3642              MOVE.W  D1, D2
00003184  1A3C 0000               3643              MOVE.B  #$0, D5
00003188                          3644              
00003188  6000 0016               3645              BRA     ASRDEST
0000318C                          3646              
0000318C  3200                    3647  ASRC        MOVE.W  D0, D1
0000318E  C27C 0E00               3648              AND.W   #$E00, D1   *Isolate count/register
00003192  E081                    3649              ASR.L   #8, D1
00003194  E281                    3650              ASR.L   #1, D1
00003196  3401                    3651              MOVE.W  D1, D2
00003198  1A3C 0008               3652              MOVE.B  #$8, D5
0000319C                          3653              
0000319C  6000 0002               3654              BRA     ASRDEST 
000031A0                          3655              
000031A0  3200                    3656  ASRDEST     MOVE.W  D0, D1
000031A2  C27C 0007               3657              AND.W   #$7, D1     *Isolate register
000031A6  3601                    3658              MOVE.W  D1, D3
000031A8  1C3C 0000               3659              MOVE.B  #$0, D6
000031AC                          3660              
000031AC  4E75                    3661              RTS
000031AE                          3662              
000031AE  7CFF                    3663  ASMEA       MOVE.L  #-1, D6
000031B0  2200                    3664              MOVE.L  D0, D1
000031B2  C2BC 00000038           3665              AND.L   #$38, D1    *Isolate source mode
000031B8                          3666              
000031B8  B2BC 00000010           3667              CMP.L   #$10, D1    *Check if 010
000031BE  6700 0024               3668              BEQ     ASMINADDRREG
000031C2                          3669              
000031C2  B2BC 00000018           3670              CMP.L   #$18, D1    *Check if 011
000031C8  6700 002A               3671              BEQ     ASMPLUSADDRREG
000031CC                          3672              
000031CC  B2BC 00000020           3673              CMP.L   #$20, D1    *Check if 100
000031D2  6700 0030               3674              BEQ     ASMMINUSADDRREG
000031D6                          3675              
000031D6  B2BC 00000038           3676              CMP.L   #$38, D1     *Check if 111
000031DC  6700 0036               3677              BEQ     ASMADDRESS
000031E0                          3678              
000031E0  6000 DF46               3679              BRA     INVALIDOPCODE
000031E4                          3680              
000031E4  2200                    3681  ASMINADDRREG MOVE.L  D0, D1
000031E6  C2BC 00000007           3682              AND.L   #$7, D1     *Isolate register
000031EC  2401                    3683              MOVE.L  D1, D2      *Move value of an
000031EE  1A3C 0003               3684              MOVE.B  #$3, D5     *Move type of source
000031F2                          3685              
000031F2  4E75                    3686              RTS
000031F4                          3687              
000031F4  2200                    3688  ASMPLUSADDRREG MOVE.L  D0, D1
000031F6  C2BC 00000007           3689              AND.L   #$7, D1     *Isolate register
000031FC  2401                    3690              MOVE.L  D1, D2      *Move value of an
000031FE  1A3C 0004               3691              MOVE.B  #$4, D5     *Move type of source
00003202                          3692              
00003202  4E75                    3693              RTS
00003204                          3694              
00003204  2200                    3695  ASMMINUSADDRREG MOVE.L  D0, D1
00003206  C2BC 00000007           3696              AND.L   #$7, D1     *Isolate register
0000320C  2401                    3697              MOVE.L  D1, D2      *Move value of an
0000320E  1A3C 0005               3698              MOVE.B  #$5, D5     *Move type of source
00003212                          3699              
00003212  4E75                    3700              RTS
00003214                          3701              
00003214  2200                    3702  ASMADDRESS  MOVE.L  D0, D1
00003216  C2BC 00000007           3703              AND.L   #$7, D1     *Isolate register
0000321C                          3704              
0000321C  B2BC 00000000           3705              CMP.L   #$0, D1     *Check if 000
00003222  6700 FF2E               3706              BEQ     LSMADDRW
00003226                          3707              
00003226  B2BC 00000001           3708              CMP.L   #$1, D1     *Check if 001
0000322C  6700 FF2E               3709              BEQ     LSMADDRL
00003230                          3710              
00003230  6000 DEF6               3711              BRA     INVALIDOPCODE
00003234                          3712              
00003234  3410                    3713  ASMADDRW    MOVE.W  (A0),D2     *Move addr
00003236  1A3C 0006               3714              MOVE.B  #$6, D5     *Store type
0000323A  5488                    3715              ADDA.L  #$2, A0 
0000323C                          3716              
0000323C  4E75                    3717              RTS
0000323E                          3718  
0000323E  2410                    3719  ASMADDRL    MOVE.L  (A0),D2     *Move addr
00003240  1A3C 0007               3720              MOVE.B  #$7, D5     *Store type
00003244  5888                    3721              ADDA.L  #$4, A0
00003246                          3722              
00003246  4E75                    3723              RTS
00003248                          3724  
00003248                          3725  
00003248                          3726  
00003248                          3727  
00003248  3200                    3728  ROREA       MOVE.W  D0, D1
0000324A  C27C 0020               3729              AND.W   #$20, D1    *Isolate ir
0000324E                          3730              
0000324E  B27C 0020               3731              CMP.W   #$20, D1    *Check if 1
00003252  6700 0006               3732              BEQ     RORD
00003256                          3733              
00003256  6000 0016               3734              BRA     RORC
0000325A                          3735  
0000325A  3200                    3736  RORD        MOVE.W  D0, D1
0000325C  C27C 0E00               3737              AND.W   #$E00, D1   *Isolate count/register
00003260  E081                    3738              ASR.L   #8, D1
00003262  E281                    3739              ASR.L   #1, D1
00003264  3401                    3740              MOVE.W  D1, D2
00003266  1A3C 0000               3741              MOVE.B  #$0, D5
0000326A                          3742              
0000326A  6000 0016               3743              BRA     RORDEST
0000326E                          3744              
0000326E  3200                    3745  RORC        MOVE.W  D0, D1
00003270  C27C 0E00               3746              AND.W   #$E00, D1   *Isolate count/register
00003274  E081                    3747              ASR.L   #8, D1
00003276  E281                    3748              ASR.L   #1, D1
00003278  3401                    3749              MOVE.W  D1, D2
0000327A  1A3C 0008               3750              MOVE.B  #$8, D5
0000327E                          3751              
0000327E  6000 0002               3752              BRA     RORDEST 
00003282                          3753              
00003282  3200                    3754  RORDEST     MOVE.W  D0, D1
00003284  C27C 0007               3755              AND.W   #$7, D1     *Isolate register
00003288  3601                    3756              MOVE.W  D1, D3
0000328A  1C3C 0000               3757              MOVE.B  #$0, D6
0000328E                          3758              
0000328E  4E75                    3759              RTS
00003290                          3760              
00003290  7CFF                    3761  ROMEA       MOVE.L  #-1, D6
00003292  2200                    3762              MOVE.L  D0, D1
00003294  C2BC 00000038           3763              AND.L   #$38, D1    *Isolate source mode
0000329A                          3764              
0000329A  B2BC 00000010           3765              CMP.L   #$10, D1    *Check if 010
000032A0  6700 0024               3766              BEQ     ROMINADDRREG
000032A4                          3767              
000032A4  B2BC 00000018           3768              CMP.L   #$18, D1    *Check if 011
000032AA  6700 002A               3769              BEQ     ROMPLUSADDRREG
000032AE                          3770              
000032AE  B2BC 00000020           3771              CMP.L   #$20, D1    *Check if 100
000032B4  6700 0030               3772              BEQ     ROMMINUSADDRREG
000032B8                          3773              
000032B8  B2BC 00000038           3774              CMP.L   #$38, D1     *Check if 111
000032BE  6700 0036               3775              BEQ     ROMADDRESS
000032C2                          3776              
000032C2  6000 DE64               3777              BRA     INVALIDOPCODE
000032C6                          3778              
000032C6  2200                    3779  ROMINADDRREG MOVE.L  D0, D1
000032C8  C2BC 00000007           3780              AND.L   #$7, D1     *Isolate register
000032CE  2401                    3781              MOVE.L  D1, D2      *Move value of an
000032D0  1A3C 0003               3782              MOVE.B  #$3, D5     *Move type of source
000032D4                          3783              
000032D4  4E75                    3784              RTS
000032D6                          3785              
000032D6  2200                    3786  ROMPLUSADDRREG MOVE.L  D0, D1
000032D8  C2BC 00000007           3787              AND.L   #$7, D1     *Isolate register
000032DE  2401                    3788              MOVE.L  D1, D2      *Move value of an
000032E0  1A3C 0004               3789              MOVE.B  #$4, D5     *Move type of source
000032E4                          3790              
000032E4  4E75                    3791              RTS
000032E6                          3792              
000032E6  2200                    3793  ROMMINUSADDRREG MOVE.L  D0, D1
000032E8  C2BC 00000007           3794              AND.L   #$7, D1     *Isolate register
000032EE  2401                    3795              MOVE.L  D1, D2      *Move value of an
000032F0  1A3C 0005               3796              MOVE.B  #$5, D5     *Move type of source
000032F4                          3797              
000032F4  4E75                    3798              RTS
000032F6                          3799              
000032F6  2200                    3800  ROMADDRESS  MOVE.L  D0, D1
000032F8  C2BC 00000007           3801              AND.L   #$7, D1     *Isolate register
000032FE                          3802              
000032FE  B2BC 00000000           3803              CMP.L   #$0, D1     *Check if 000
00003304  6700 0010               3804              BEQ     ROMADDRW
00003308                          3805              
00003308  B2BC 00000001           3806              CMP.L   #$1, D1     *Check if 001
0000330E  6700 0010               3807              BEQ     ROMADDRL
00003312                          3808              
00003312  6000 DE14               3809              BRA     INVALIDOPCODE
00003316                          3810              
00003316  3410                    3811  ROMADDRW    MOVE.W  (A0),D2     *Move addr
00003318  1A3C 0006               3812              MOVE.B  #$6, D5     *Store type
0000331C  5488                    3813              ADDA.L  #$2, A0 
0000331E                          3814              
0000331E  4E75                    3815              RTS
00003320                          3816  
00003320  2410                    3817  ROMADDRL    MOVE.L  (A0),D2     *Move addr
00003322  1A3C 0007               3818              MOVE.B  #$7, D5     *Store type
00003326  5888                    3819              ADDA.L  #$4, A0
00003328                          3820              
00003328  4E75                    3821              RTS
0000332A                          3822              
0000332A                          3823              
0000332A                          3824              
0000332A                          3825              
0000332A  2200                    3826  CMPEA       MOVE.L  D0, D1
0000332C  C2BC 00000038           3827              AND.L   #$38, D1    *Isolate source mode
00003332                          3828              
00003332  B2BC 00000000           3829              CMP.L   #$0, D1     *Check if 000
00003338  6700 0038               3830              BEQ     CMPDATAREG
0000333C                          3831              
0000333C  B2BC 00000008           3832              CMP.L   #$8, D1     *Check if 001
00003342  6700 0040               3833              BEQ     CMPADDRREG
00003346                          3834              
00003346  B2BC 00000010           3835              CMP.L   #$10, D1    *Check if 010
0000334C  6700 0048               3836              BEQ     CMPINADDRREG
00003350                          3837              
00003350  B2BC 00000018           3838              CMP.L   #$18, D1    *Check if 011
00003356  6700 0050               3839              BEQ     CMPPLUSADDRREG
0000335A                          3840              
0000335A  B2BC 00000020           3841              CMP.L   #$20, D1    *Check if 100
00003360  6700 0058               3842              BEQ     CMPMINUSADDRREG
00003364                          3843              
00003364  B2BC 00000038           3844              CMP.L   #$38, D1     *Check if 111
0000336A  6700 0060               3845              BEQ     CMPADDRESSDATA
0000336E                          3846              
0000336E  6000 DDB8               3847              BRA     INVALIDOPCODE
00003372                          3848                  
00003372  2200                    3849  CMPDATAREG  MOVE.L  D0, D1
00003374  C2BC 00000007           3850              AND.L   #$7, D1     *Isolate register
0000337A  2401                    3851              MOVE.L  D1, D2      *Move value of Dn
0000337C  1A3C 0000               3852              MOVE.B  #$0, D5     *Move type of source
00003380                          3853              
00003380  6000 00C8               3854              BRA     CMPDNDEST
00003384                          3855              
00003384  2200                    3856  CMPADDRREG  MOVE.L  D0, D1
00003386  C2BC 00000007           3857              AND.L   #$7, D1     *Isolate register
0000338C  2401                    3858              MOVE.L  D1, D2      *Move value of An
0000338E  1A3C 0001               3859              MOVE.B  #$1, D5     *Move type of source
00003392                          3860              
00003392  6000 00B6               3861              BRA     CMPDNDEST
00003396                          3862              
00003396  2200                    3863  CMPINADDRREG MOVE.L  D0, D1
00003398  C2BC 00000007           3864              AND.L   #$7, D1     *Isolate register
0000339E  2401                    3865              MOVE.L  D1, D2      *Move value of an
000033A0  1A3C 0003               3866              MOVE.B  #$3, D5     *Move type of source
000033A4                          3867              
000033A4  6000 00A4               3868              BRA     CMPDNDEST
000033A8                          3869              
000033A8  2200                    3870  CMPPLUSADDRREG MOVE.L  D0, D1
000033AA  C2BC 00000007           3871              AND.L   #$7, D1     *Isolate register
000033B0  2401                    3872              MOVE.L  D1, D2      *Move value of an
000033B2  1A3C 0004               3873              MOVE.B  #$4, D5     *Move type of source
000033B6                          3874              
000033B6  6000 0092               3875              BRA     CMPDNDEST
000033BA                          3876              
000033BA  2200                    3877  CMPMINUSADDRREG MOVE.L  D0, D1
000033BC  C2BC 00000007           3878              AND.L   #$7, D1     *Isolate register
000033C2  2401                    3879              MOVE.L  D1, D2      *Move value of an
000033C4  1A3C 0005               3880              MOVE.B  #$5, D5     *Move type of source
000033C8                          3881              
000033C8  6000 0080               3882              BRA     CMPDNDEST
000033CC                          3883              
000033CC  2200                    3884  CMPADDRESSDATA MOVE.L  D0, D1
000033CE  C2BC 00000007           3885              AND.L   #$7, D1     *Isolate register
000033D4                          3886              
000033D4  B2BC 00000000           3887              CMP.L   #$0, D1     *Check if 000
000033DA  6700 001A               3888              BEQ     CMPADDRW
000033DE                          3889              
000033DE  B2BC 00000001           3890              CMP.L   #$1, D1     *Check if 001
000033E4  6700 001C               3891              BEQ     CMPADDRL
000033E8                          3892              
000033E8  B2BC 00000004           3893              CMP.L   #$4, D1     *Check if 100
000033EE  6700 001E               3894              BEQ     CMPDATA
000033F2                          3895              
000033F2  6000 DD34               3896              BRA     INVALIDOPCODE
000033F6                          3897              
000033F6  3410                    3898  CMPADDRW    MOVE.W  (A0),D2     *Move addr
000033F8  1A3C 0006               3899              MOVE.B  #$6, D5     *Store type
000033FC  5488                    3900              ADDA.L  #$2, A0 
000033FE                          3901              
000033FE  6000 004A               3902              BRA     CMPDNDEST
00003402                          3903  
00003402  2410                    3904  CMPADDRL    MOVE.L  (A0),D2     *Move addr
00003404  1A3C 0007               3905              MOVE.B  #$7, D5     *Store type
00003408  5888                    3906              ADDA.L  #$4, A0 
0000340A                          3907              
0000340A  6000 003E               3908              BRA     CMPDNDEST
0000340E                          3909              
0000340E  BE3C 0001               3910  CMPDATA     CMP.B   #$1,D7     *Compare if the size is a byte  
00003412  6700 0012               3911              BEQ     CMPSIZEB
00003416                          3912      
00003416  BE3C 0002               3913              CMP.B   #$2,D7     *Compare if the size is a word 
0000341A  6700 0016               3914              BEQ     CMPSIZEW
0000341E                          3915      
0000341E  BE3C 0003               3916              CMP.B   #$3,D7     *Compare if the size is a long 
00003422  6700 001A               3917              BEQ     CMPSIZEL 
00003426                          3918  
00003426  3410                    3919  CMPSIZEB    MOVE.W  (A0),D2 
00003428  1A3C 0008               3920              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
0000342C  5488                    3921              ADDA.L  #$2, A0 
0000342E                          3922          
0000342E  6000 001A               3923              BRA     CMPDNDEST *Branches to destination
00003432                          3924  
00003432  3410                    3925  CMPSIZEW    MOVE.W  (A0),D2 
00003434  1A3C 0008               3926              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00003438  5488                    3927              ADDA.L  #$2, A0 
0000343A                          3928          
0000343A  6000 000E               3929              BRA     CMPDNDEST *Branches to destination
0000343E                          3930  
0000343E  2410                    3931  CMPSIZEL    MOVE.L  (A0),D2 
00003440  1A3C 0008               3932              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00003444  5888                    3933              ADDA.L  #$4, A0 
00003446                          3934          
00003446  6000 0002               3935              BRA     CMPDNDEST *Branches to destination
0000344A                          3936              
0000344A  3200                    3937  CMPDNDEST   MOVE.W  D0, D1
0000344C  C27C 0E00               3938              AND.W   #$E00, D1   *Isolate register
00003450  E081                    3939              ASR.L   #8, D1
00003452  E281                    3940              ASR.L   #1, D1
00003454  3601                    3941              MOVE.W  D1, D3      *Move register to d3
00003456  1C3C 0000               3942              MOVE.B  #$0, D6
0000345A                          3943              
0000345A  4E75                    3944              RTS
0000345C                          3945              
0000345C                          3946              
0000345C                          3947              
0000345C                          3948              
0000345C  7CFF                    3949  BCCEA       MOVE.L  #-1, D6
0000345E  3200                    3950              MOVE.W  D0, D1
00003460  C27C 00FF               3951              AND.W   #$FF, D1    *Isolate first byte
00003464                          3952              
00003464  B27C 0000               3953              CMP.W   #$0, D1
00003468  6700 0054               3954              BEQ     BCCW
0000346C                          3955              
0000346C  B27C 00FF               3956              CMP.W   #$FF, D1
00003470  6700 0062               3957              BEQ     BCCL
00003474                          3958              
00003474  C27C 0080               3959              AND.W   #$80, D1    *Isolate first bit
00003478  B27C 0080               3960              CMP.W   #$80, D1
0000347C  6700 0016               3961              BEQ     BCCBS       *If negative, need further manipulation
00003480                          3962              
00003480  3200                    3963              MOVE.W  D0, D1
00003482  C27C 00FF               3964              AND.W   #$FF, D1
00003486  5501                    3965              SUB.B   #$2, D1     *Subtract 2
00003488  3A0E                    3966              MOVE.W  A6, D5      *Move address
0000348A  9A41                    3967              SUB.W   D1, D5      *Add from address
0000348C  3205                    3968              MOVE.W  D5, D1
0000348E  3401                    3969              MOVE.W  D1, D2
00003490  7A06                    3970              MOVE.L  #$6, D5  
00003492                          3971              
00003492  4E75                    3972              RTS
00003494                          3973              
00003494  3200                    3974  BCCBS       MOVE.W  D0, D1
00003496  C27C 00FF               3975              AND.W   #$FF, D1
0000349A  5301                    3976              SUB.B   #$1, D1     *Subtract 1
0000349C  4601                    3977              NOT.B   D1          *Flip all bits
0000349E  5501                    3978              SUB.B   #$2, D1     *Subtract 2
000034A0  3A0E                    3979              MOVE.W  A6, D5      *Move address
000034A2  9A41                    3980              SUB.W   D1, D5      *Add from address
000034A4  3205                    3981              MOVE.W  D5, D1
000034A6  3401                    3982              MOVE.W  D1, D2
000034A8  7A06                    3983              MOVE.L  #$6, D5  
000034AA                          3984              
000034AA  4E75                    3985              RTS
000034AC                          3986              
000034AC  5341                    3987  BCCWS       SUB.W   #$1, D1     *Subtract 1
000034AE  4641                    3988              NOT.W   D1          *Flip all bits
000034B0  5541                    3989              SUB.W   #$2, D1     *Subtract 2
000034B2  3A0E                    3990              MOVE.W  A6, D5      *Move address
000034B4  9A41                    3991              SUB.W   D1, D5      *Add from address
000034B6  3205                    3992              MOVE.W  D5, D1
000034B8  3401                    3993              MOVE.W  D1, D2
000034BA  7A06                    3994              MOVE.L  #$6, D5  
000034BC                          3995              
000034BC  4E75                    3996              RTS
000034BE                          3997              
000034BE  3210                    3998  BCCW        MOVE.W  (A0), D1
000034C0  5488                    3999              ADDA.L  #$2, A0
000034C2  B27C 0000               4000              CMP.W   #0, D1
000034C6  6DE4                    4001              BLT     BCCWS       *If negative, need further manipulation
000034C8                          4002              
000034C8  5401                    4003              ADD.B   #$2, D1     *Subtract 2
000034CA  3A0E                    4004              MOVE.W  A6, D5      *Move address
000034CC  D245                    4005              ADD.W   D5, D1      *Add from address
000034CE  3401                    4006              MOVE.W  D1, D2
000034D0  7A06                    4007              MOVE.L  #$6, D5 
000034D2                          4008              
000034D2  4E75                    4009              RTS
000034D4                          4010     
000034D4  2410                    4011  BCCL        MOVE.L  (A0), D2
000034D6  5888                    4012              ADDA.L  #$4, A0
000034D8  B2BC 00000000           4013              CMP.L   #0, D1
000034DE  6D00 000C               4014              BLT     BCCLS       *If negative, need further manipulation
000034E2                          4015              
000034E2  2401                    4016              MOVE.L  D1, D2
000034E4  5482                    4017              ADD.L   #$2, D2
000034E6  1A3C 0008               4018              MOVE.B  #$8, D5
000034EA                          4019              
000034EA  4E75                    4020              RTS
000034EC                          4021                   
000034EC  5381                    4022  BCCLS       SUB.L   #$1, D1     *Subtract 1
000034EE  4681                    4023              NOT.L   D1          *Flip all bits
000034F0  5481                    4024              ADD.L   #$2, D1     *Add 2
000034F2  2401                    4025              MOVE.L  D1, D2
000034F4  1A3C 0008               4026              MOVE.B  #$8, D5  
000034F8                          4027              
000034F8  4E75                    4028              RTS
000034FA                          4029              
000034FA                          4030              
000034FA  2200                    4031  JSREA       MOVE.L  D0, D1
000034FC  1C3C 00FF               4032              MOVE.B  #-1, D6
00003500  C2BC 00000038           4033              AND.L   #$38, D1    *Isolate source mode
00003506                          4034  
00003506  B2BC 00000010           4035              CMP.L   #$10, D1    *Check if 010
0000350C  6700 0010               4036              BEQ     JSRINADDRREG
00003510                          4037              
00003510  B2BC 00000038           4038              CMP.L   #$38, D1     *Check if 111
00003516  6700 0016               4039              BEQ     JSRADDRESS
0000351A                          4040              
0000351A  6000 DC0C               4041              BRA     INVALIDOPCODE
0000351E                          4042              
0000351E  2200                    4043  JSRINADDRREG MOVE.L  D0, D1
00003520  C2BC 00000007           4044              AND.L   #$7, D1     *Isolate register
00003526  2401                    4045              MOVE.L  D1, D2      *Move value of an
00003528  1A3C 0003               4046              MOVE.B  #$3, D5     *Move type of source
0000352C                          4047              
0000352C  4E75                    4048              RTS
0000352E                          4049              
0000352E  2200                    4050  JSRADDRESS  MOVE.L  D0, D1
00003530  C2BC 00000007           4051              AND.L   #$7, D1     *Isolate register
00003536                          4052              
00003536  B2BC 00000000           4053              CMP.L   #$0, D1     *Check if 000
0000353C  6700 0010               4054              BEQ     JSRADDRW
00003540                          4055              
00003540  B2BC 00000001           4056              CMP.L   #$1, D1     *Check if 001
00003546  6700 0010               4057              BEQ     JSRADDRL
0000354A                          4058              
0000354A  6000 DBDC               4059              BRA     INVALIDOPCODE
0000354E                          4060              
0000354E  3410                    4061  JSRADDRW    MOVE.W  (A0),D2     *Move addr
00003550  1A3C 0006               4062              MOVE.B  #$6, D5     *Store type
00003554  5488                    4063              ADDA.L  #$2, A0 
00003556                          4064              
00003556  4E75                    4065              RTS
00003558                          4066  
00003558  2410                    4067  JSRADDRL    MOVE.L  (A0),D2     *Move addr
0000355A  1A3C 0007               4068              MOVE.B  #$7, D5     *Store type
0000355E  5888                    4069              ADDA.L  #$4, A0
00003560                          4070              
00003560  4E75                    4071              RTS
00003562                          4072  
00003562                          4073                  
00003562                          4074  
00003562= 00                      4075  EMPTYLINEMESSAGE DC.B   '', 0
00003563= 0D 0A 00                4076  NEWLINE         DC.B    $0D,$0A,0
00003566= 44 49 56 55 00          4077  DIVSMESSAGE     DC.B    'DIVU', 0
0000356B= 43 4D 50 00             4078  CMPMESSAGE      DC.B     'CMP', 0
0000356F= 42 43 43 00             4079  BCCMESSAGE      DC.B     'BCC', 0
00003573= 42 47 54 00             4080  BGTMESSAGE      DC.B     'BGT', 0
00003577= 42 4C 45 00             4081  BLEMESSAGE      DC.B     'BLE', 0
0000357B= 4D 4F 56 45 51 00       4082  MOVEQMESSAGE    DC.B   'MOVEQ', 0
00003581= 41 44 44 41 00          4083  ADDAMESSAGE     DC.B    'ADDA', 0
00003586= 41 44 44 00             4084  ADDMESSAGE      DC.B     'ADD', 0
0000358A= 53 55 42 41 00          4085  SUBAMESSAGE     DC.B    'SUBA', 0
0000358F= 53 55 42 00             4086  SUBMESSAGE      DC.B     'SUB', 0
00003593= 41 4E 44 00             4087  ANDMESSAGE      DC.B     'AND', 0
00003597= 4D 55 4C 53 00          4088  MULSMESSAGE     DC.B    'MULS', 0
0000359C= 4D 4F 56 45 00          4089  MOVEMESSAGE     DC.B    'MOVE', 0
000035A1= 42 43 48 47 00          4090  BCHGMESSAGE     DC.B    'BCHG', 0
000035A6= 43 4D 50 49 00          4091  CMPIMESSAGE     DC.B    'CMPI', 0
000035AB= 41 44 44 49 00          4092  ADDIMESSAGE     DC.B    'ADDI', 0
000035B0= 41 4E 44 49 00          4093  ANDIMESSAGE     DC.B    'ANDI', 0
000035B5= 4C 45 41 00             4094  LEAMESSAGE      DC.B    'LEA',0
000035B9= 4D 4F 56 45 4D 00       4095  OPMOVEMMESSAGE  DC.B    'MOVEM',0
000035BF= 52 54 53 00             4096  RTSMESSAGE      DC.B    'RTS',0
000035C3= 4E 4F 50 00             4097  NOPMESSAGE      DC.B    'NOP',0
000035C7= 4A 53 52 00             4098  JSRMESSAGE      DC.B    'JSR',0
000035CB= 43 4C 52 00             4099  CLRMESSAGE      DC.B    'CLR',0
000035CF= 41 53 52 00             4100  ASRMESSAGE      DC.B    'ASR',0
000035D3= 41 53 4C 00             4101  ASLMESSAGE      DC.B    'ASL',0
000035D7= 4C 53 4C 00             4102  LSLMESSAGE      DC.B    'LSL',0
000035DB= 4C 53 52 00             4103  LSRMESSAGE      DC.B    'LSR',0
000035DF= 52 4F 52 00             4104  RORMESSAGE      DC.B    'ROR',0
000035E3= 52 4F 4C 00             4105  ROLMESSAGE      DC.B    'ROL',0
000035E7                          4106  
000035E7= 2E 42 00                4107  BYTEMESSAGE     DC.B    '.B', 0
000035EA= 2E 57 00                4108  WORDMESSAGE     DC.B    '.W', 0
000035ED= 2E 4C 00                4109  LONGMESSAGE     DC.B    '.L', 0
000035F0                          4110  
000035F0= 57 65 6C 63 6F 6D ...   4111  INPUTMESSAGE    DC.B    'Welcome to JAN disassembler. Please type your addresses in this format:', $0D,$0A,0
0000363A= 22 73 74 61 72 74 ...   4112  INPUTMESSAGE1   DC.B    '"starting address","ending address". (period included)', 0
00003671                          4113  
00003671= 53 65 63 74 69 6F ...   4114  CONTINUEMESSAGE DC.B    'Section ended. Press ENTER to continue?', 0
00003699= 41 6C 6C 20 64 6F ...   4115  ENDMESSAGE      DC.B    'All done!! Thank you for using JAN disassembler. Continue? (y/n)'
000036D9                          4116  
000036D9= 20 20 20 20 20 20 ...   4117  SPACEMESSAGE    DC.B    '           ', 0
000036E5= 2C 20 00                4118  COMMAMESSAGE    DC.B    ', ', 0
000036E8= 2F 00                   4119  SLASHMESSAGE    DC.B    '/', 0
000036EA                          4120  
000036EA= 44 41 54 41 00          4121  INVALIDMESSAGE  DC.B    'DATA', 0
000036EF= 24 00                   4122  DOLLARMESSAGE   DC.B    '$', 0
000036F1= 23 00                   4123  POUNDMESSAGE    DC.B    '#', 0
000036F3                          4124  
000036F3= 30 00                   4125  ZEROMESSAGE     DC.B    '0', 0
000036F5= 31 00                   4126  ONEMESSAGE      DC.B    '1', 0
000036F7= 32 00                   4127  TWOMESSAGE      DC.B    '2', 0
000036F9= 33 00                   4128  THREEMESSAGE    DC.B    '3', 0
000036FB= 34 00                   4129  FOURMESSAGE     DC.B    '4', 0
000036FD= 35 00                   4130  FIVEMESSAGE     DC.B    '5', 0
000036FF= 36 00                   4131  SIXMESSAGE      DC.B    '6', 0
00003701= 37 00                   4132  SEVENMESSAGE    DC.B    '7', 0
00003703= 38 00                   4133  EIGHTMESSAGE    DC.B    '8', 0
00003705= 39 00                   4134  NINEMESSAGE     DC.B    '9', 0
00003707= 41 00                   4135  AMESSAGE        DC.B    'A', 0
00003709= 42 00                   4136  BMESSAGE        DC.B    'B', 0
0000370B= 43 00                   4137  CMESSAGE        DC.B    'C', 0
0000370D= 44 00                   4138  DMESSAGE        DC.B    'D', 0
0000370F= 45 00                   4139  EMESSAGE        DC.B    'E', 0
00003711= 46 00                   4140  FMESSAGE        DC.B    'F', 0    
00003713                          4141  
00003713= 44 00                   4142  DNMESSAGE       DC.B    'D', 0
00003715= 41 00                   4143  ANMESSAGE       DC.B    'A', 0 
00003717= 28 41 00                4144  ANIOPENMESSAGE  DC.B    '(A', 0
0000371A= 29 00                   4145  ANICLOSEMESSAGE DC.B    ')', 0
0000371C= 29 2B 00                4146  ANPLUSCLOSEMESSAGE DC.B ')+', 0
0000371F= 2D 28 41 00             4147  ANMINUSOPENMESSAGE DC.B '-(A', 0
00003723                          4148  
00003723                          4149      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A0                  17BE
ADDAADDRESSDATA     27EA
ADDAADDRL           2820
ADDAADDRREG         27A2
ADDAADDRW           2814
ADDADATA            282C
ADDADATAREG         2790
ADDADDRESSD         25E2
ADDADDRESSDATA      26B8
ADDADDRL            26EE
ADDADDRLD           260C
ADDADDRREG          2670
ADDADDRW            26E2
ADDADDRWD           2602
ADDADEST            2868
ADDAEA              2748
ADDAINADDRREG       27B4
ADDAMESSAGE         3581
ADDAMINUSADDRREG    27D8
ADDAPLUSADDRREG     27C6
ADDASIZEB           2844
ADDASIZEL           285C
ADDASIZEW           2850
ADDBYTE             13E8
ADDBYTES            16B2
ADDDATA             26FA
ADDDATAREG          265E
ADDDNDEST           2736
ADDDNEA             256A
ADDDNEADEST         257E
ADDEA               2558
ADDEADN             2616
ADDIADDRESS         2934
ADDIADDRL           295E
ADDIADDRW           2954
ADDIDATAREG         28F4
ADDIDEST            28B6
ADDIEA              287A
ADDIINADDRREG       2904
ADDIMESSAGE         35AB
ADDIMINUSADDRREG    2924
ADDINADDRREG        2682
ADDINADDRREGD       25B2
ADDIPLUSADDRREG     2914
ADDISIZEB           2892
ADDISIZEL           28AA
ADDISIZEW           289E
ADDLONG             13F4
ADDLONGS            16C2
ADDMESSAGE          3586
ADDMINUSADDRREG     26A6
ADDMINUSADDRREGD    25D2
ADDPLUSADDRREG      2694
ADDPLUSADDRREGD     25C2
ADDSIZEB            2712
ADDSIZEL            272A
ADDSIZEW            271E
ADDWORD             13EE
ADDWORDS            16BA
ADLISTEA            1472
ADLISTEAD           123A
ADLISTEALOOP        1478
ADLISTEALOOP2       1484
ADLISTEALOOP2D      124C
ADLISTEALOOPD       1240
ADLISTSLASH         14E0
ADLISTSLASHD        12A8
ALIST               14B2
ALIST2              153E
ALISTD              127A
AMESSAGE            3707
ANDADDRESSD         2F3A
ANDADDRESSDATA      2FF4
ANDADDRL            302A
ANDADDRLD           2F64
ANDADDRW            301E
ANDADDRWD           2F5A
ANDDATA             3036
ANDDATAREG          2FAC
ANDDNDEST           3072
ANDDNEA             2EC2
ANDEA               2EB0
ANDEADEST           2ED6
ANDEADN             2F6E
ANDIMESSAGE         35B0
ANDINADDRREG        2FBE
ANDINADDRREGD       2F0A
ANDMESSAGE          3593
ANDMINUSADDRREG     2FE2
ANDMINUSADDRREGD    2F2A
ANDPLUSADDRREG      2FD0
ANDPLUSADDRREGD     2F1A
ANDSIZEB            304E
ANDSIZEL            3066
ANDSIZEW            305A
ANEA                159C
ANEAD               12D2
ANICLOSEMESSAGE     371A
ANIEA               15B2
ANIEAD              12E8
ANIOPENMESSAGE      3717
ANMESSAGE           3715
ANMINUSEA           15F6
ANMINUSEAD          132C
ANMINUSOPENMESSAGE  371F
ANPLUSCLOSEMESSAGE  371C
ANPLUSEA            15D4
ANPLUSEAD           130A
ASKFORCONTINUE      10FC
ASKLOOP             110C
ASLMESSAGE          35D3
ASMADDRESS          3214
ASMADDRL            323E
ASMADDRW            3234
ASMEA               31AE
ASMINADDRREG        31E4
ASMMINUSADDRREG     3204
ASMPLUSADDRREG      31F4
ASRC                318C
ASRD                3178
ASRDEST             31A0
ASREA               3166
ASRMESSAGE          35CF
BACKCOMMA           17EA
BACKEND             17DA
BACKSPACEINPUT      17C4
BACKSTART           17D0
BCCBS               3494
BCCEA               345C
BCCL                34D4
BCCLS               34EC
BCCMESSAGE          356F
BCCW                34BE
BCCWS               34AC
BCHGMESSAGE         35A1
BGTMESSAGE          3573
BLEMESSAGE          3577
BMESSAGE            3709
BYTEDATA            16E2
BYTEMESSAGE         35E7
CHECK0000           1AB4
CHECK0100           1FE2
CHECK0110           1E3E
CHECK0111           1E1E
CHECK1000           1FC2
CHECK1001           1F30
CHECK1010           1DE4
CHECK1100           1A42
CHECK1101           1E9E
CHECK1110           1BDC
CHECKAABC           1AD0
CHECKADDADDA        1EAE
CHECKADLIST         14D6
CHECKADLISTD        129E
CHECKANDMULS        1A50
CHECKASM            1C4C
CHECKASRE           1C82
CHECKBACKSPACE      1746
CHECKCBD            1AFE
CHECKDALIST         1568
CHECKEAS            20DC
CHECKIFCOMMA        1736
CHECKIFLESS9        178C
CHECKIFPERIOD       173E
CHECKLAR            1BEC
CHECKLARM           1BFE
CHECKLARR           1C1C
CHECKLCA            174E
CHECKLCZ            175A
CHECKLESSF          177A
CHECKLSM            1C3A
CHECKLSRE           1C70
CHECKMORE0          1782
CHECKMOREA          176E
CHECKOPS            1FF2
CHECKROM            1C5E
CHECKRORE           1C94
CHECKSUBSUBA        1F40
CLEARALL            1174
CLRADDRESS          2E7C
CLRADDRL            2EA6
CLRADDRW            2E9C
CLRDATAREG          2E3C
CLREA               2DFC
CLRINADDRREG        2E4C
CLRMESSAGE          35CB
CLRMINUSADDRREG     2E6C
CLRPLUSADDRREG      2E5C
CMESSAGE            370B
CMPADDRESSDATA      33CC
CMPADDRL            3402
CMPADDRREG          3384
CMPADDRW            33F6
CMPDATA             340E
CMPDATAREG          3372
CMPDNDEST           344A
CMPEA               332A
CMPIMESSAGE         35A6
CMPINADDRREG        3396
CMPMESSAGE          356B
CMPMINUSADDRREG     33BA
CMPPLUSADDRREG      33A8
CMPSIZEB            3426
CMPSIZEL            343E
CMPSIZEW            3432
COMMAINPUT          17A6
COMMAMESSAGE        36E5
COMPAREADDRESS      191A
CONTINUE            10D8
CONTINUEMESSAGE     3671
DALISTEA            14F4
DALISTEALOOP        14FA
DALISTEALOOP2       1506
DALISTSLASH         1572
DATAEA              167C
DATAEAD             13B2
DATAEALOOP          16CA
DATAEALOOP2         16F4
DATAEALOOPD         13FA
DECREASELC          1766
DEST                10D2
DESTINATION         10C6
DIVSMESSAGE         3566
DIVUADDRESSDATA     2CF4
DIVUADDRL           2D2A
DIVUADDRW           2D1E
DIVUDATA            2D36
DIVUDATAREG         2CAC
DIVUDEST            2D72
DIVUEA              2C6E
DIVUINADDRREG       2CBE
DIVUMINUSADDRREG    2CE2
DIVUPLUSADDRREG     2CD0
DIVUSIZEB           2D4E
DIVUSIZEL           2D66
DIVUSIZEW           2D5A
DLIST               1490
DLIST2              1512
DLISTD              1258
DMESSAGE            370D
DNEA                1586
DNEAD               12BC
DNMESSAGE           3713
DOLLARMESSAGE       36EF
DONE                185A
DOREST              17F0
EIGHTMESSAGE        3703
EMESSAGE            370F
EMPTYLINE           1814
EMPTYLINEMESSAGE    3562
ENDINGADDRESS       1808
ENDLOOP             182E
ENDMESSAGE          3699
FIVEMESSAGE         36FD
FMESSAGE            3711
FOURMESSAGE         36FB
INPUT               1718
INPUTLOOP           1730
INPUTMESSAGE        35F0
INPUTMESSAGE1       363A
INVALIDLOOP         1152
INVALIDMESSAGE      36EA
INVALIDOPCODE       1128
JSRADDRESS          352E
JSRADDRL            3558
JSRADDRW            354E
JSREA               34FA
JSRINADDRREG        351E
JSRMESSAGE          35C7
LEAADDRESS          2DB6
LEAADDRL            2DDE
LEAADDRW            2DD2
LEADEST             2DEA
LEAEA               2D84
LEAINADDRREG        2DA4
LEAMESSAGE          35B5
LETTERINPUT         1796
LONGDATA            16EE
LONGMESSAGE         35ED
LOOP                1036
LSLMESSAGE          35D7
LSMADDRESS          3132
LSMADDRL            315C
LSMADDRW            3152
LSMEA               30CC
LSMINADDRREG        3102
LSMMINUSADDRREG     3122
LSMPLUSADDRREG      3112
LSRC                30AA
LSRD                3096
LSRDEST             30BE
LSREA               3084
LSRMESSAGE          35DB
MOVEADDRD           233A
MOVEADDRESSDATA     2242
MOVEADDRL           2278
MOVEADDRLD          235E
MOVEADDRREG         21FA
MOVEADDRW           226C
MOVEADDRWD          2354
MOVEDATA            2284
MOVEDATAREG         21E8
MOVEDATAREGD        22F2
MOVEDEST            22C0
MOVEEA              21A0
MOVEINADDRD         2304
MOVEINADDRREG       220C
MOVEMADDRESS        2526
MOVEMADDRESSD       2466
MOVEMADDRL          254E
MOVEMADDRLD         2490
MOVEMADDRW          2544
MOVEMADDRWD         2486
MOVEMEA             23C6
MOVEMESSAGE         359C
MOVEMINADDRREG      2506
MOVEMINADDRREGD     2444
MOVEMINUSADDRREG    2230
MOVEMMDEST          241A
MOVEMMR             249A
MOVEMNOONE          24C8
MOVEMNOONES         2406
MOVEMPLUSADDRREG    2516
MOVEMPREADDRD       2454
MOVEMRDEST          24DC
MOVEMRLOOP          23E4
MOVEMRLOOPD         24A6
MOVEMRM             23D8
MOVEPLUSADDRREG     221E
MOVEPOSTADDRD       2316
MOVEPREADDRD        2328
MOVEQEA             2368
MOVEQMESSAGE        357B
MOVESIZEB           229C
MOVESIZEL           22B4
MOVESIZEW           22A8
MULSADDRESSDATA     2BDE
MULSADDRL           2C14
MULSADDRW           2C08
MULSDATA            2C20
MULSDATAREG         2B96
MULSDEST            2C5C
MULSEA              2B58
MULSINADDRREG       2BA8
MULSMESSAGE         3597
MULSMINUSADDRREG    2BCC
MULSPLUSADDRREG     2BBA
MULSSIZEB           2C38
MULSSIZEL           2C50
MULSSIZEW           2C44
NEWLINE             3563
NINEMESSAGE         3705
NOPEA               2194
NOPMESSAGE          35C3
NUMBERA             19FE
NUMBERB             1A08
NUMBERC             1A12
NUMBERD             1A1C
NUMBERE             1A26
NUMBEREIGHT         19EA
NUMBERF             1A30
NUMBERFIVE          19CC
NUMBERFOUR          19C2
NUMBERINPUT         179E
NUMBERNINE          19F4
NUMBERONE           19A4
NUMBERSEVEN         19E0
NUMBERSIX           19D6
NUMBERTHREE         19B8
NUMBERTWO           19AE
NUMBERZERO          199A
ONEMESSAGE          36F5
OPADD               1EEE
OPADDA              1ECC
OPADDI              1B88
OPAND               1A62
OPANDI              1BB2
OPASLM              1D1A
OPASLR              1D2A
OPASRM              1D36
OPASRR              1D46
OPBCC               1E7A
OPBCHGD             1B4E
OPBCHGR             1B3E
OPBGT               1E86
OPBLE               1E92
OPBXX               1E4E
OPCLR               20A0
OPCMP               1DF4
OPCMPI              1B5E
OPDIVS              1FD2
OPJSR               204E
OPLEA               205E
OPLSLM              1CA6
OPLSLR              1CB6
OPLSRM              1CE0
OPLSRR              1CF0
OPMOVE              1B10
OPMOVEM             206E
OPMOVEMMESSAGE      35B9
OPMOVEQ             1E2E
OPMULS              1AA4
OPNOP               203E
OPROLM              1D70
OPROLR              1D80
OPRORM              1DAA
OPRORR              1DBA
OPRTS               2090
OPSUB               1F80
OPSUBA              1F5E
OUTPUTEND           1822
PBAL                18E6
PERIODINPUT         17AA
PLAL                1884
POUNDMESSAGE        36F1
PRINTADDRESS        185E
PRINTBYTE           11B4
PRINTBYTEADDRESS    18DC
PRINTCOMMA          1186
PRINTDESTINATION    11F0
PRINTLONG           11DC
PRINTLONGADDRESS    187A
PRINTSIZES          1194
PRINTSOURCE         1420
PRINTSPACE          190C
PRINTWORD           11C8
PRINTWORDADDRESS    18AC
PWAL                18B6
REGISTERS           2386
ROLMESSAGE          35E3
ROMADDRESS          32F6
ROMADDRL            3320
ROMADDRW            3316
ROMEA               3290
ROMINADDRREG        32C6
ROMMINUSADDRREG     32E6
ROMPLUSADDRREG      32D6
RORC                326E
RORD                325A
RORDEST             3282
ROREA               3248
RORMESSAGE          35DF
RTSEA               219A
RTSMESSAGE          35BF
SEVENMESSAGE        3701
SHOWADDRESS         1A3A
SIXMESSAGE          36FF
SIZEB               20CA
SIZEL               20D6
SIZEW               20D0
SLASHMESSAGE        36E8
SOURCE              10B2
SPACEMESSAGE        36D9
START               1000
STARTINGADDRESS     17FC
SUBADDRESSD         29F2
SUBADDRESSDATA      2AC8
SUBADDRL            2AFE
SUBADDRLD           2A1C
SUBADDRREG          2A80
SUBADDRW            2AF2
SUBADDRWD           2A12
SUBAMESSAGE         358A
SUBDATA             2B0A
SUBDATAREG          2A6E
SUBDNDEST           2B46
SUBDNEA             297A
SUBEA               2968
SUBEADEST           298E
SUBEADN             2A26
SUBINADDRREG        2A92
SUBINADDRREGD       29C2
SUBMESSAGE          358F
SUBMINUSADDRREG     2AB6
SUBMINUSADDRREGD    29E2
SUBPLUSADDRREG      2AA4
SUBPLUSADDRREGD     29D2
SUBSIZEB            2B22
SUBSIZEL            2B3A
SUBSIZEW            2B2E
SWITCHINPUT         17BA
TESTNEWRANGE        1846
THREEMESSAGE        36F9
TWOMESSAGE          36F7
WORDDATA            16E8
WORDMESSAGE         35EA
XXXLEA              1648
XXXLEAD             137E
XXXLEALOOP          1658
XXXLEALOOPD         138E
XXXWEA              1618
XXXWEAD             134E
XXXWEALOOP          1628
XXXWEALOOPD         135E
YESCONTINUE         1118
ZEROMESSAGE         36F3
