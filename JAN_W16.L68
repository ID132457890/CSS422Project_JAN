00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/12/2016 9:16:17 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000                             9  
00001000                            10  *----------------------------------main--------------------------
00001000                            11      *Ask for input
00001000  4EB9 00001174             12      JSR         CLEARALL
00001006  227C 00000000             13      MOVEA.L     #$0, A1
0000100C  247C 00000000             14      MOVEA.L     #$0, A2
00001012  267C 00000000             15      MOVEA.L     #$0, A3
00001018  287C 00000000             16      MOVEA.L     #$0, A4
0000101E  2A7C 00000000             17      MOVEA.L     #$0, A5
00001024  2C7C 00000000             18      MOVEA.L     #$0, A6
0000102A  2E7C 00000000             19      MOVEA.L     #$0, A7
00001030  4EB9 00001718             20      JSR         INPUT
00001036                            21      
00001036                            22  LOOP    
00001036                            23  
00001036  528B                      24      ADDA.L      #$1, A3 *Counter
00001038                            25      *Print the initial address
00001038  4EB9 0000185E             26      JSR         PRINTADDRESS
0000103E                            27      
0000103E                            28      *Copy the opcode part to D0
0000103E  3010                      29      MOVE.W      (A0), D0
00001040                            30      
00001040                            31      *Copy the opcode to D1 for changes
00001040  3210                      32      MOVE.W      (A0), D1
00001042                            33      
00001042  3C48                      34      MOVEA.W      A0, A6    *Keep original address in case there is an error
00001044                            35      
00001044                            36      *Increase the address by 2, since that part has been read
00001044  5448                      37      ADDA.W       #$2, A0
00001046                            38      
00001046  183C 00FF                 39      MOVE.B      #-1, D4     *Start at invalid
0000104A                            40      
0000104A  4EB9 00001A42             41      JSR         CHECK1100    *Check for AND or MULS
00001050  4EB9 00001AB4             42      JSR         CHECK0000   *Check for ANDI, ADDI, BCHG, CMPI or MOVE  initial
00001056  4EB9 00001BDC             43      JSR         CHECK1110 *Check for LSx,ASx,ROx
0000105C  4EB9 00001DE4             44      JSR         CHECK1010  * Check for the CMP opcode
00001062  4EB9 00001E3E             45      JSR         CHECK0110 *Check for BCC opcode
00001068  4EB9 00001E1E             46      JSR         CHECK0111 *Check for MOVEQ opcode
0000106E  4EB9 00001E9E             47      JSR         CHECK1101 *Check for ADD or ADDA
00001074  4EB9 00001F30             48      JSR         CHECK1001 *Check for SUB or SUBA
0000107A  4EB9 00001FC2             49      JSR         CHECK1000 *Check for DIVS 
00001080  4EB9 00001FE2             50      JSR         CHECK0100 *Check for JSR,RTS,NOP,MOVEM,LEA,CLR
00001086                            51     
00001086  2400                      52      MOVE.L      D0, D2          *Backup opcode
00001088                            53     
00001088  B83C 00FF                 54      CMP.B       #-1, D4
0000108C  6700 009A                 55      BEQ         INVALIDOPCODE
00001090                            56      
00001090  2002                      57      MOVE.L      D2, D0      *restore opcode
00001092  4242                      58      CLR         D2
00001094                            59      
00001094  4EB9 000020DC             60      JSR         CHECKEAS    *Checks the EAs
0000109A                            61      
0000109A                            62      *Would go below only if there are no errors
0000109A  103C 000E                 63      MOVE.B  #14, D0         *Print opcode
0000109E  4E4F                      64      TRAP    #15
000010A0                            65      
000010A0  4EB9 00001194             66      JSR         PRINTSIZES  *Print the sizes
000010A6                            67      
000010A6  BA3C 00FF                 68      CMP.B   #-1, D5
000010AA  6600 0006                 69      BNE     SOURCE
000010AE  6000 0028                 70      BRA     CONTINUE
000010B2                            71      
000010B2  4EB9 00001420             72  SOURCE    JSR         PRINTSOURCE *Print source EA
000010B8                            73  
000010B8  BC3C 00FF                 74      CMP.B   #-1, D6
000010BC  6700 0008                 75      BEQ     DESTINATION
000010C0                            76      
000010C0  4EB9 00001186             77      JSR     PRINTCOMMA
000010C6                            78      
000010C6  BC3C 00FF                 79  DESTINATION     CMP.B   #-1, D6
000010CA  6600 0006                 80      BNE     DEST
000010CE  6000 0008                 81      BRA     CONTINUE
000010D2  4EB9 000011F0             82  DEST    JSR         PRINTDESTINATION    *Print destination
000010D8  4EB9 00001814             83  CONTINUE    JSR         EMPTYLINE   
000010DE                            84      
000010DE  B1CC                      85      CMP.L       A4, A0      *Check if the starting address is same as ending
000010E0  6C00 0740                 86      BGE         OUTPUTEND   *If yes, then stop
000010E4                            87      
000010E4  4EB9 00001174             88      JSR         CLEARALL
000010EA                            89      
000010EA  B7FC 00000018             90      CMP.L       #$18, A3
000010F0  6700 000A                 91      BEQ         ASKFORCONTINUE
000010F4                            92      
000010F4  6000 FF40                 93      BRA         LOOP        *If not, then loop back            
000010F8                            94      
000010F8  FFFF FFFF                 95      SIMHALT   
000010FC                            96  *------------------------------------main----------------------------------------
000010FC                            97      
000010FC  43F9 00003671             98  ASKFORCONTINUE  LEA         CONTINUEMESSAGE, A1
00001102  103C 000E                 99                  MOVE.B      #14, D0
00001106  4E4F                     100                  TRAP        #15
00001108                           101                  
00001108  103C 0005                102                  MOVE.B      #5, D0  *Read y/n
0000110C  4E4F                     103  ASKLOOP         TRAP        #15
0000110E                           104                  
0000110E  B23C 000D                105                  CMP.B       #$D, D1    *n
00001112  6700 0004                106                  BEQ         YESCONTINUE
00001116  60F4                     107                  BRA ASKLOOP
00001118                           108               
00001118                           109                  
00001118  4EB9 00001814            110  YESCONTINUE     JSR         EMPTYLINE
0000111E  267C 00000000            111                  MOVEA.L     #$0, A3
00001124  6000 FF10                112                  BRA         LOOP
00001128                           113                  
00001128                           114  
00001128                           115  
00001128  43F9 000036EA            116  INVALIDOPCODE   LEA         INVALIDMESSAGE, A1
0000112E  103C 000E                117                  MOVE.B      #14, D0
00001132  4E4F                     118                  TRAP        #15
00001134                           119                  
00001134  43F9 000036D9            120                  LEA         SPACEMESSAGE, A1
0000113A  103C 000E                121                  MOVE.B      #14, D0
0000113E  4E4F                     122                  TRAP        #15
00001140                           123                  
00001140  43F9 000036EF            124                  LEA         DOLLARMESSAGE, A1
00001146  103C 000E                125                  MOVE.B      #14, D0
0000114A  4E4F                     126                  TRAP        #15
0000114C                           127                  
0000114C  1C3C 0004                128                  MOVE.B      #$4, D6             *Put actual size in D6
00001150  3616                     129                  MOVE.W      (A6), D3            *Move opcode in D3
00001152  E95B                     130  INVALIDLOOP     ROL.W       #$4, D3             *Shift left to right position
00001154  3003                     131                  MOVE.W      D3, D0              *Move to D0 for backup
00001156  C67C 000F                132                  AND.W       #$F, D3             *Isolate first byte
0000115A  1203                     133                  MOVE.B      D3, D1              *Move byte to D1
0000115C  3600                     134                  MOVE.W      D0, D3              *Move original back to D2
0000115E  C67C FFF0                135                  AND.W       #$FFF0, D3          *Remove first 4 bits
00001162  5306                     136                  SUB.B       #$1, D6
00001164                           137                  
00001164  4EB9 0000191A            138                  JSR         COMPAREADDRESS
0000116A                           139                  
0000116A  BC3C 0000                140                  CMP.B       #$0, D6
0000116E  66E2                     141                  BNE         INVALIDLOOP
00001170                           142                  
00001170  6000 FF66                143                  BRA         CONTINUE
00001174                           144  
00001174  4240                     145  CLEARALL        CLR         D0
00001176  4241                     146                  CLR         D1
00001178  4242                     147                  CLR         D2
0000117A  4243                     148                  CLR         D3
0000117C  4244                     149                  CLR         D4
0000117E  4245                     150                  CLR         D5
00001180  4246                     151                  CLR         D6
00001182  4247                     152                  CLR         D7
00001184                           153                  
00001184                           154                  *MOVEA.L     #$0, A1
00001184                           155                  *MOVEA.L     #$0, A2
00001184                           156                  *MOVEA.L     #$0, A6
00001184  4E75                     157                  RTS
00001186                           158                  
00001186  43F9 000036E5            159  PRINTCOMMA      LEA         COMMAMESSAGE, A1
0000118C  103C 000E                160                  MOVE.B      #14, D0
00001190  4E4F                     161                  TRAP        #15
00001192                           162                  
00001192  4E75                     163                  RTS
00001194                           164                  
00001194                           165  *-----------------------------------PRINTSIZES-----------------------------------
00001194                           166  *Description: This branch print the sizes (.b, .w, .l)
00001194                           167  *--------------------------------------------------------------------------------
00001194                           168                  
00001194  BE3C 0001                169  PRINTSIZES      CMP.B       #$1, D7         *Check if byte
00001198  6700 001A                170                  BEQ         PRINTBYTE
0000119C                           171                  
0000119C  BE3C 0002                172                  CMP.B       #$2, D7         *Check if word
000011A0  6700 0026                173                  BEQ         PRINTWORD   
000011A4                           174                  
000011A4  BE3C 0003                175                  CMP.B       #$3, D7         *Check if long
000011A8  6700 0032                176                  BEQ         PRINTLONG
000011AC                           177                  
000011AC  4EB9 0000190C            178                  JSR         PRINTSPACE
000011B2                           179                  
000011B2  4E75                     180                  RTS
000011B4                           181                  
000011B4  43F9 000035E7            182  PRINTBYTE       LEA         BYTEMESSAGE, A1
000011BA  103C 000E                183                  MOVE.B      #14, D0
000011BE  4E4F                     184                  TRAP        #15
000011C0                           185                  
000011C0  4EB9 0000190C            186                  JSR         PRINTSPACE
000011C6  4E75                     187                  RTS
000011C8                           188                  
000011C8  43F9 000035EA            189  PRINTWORD       LEA         WORDMESSAGE, A1
000011CE  103C 000E                190                  MOVE.B      #14, D0
000011D2  4E4F                     191                  TRAP        #15
000011D4                           192                  
000011D4  4EB9 0000190C            193                  JSR         PRINTSPACE
000011DA  4E75                     194                  RTS
000011DC                           195                  
000011DC  43F9 000035ED            196  PRINTLONG       LEA         LONGMESSAGE, A1
000011E2  103C 000E                197                  MOVE.B      #14, D0
000011E6  4E4F                     198                  TRAP        #15
000011E8                           199                  
000011E8  4EB9 0000190C            200                  JSR         PRINTSPACE
000011EE  4E75                     201                  RTS
000011F0                           202                  
000011F0                           203  *-----------------------------------PRINTEAS-------------------------------------
000011F0                           204  *Description: This branch prints the EAs
000011F0                           205  *--------------------------------------------------------------------------------
000011F0                           206  
000011F0  5206                     207  PRINTDESTINATION     ADD.B       #$1, D6             *Add 1 to size
000011F2                           208  
000011F2  BC3C 0001                209                  CMP.B       #$1, D6             *Check if Dn
000011F6  6700 00C4                210                  BEQ         DNEAD                *It's DN
000011FA                           211                  
000011FA  BC3C 0002                212                  CMP.B       #$2, D6             *Check if An
000011FE  6700 00D2                213                  BEQ         ANEAD
00001202                           214                  
00001202  BC3C 0004                215                  CMP.B       #$4, D6             *Check if (An)
00001206  6700 00E0                216                  BEQ         ANIEAD
0000120A                           217                  
0000120A  BC3C 0005                218                  CMP.B       #$5, D6             *Check if (An)+
0000120E  6700 00FA                219                  BEQ         ANPLUSEAD       
00001212                           220                  
00001212  BC3C 0006                221                  CMP.B       #$6, D6             *Check if -(An)
00001216  6700 0114                222                  BEQ         ANMINUSEAD      
0000121A                           223                  
0000121A  BC3C 0007                224                  CMP.B       #$7, D6             *Check if xxx.w
0000121E  6700 012E                225                  BEQ         XXXWEAD          
00001222                           226                  
00001222  BC3C 0008                227                  CMP.B       #$8, D6             *Check if xxx.l
00001226  6700 0156                228                  BEQ         XXXLEAD
0000122A                           229                  
0000122A  BC3C 0009                230                  CMP.B       #$9, D6             *Check if data
0000122E  6700 0182                231                  BEQ         DATAEAD
00001232                           232                  
00001232  BC3C 0011                233                  CMP.B       #$11, D6            *Check if list
00001236  6700 0002                234                  BEQ         ADLISTEAD
0000123A                           235                  
0000123A  4243                     236  ADLISTEAD       CLR         D3
0000123C  4241                     237                  CLR         D1
0000123E  4246                     238                  CLR         D6
00001240  1232 3000                239  ADLISTEALOOPD   MOVE.B      (A2, D3), D1      *retrive element
00001244  BC3C 0000                240                  CMP.B       #$0, D6
00001248  6600 005E                241                  BNE         ADLISTSLASHD
0000124C                           242                  
0000124C  B63C 0007                243  ADLISTEALOOP2D  CMP.B       #7, D3              *Check if index less than 7
00001250  6F00 0006                244                  BLE         DLISTD
00001254                           245                  
00001254  6000 0024                246                  BRA         ALISTD
00001258                           247                  
00001258  B23C 0001                248  DLISTD          CMP.B       #$1, D1         *Check if element 1
0000125C  6600 0040                249                  BNE         CHECKADLISTD
00001260                           250                  
00001260  43F9 00003713            251                  LEA         DNMESSAGE, A1       *Show D
00001266  103C 000E                252                  MOVE.B      #14, D0
0000126A  4E4F                     253                  TRAP        #15
0000126C                           254                  
0000126C  1C01                     255                  MOVE.B      D1, D6              *Conserve num
0000126E  1203                     256                  MOVE.B      D3, D1              *Move counter to D1
00001270  103C 0003                257                  MOVE.B      #3, D0              *Show n
00001274  4E4F                     258                  TRAP        #15
00001276                           259                  
00001276  6000 0026                260                  BRA         CHECKADLISTD
0000127A                           261                  
0000127A  B23C 0001                262  ALISTD          CMP.B       #$1, D1         *Check if element 1
0000127E  6600 001E                263                  BNE         CHECKADLISTD
00001282                           264                  
00001282  43F9 00003715            265                  LEA         ANMESSAGE, A1       *Show A
00001288  103C 000E                266                  MOVE.B      #14, D0
0000128C  4E4F                     267                  TRAP        #15
0000128E                           268                  
0000128E  1C01                     269                  MOVE.B      D1, D6              *Conserve num
00001290  1203                     270                  MOVE.B      D3, D1              *Move counter to D1
00001292  5101                     271                  SUB.B       #8, D1              *Subtract 8
00001294  103C 0003                272                  MOVE.B      #3, D0              *Show n
00001298  4E4F                     273                  TRAP        #15
0000129A                           274                  
0000129A  6000 0002                275                  BRA         CHECKADLISTD
0000129E                           276                  
0000129E  5203                     277  CHECKADLISTD    ADD.B       #1, D3              *add counter
000012A0  B63C 0010                278                  CMP.B       #16, D3
000012A4  669A                     279                  BNE         ADLISTEALOOPD
000012A6                           280                  
000012A6  4E75                     281                  RTS        
000012A8                           282                  
000012A8  B23C 0000                283  ADLISTSLASHD    CMP.B       #$0, D1
000012AC  679E                     284                  BEQ         ADLISTEALOOP2D
000012AE                           285                  
000012AE  43F9 000036E8            286                  LEA         SLASHMESSAGE, A1
000012B4  103C 000E                287                  MOVE.B      #14, D0
000012B8  4E4F                     288                  TRAP        #15
000012BA                           289                  
000012BA  6090                     290                  BRA         ADLISTEALOOP2D
000012BC                           291                  
000012BC  43F9 00003713            292  DNEAD           LEA         DNMESSAGE, A1       *Show D
000012C2  103C 000E                293                  MOVE.B      #14, D0
000012C6  4E4F                     294                  TRAP        #15
000012C8                           295                  
000012C8  1203                     296                  MOVE.B      D3, D1              *Show n
000012CA  103C 0003                297                  MOVE.B      #3, D0
000012CE  4E4F                     298                  TRAP        #15
000012D0                           299                  
000012D0  4E75                     300                  RTS
000012D2                           301                  
000012D2  43F9 00003715            302  ANEAD           LEA         ANMESSAGE, A1       *Show A
000012D8  103C 000E                303                  MOVE.B      #14, D0
000012DC  4E4F                     304                  TRAP        #15
000012DE                           305                  
000012DE  1203                     306                  MOVE.B      D3, D1              *Show n
000012E0  103C 0003                307                  MOVE.B      #3, D0
000012E4  4E4F                     308                  TRAP        #15
000012E6                           309                  
000012E6  4E75                     310                  RTS
000012E8                           311                  
000012E8  43F9 00003717            312  ANIEAD          LEA         ANIOPENMESSAGE, A1  *Show (A
000012EE  103C 000E                313                  MOVE.B      #14, D0
000012F2  4E4F                     314                  TRAP        #15
000012F4                           315                  
000012F4  1203                     316                  MOVE.B      D3, D1              *Show n
000012F6  103C 0003                317                  MOVE.B      #3, D0
000012FA  4E4F                     318                  TRAP        #15
000012FC                           319                  
000012FC  43F9 0000371A            320                  LEA         ANICLOSEMESSAGE, A1 *Show )  
00001302  103C 000E                321                  MOVE.B      #14, D0
00001306  4E4F                     322                  TRAP        #15   
00001308                           323                  
00001308  4E75                     324                  RTS
0000130A                           325                  
0000130A  43F9 00003717            326  ANPLUSEAD       LEA         ANIOPENMESSAGE, A1  *Show (A
00001310  103C 000E                327                  MOVE.B      #14, D0
00001314  4E4F                     328                  TRAP        #15
00001316                           329                  
00001316  1203                     330                  MOVE.B      D3, D1              *Show n
00001318  103C 0003                331                  MOVE.B      #3, D0
0000131C  4E4F                     332                  TRAP        #15
0000131E                           333                  
0000131E  43F9 0000371C            334                  LEA         ANPLUSCLOSEMESSAGE, A1 *Show )+  
00001324  103C 000E                335                  MOVE.B      #14, D0
00001328  4E4F                     336                  TRAP        #15  
0000132A                           337                  
0000132A  4E75                     338                  RTS
0000132C                           339                  
0000132C  43F9 0000371F            340  ANMINUSEAD      LEA         ANMINUSOPENMESSAGE, A1  *Show -(A
00001332  103C 000E                341                  MOVE.B      #14, D0
00001336  4E4F                     342                  TRAP        #15
00001338                           343                  
00001338  1203                     344                  MOVE.B      D3, D1              *Show n
0000133A  103C 0003                345                  MOVE.B      #3, D0
0000133E  4E4F                     346                  TRAP        #15
00001340                           347                  
00001340  43F9 0000371A            348                  LEA         ANICLOSEMESSAGE, A1 *Show )  
00001346  103C 000E                349                  MOVE.B      #14, D0
0000134A  4E4F                     350                  TRAP        #15 
0000134C                           351                  
0000134C  4E75                     352                  RTS
0000134E                           353                  
0000134E  43F9 000036EF            354  XXXWEAD         LEA         DOLLARMESSAGE, A1
00001354  103C 000E                355                  MOVE.B      #14, D0
00001358  4E4F                     356                  TRAP        #15
0000135A                           357  
0000135A  1C3C 0004                358                  MOVE.B      #$4, D6             *Put actual size in D5
0000135E  E95B                     359  XXXWEALOOPD     ROL.W       #$4, D3             *Shift left to right position
00001360  3003                     360                  MOVE.W      D3, D0              *Move to D0 for backup
00001362  C67C 000F                361                  AND.W       #$F, D3             *Isolate first byte
00001366  1203                     362                  MOVE.B      D3, D1              *Move byte to D1
00001368  3600                     363                  MOVE.W      D0, D3              *Move original back to D2
0000136A  C67C FFF0                364                  AND.W       #$FFF0, D3          *Remove first 4 bits
0000136E  5306                     365                  SUB.B       #$1, D6
00001370                           366                  
00001370  4EB9 0000191A            367                  JSR         COMPAREADDRESS
00001376                           368                  
00001376  BC3C 0000                369                  CMP.B       #$0, D6
0000137A  66E2                     370                  BNE         XXXWEALOOPD
0000137C                           371                  
0000137C  4E75                     372                  RTS
0000137E                           373                  
0000137E  43F9 000036EF            374  XXXLEAD         LEA         DOLLARMESSAGE, A1
00001384  103C 000E                375                  MOVE.B      #14, D0
00001388  4E4F                     376                  TRAP        #15
0000138A                           377  
0000138A  1C3C 0008                378                  MOVE.B      #$8, D6             *Put actual size in D5
0000138E  E99B                     379  XXXLEALOOPD     ROL.L       #$4, D3             *Shift left to right position
00001390  2003                     380                  MOVE.L      D3, D0              *Move to D0 for backup
00001392  C6BC 0000000F            381                  AND.L       #$F, D3             *Isolate first byte
00001398  1203                     382                  MOVE.B      D3, D1              *Move byte to D1
0000139A  2600                     383                  MOVE.L      D0, D3              *Move original back to D2
0000139C  C6BC FFFFFFF0            384                  AND.L       #$FFFFFFF0, D3      *Remove first 4 bits
000013A2  5306                     385                  SUB.B       #$1, D6
000013A4                           386                  
000013A4  4EB9 0000191A            387                  JSR         COMPAREADDRESS
000013AA                           388                  
000013AA  BC3C 0000                389                  CMP.B       #$0, D6
000013AE  66DE                     390                  BNE         XXXLEALOOPD
000013B0                           391                  
000013B0  4E75                     392                  RTS
000013B2                           393       
000013B2  43F9 000036F1            394  DATAEAD         LEA         POUNDMESSAGE, A1
000013B8  103C 000E                395                  MOVE.B      #14, D0
000013BC  4E4F                     396                  TRAP        #15
000013BE                           397                  
000013BE  43F9 000036EF            398                  LEA         DOLLARMESSAGE, A1
000013C4  103C 000E                399                  MOVE.B      #14, D0
000013C8  4E4F                     400                  TRAP        #15
000013CA                           401  
000013CA  BEBC 00000001            402                  CMP.L       #$1, D7
000013D0  6700 0016                403                  BEQ         ADDBYTE
000013D4                           404                  
000013D4  BEBC 00000002            405                  CMP.L       #$2, D7
000013DA  6700 0012                406                  BEQ         ADDWORD
000013DE                           407                  
000013DE  BEBC 00000003            408                  CMP.L       #$3, D7
000013E4  6700 000E                409                  BEQ         ADDLONG
000013E8                           410                  
000013E8  7E02                     411  ADDBYTE         MOVE.L      #$2, D7
000013EA  6000 000E                412                  BRA         DATAEALOOPD
000013EE                           413                  
000013EE  7E04                     414  ADDWORD         MOVE.L      #$4, D7
000013F0  6000 0008                415                  BRA         DATAEALOOPD
000013F4                           416                
000013F4  7E08                     417  ADDLONG         MOVE.L      #$8, D7
000013F6  6000 0002                418                  BRA         DATAEALOOPD
000013FA                           419  
000013FA  E99B                     420  DATAEALOOPD     ROL.L       #$4, D3             *Shift left to right position
000013FC  2003                     421                  MOVE.L      D3, D0              *Move to D0 for backup
000013FE  C6BC 0000000F            422                  AND.L       #$F, D3             *Isolate first byte
00001404  4241                     423                  CLR         D1
00001406  1203                     424                  MOVE.B      D3, D1              *Move byte to D1
00001408  2600                     425                  MOVE.L      D0, D3              *Move original back to D2
0000140A  C6BC FFFFFFF0            426                  AND.L       #$FFFFFFF0, D3      *Remove first 4 bits
00001410  5307                     427                  SUB.B       #$1, D7
00001412                           428                  
00001412  4EB9 0000191A            429                  JSR         COMPAREADDRESS
00001418                           430                  
00001418  BE3C 0000                431                  CMP.B       #$0, D7
0000141C  66DC                     432                  BNE         DATAEALOOPD
0000141E                           433                  
0000141E  4E75                     434                  RTS
00001420                           435                  
00001420                           436  
00001420  5205                     437  PRINTSOURCE     ADD.B       #$1, D5             *Add 1 to size
00001422                           438  
00001422  BA3C 0001                439                  CMP.B       #$1, D5             *Check if Dn
00001426  6700 015E                440                  BEQ         DNEA                *It's DN
0000142A                           441                  
0000142A  BA3C 0002                442                  CMP.B       #$2, D5             *Check if An
0000142E  6700 016C                443                  BEQ         ANEA
00001432                           444                  
00001432  BA3C 0004                445                  CMP.B       #$4, D5             *Check if (An)
00001436  6700 017A                446                  BEQ         ANIEA
0000143A                           447                  
0000143A  BA3C 0005                448                  CMP.B       #$5, D5             *Check if (An)+
0000143E  6700 0194                449                  BEQ         ANPLUSEA       
00001442                           450                  
00001442  BA3C 0006                451                  CMP.B       #$6, D5             *Check if -(An)
00001446  6700 01AE                452                  BEQ         ANMINUSEA      
0000144A                           453                  
0000144A  BA3C 0007                454                  CMP.B       #$7, D5             *Check if xxx.w
0000144E  6700 01C8                455                  BEQ         XXXWEA          
00001452                           456                  
00001452  BA3C 0008                457                  CMP.B       #$8, D5             *Check if xxx.l
00001456  6700 01F0                458                  BEQ         XXXLEA
0000145A                           459                  
0000145A  BA3C 0009                460                  CMP.B       #$9, D5             *Check if data
0000145E  6700 021C                461                  BEQ         DATAEA
00001462                           462                  
00001462  BA3C 0011                463                  CMP.B       #$11, D5            *Check if list
00001466  6700 000A                464                  BEQ         ADLISTEA
0000146A                           465                  
0000146A  BA3C 0012                466                  CMP.B       #$12, D5            *Check if list
0000146E  6700 0084                467                  BEQ         DALISTEA
00001472                           468                  
00001472  4242                     469  ADLISTEA        CLR         D2
00001474  4241                     470                  CLR         D1
00001476  4245                     471                  CLR         D5
00001478  1232 2000                472  ADLISTEALOOP    MOVE.B      (A2, D2), D1      *retrive element
0000147C  BA3C 0000                473                  CMP.B       #$0, D5
00001480  6600 005E                474                  BNE         ADLISTSLASH
00001484                           475                  
00001484  B43C 0007                476  ADLISTEALOOP2   CMP.B       #7, D2              *Check if index less than 7
00001488  6F00 0006                477                  BLE         DLIST
0000148C                           478                  
0000148C  6000 0024                479                  BRA         ALIST
00001490                           480                  
00001490  B23C 0001                481  DLIST           CMP.B       #$1, D1         *Check if element 1
00001494  6600 0040                482                  BNE         CHECKADLIST
00001498                           483                  
00001498  43F9 00003713            484                  LEA         DNMESSAGE, A1       *Show D
0000149E  103C 000E                485                  MOVE.B      #14, D0
000014A2  4E4F                     486                  TRAP        #15
000014A4                           487                  
000014A4  1A01                     488                  MOVE.B      D1, D5              *Conserve num
000014A6  1202                     489                  MOVE.B      D2, D1              *Move counter to D1
000014A8  103C 0003                490                  MOVE.B      #3, D0              *Show n
000014AC  4E4F                     491                  TRAP        #15
000014AE                           492                  
000014AE  6000 0026                493                  BRA         CHECKADLIST
000014B2                           494                  
000014B2  B23C 0001                495  ALIST           CMP.B       #$1, D1         *Check if element 1
000014B6  6600 001E                496                  BNE         CHECKADLIST
000014BA                           497                  
000014BA  43F9 00003715            498                  LEA         ANMESSAGE, A1       *Show A
000014C0  103C 000E                499                  MOVE.B      #14, D0
000014C4  4E4F                     500                  TRAP        #15
000014C6                           501                  
000014C6  1A01                     502                  MOVE.B      D1, D5              *Conserve num
000014C8  1202                     503                  MOVE.B      D2, D1              *Move counter to D1
000014CA  5101                     504                  SUB.B       #8, D1              *Subtract 8
000014CC  103C 0003                505                  MOVE.B      #3, D0              *Show n
000014D0  4E4F                     506                  TRAP        #15
000014D2                           507                  
000014D2  6000 0002                508                  BRA         CHECKADLIST
000014D6                           509                  
000014D6  5202                     510  CHECKADLIST     ADD.B       #1, D2              *add counter
000014D8  B43C 0010                511                  CMP.B       #16, D2
000014DC  669A                     512                  BNE         ADLISTEALOOP
000014DE                           513                  
000014DE  4E75                     514                  RTS        
000014E0                           515                  
000014E0  B23C 0000                516  ADLISTSLASH     CMP.B       #$0, D1
000014E4  679E                     517                  BEQ         ADLISTEALOOP2
000014E6                           518                  
000014E6  43F9 000036E8            519                  LEA         SLASHMESSAGE, A1
000014EC  103C 000E                520                  MOVE.B      #14, D0
000014F0  4E4F                     521                  TRAP        #15
000014F2                           522                  
000014F2  6090                     523                  BRA         ADLISTEALOOP2
000014F4                           524                 
000014F4                           525                  
000014F4  4242                     526  DALISTEA        CLR         D2
000014F6  4241                     527                  CLR         D1
000014F8  4245                     528                  CLR         D5
000014FA  1232 2000                529  DALISTEALOOP    MOVE.B      (A2, D2), D1      *retrive element
000014FE  BA3C 0000                530                  CMP.B       #$0, D5
00001502  6600 006E                531                  BNE         DALISTSLASH
00001506                           532                  
00001506  B43C 0007                533  DALISTEALOOP2   CMP.B       #7, D2              *Check if index less than 7
0000150A  6F00 0032                534                  BLE         ALIST2
0000150E                           535                  
0000150E  6000 0002                536                  BRA         DLIST2
00001512                           537                  
00001512  B23C 0001                538  DLIST2          CMP.B       #$1, D1         *Check if element 1
00001516  6600 0050                539                  BNE         CHECKDALIST
0000151A                           540                  
0000151A  43F9 00003713            541                  LEA         DNMESSAGE, A1       *Show D
00001520  103C 000E                542                  MOVE.B      #14, D0
00001524  4E4F                     543                  TRAP        #15
00001526                           544                  
00001526  1A01                     545                  MOVE.B      D1, D5              *Conserve num
00001528  1202                     546                  MOVE.B      D2, D1              *Move counter to D1
0000152A  5101                     547                  SUB.B       #8, D1              *Subtract 8
0000152C  1001                     548                  MOVE.B      D1, D0              *Move counter to d0
0000152E  123C 0007                549                  MOVE.B      #7, D1              *Move 7 to d1
00001532  9200                     550                  SUB.B       D0, D1              *Do 7 - counter
00001534  103C 0003                551                  MOVE.B      #3, D0              *Show n
00001538  4E4F                     552                  TRAP        #15
0000153A                           553                  
0000153A  6000 002C                554                  BRA         CHECKDALIST
0000153E                           555                  
0000153E  B23C 0001                556  ALIST2          CMP.B       #$1, D1         *Check if element 1
00001542  6600 0024                557                  BNE         CHECKDALIST
00001546                           558                  
00001546  43F9 00003715            559                  LEA         ANMESSAGE, A1       *Show A
0000154C  103C 000E                560                  MOVE.B      #14, D0
00001550  4E4F                     561                  TRAP        #15
00001552                           562                  
00001552  1A01                     563                  MOVE.B      D1, D5              *Conserve num
00001554  1202                     564                  MOVE.B      D2, D1              *Move counter to D1
00001556  1001                     565                  MOVE.B      D1, D0              *Move counter to d0
00001558  123C 0007                566                  MOVE.B      #7, D1              *Move 7 to d1
0000155C  9200                     567                  SUB.B       D0, D1              *Do 7 - counter
0000155E  103C 0003                568                  MOVE.B      #3, D0              *Show n
00001562  4E4F                     569                  TRAP        #15
00001564                           570                  
00001564  6000 0002                571                  BRA         CHECKDALIST
00001568                           572                  
00001568  5202                     573  CHECKDALIST     ADD.B       #1, D2              *add counter
0000156A  B43C 0010                574                  CMP.B       #16, D2
0000156E  668A                     575                  BNE         DALISTEALOOP
00001570                           576                  
00001570  4E75                     577                  RTS        
00001572                           578                  
00001572  B23C 0000                579  DALISTSLASH     CMP.B       #$0, D1
00001576  678E                     580                  BEQ         DALISTEALOOP2
00001578                           581                  
00001578  43F9 000036E8            582                  LEA         SLASHMESSAGE, A1
0000157E  103C 000E                583                  MOVE.B      #14, D0
00001582  4E4F                     584                  TRAP        #15
00001584                           585                  
00001584  6080                     586                  BRA         DALISTEALOOP2
00001586                           587  
00001586                           588                                  
00001586  43F9 00003713            589  DNEA            LEA         DNMESSAGE, A1       *Show D
0000158C  103C 000E                590                  MOVE.B      #14, D0
00001590  4E4F                     591                  TRAP        #15
00001592                           592                  
00001592  1202                     593                  MOVE.B      D2, D1              *Show n
00001594  103C 0003                594                  MOVE.B      #3, D0
00001598  4E4F                     595                  TRAP        #15
0000159A                           596                  
0000159A  4E75                     597                  RTS
0000159C                           598                  
0000159C  43F9 00003715            599  ANEA            LEA         ANMESSAGE, A1       *Show A
000015A2  103C 000E                600                  MOVE.B      #14, D0
000015A6  4E4F                     601                  TRAP        #15
000015A8                           602                  
000015A8  1202                     603                  MOVE.B      D2, D1              *Show n
000015AA  103C 0003                604                  MOVE.B      #3, D0
000015AE  4E4F                     605                  TRAP        #15
000015B0                           606                  
000015B0  4E75                     607                  RTS
000015B2                           608                  
000015B2  43F9 00003717            609  ANIEA           LEA         ANIOPENMESSAGE, A1  *Show (A
000015B8  103C 000E                610                  MOVE.B      #14, D0
000015BC  4E4F                     611                  TRAP        #15
000015BE                           612                  
000015BE  1202                     613                  MOVE.B      D2, D1              *Show n
000015C0  103C 0003                614                  MOVE.B      #3, D0
000015C4  4E4F                     615                  TRAP        #15
000015C6                           616                  
000015C6  43F9 0000371A            617                  LEA         ANICLOSEMESSAGE, A1 *Show )  
000015CC  103C 000E                618                  MOVE.B      #14, D0
000015D0  4E4F                     619                  TRAP        #15   
000015D2                           620                  
000015D2  4E75                     621                  RTS
000015D4                           622                  
000015D4  43F9 00003717            623  ANPLUSEA        LEA         ANIOPENMESSAGE, A1  *Show (A
000015DA  103C 000E                624                  MOVE.B      #14, D0
000015DE  4E4F                     625                  TRAP        #15
000015E0                           626                  
000015E0  1202                     627                  MOVE.B      D2, D1              *Show n
000015E2  103C 0003                628                  MOVE.B      #3, D0
000015E6  4E4F                     629                  TRAP        #15
000015E8                           630                  
000015E8  43F9 0000371C            631                  LEA         ANPLUSCLOSEMESSAGE, A1 *Show )+  
000015EE  103C 000E                632                  MOVE.B      #14, D0
000015F2  4E4F                     633                  TRAP        #15  
000015F4                           634                  
000015F4  4E75                     635                  RTS
000015F6                           636                  
000015F6  43F9 0000371F            637  ANMINUSEA       LEA         ANMINUSOPENMESSAGE, A1  *Show -(A
000015FC  103C 000E                638                  MOVE.B      #14, D0
00001600  4E4F                     639                  TRAP        #15
00001602                           640                  
00001602  1202                     641                  MOVE.B      D2, D1              *Show n
00001604  103C 0003                642                  MOVE.B      #3, D0
00001608  4E4F                     643                  TRAP        #15
0000160A                           644                  
0000160A  43F9 0000371A            645                  LEA         ANICLOSEMESSAGE, A1 *Show )  
00001610  103C 000E                646                  MOVE.B      #14, D0
00001614  4E4F                     647                  TRAP        #15 
00001616                           648                  
00001616  4E75                     649                  RTS
00001618                           650                  
00001618  43F9 000036EF            651  XXXWEA          LEA         DOLLARMESSAGE, A1
0000161E  103C 000E                652                  MOVE.B      #14, D0
00001622  4E4F                     653                  TRAP        #15
00001624                           654  
00001624  1A3C 0004                655                  MOVE.B      #$4, D5             *Put actual size in D5
00001628  E95A                     656  XXXWEALOOP      ROL.W       #$4, D2             *Shift left to right position
0000162A  3002                     657                  MOVE.W      D2, D0              *Move to D0 for backup
0000162C  C47C 000F                658                  AND.W       #$F, D2             *Isolate first byte
00001630  1202                     659                  MOVE.B      D2, D1              *Move byte to D1
00001632  3400                     660                  MOVE.W      D0, D2              *Move original back to D2
00001634  C47C FFF0                661                  AND.W       #$FFF0, D2          *Remove first 4 bits
00001638  5305                     662                  SUB.B       #$1, D5
0000163A                           663                  
0000163A  4EB9 0000191A            664                  JSR         COMPAREADDRESS
00001640                           665                  
00001640  BA3C 0000                666                  CMP.B       #$0, D5
00001644  66E2                     667                  BNE         XXXWEALOOP
00001646                           668                  
00001646  4E75                     669                  RTS
00001648                           670                  
00001648  43F9 000036EF            671  XXXLEA          LEA         DOLLARMESSAGE, A1
0000164E  103C 000E                672                  MOVE.B      #14, D0
00001652  4E4F                     673                  TRAP        #15
00001654                           674  
00001654  1A3C 0008                675                  MOVE.B      #$8, D5             *Put actual size in D5
00001658  E99A                     676  XXXLEALOOP      ROL.L       #$4, D2             *Shift left to right position
0000165A  2002                     677                  MOVE.L      D2, D0              *Move to D0 for backup
0000165C  C4BC 0000000F            678                  AND.L       #$F, D2             *Isolate first byte
00001662  1202                     679                  MOVE.B      D2, D1              *Move byte to D1
00001664  2400                     680                  MOVE.L      D0, D2              *Move original back to D2
00001666  C4BC FFFFFFF0            681                  AND.L       #$FFFFFFF0, D2      *Remove first 4 bits
0000166C  5305                     682                  SUB.B       #$1, D5
0000166E                           683                  
0000166E  4EB9 0000191A            684                  JSR         COMPAREADDRESS
00001674                           685                  
00001674  BA3C 0000                686                  CMP.B       #$0, D5
00001678  66DE                     687                  BNE         XXXLEALOOP
0000167A                           688                  
0000167A  4E75                     689                  RTS
0000167C                           690                  
0000167C  43F9 000036F1            691  DATAEA          LEA         POUNDMESSAGE, A1
00001682  103C 000E                692                  MOVE.B      #14, D0
00001686  4E4F                     693                  TRAP        #15
00001688                           694                  
00001688  43F9 000036EF            695                  LEA         DOLLARMESSAGE, A1
0000168E  103C 000E                696                  MOVE.B      #14, D0
00001692  4E4F                     697                  TRAP        #15
00001694                           698  
00001694  BEBC 00000001            699                  CMP.L       #$1, D7
0000169A  6700 0016                700                  BEQ         ADDBYTES
0000169E                           701                  
0000169E  BEBC 00000002            702                  CMP.L       #$2, D7
000016A4  6700 0014                703                  BEQ         ADDWORDS
000016A8                           704                  
000016A8  BEBC 00000003            705                  CMP.L       #$3, D7
000016AE  6700 0012                706                  BEQ         ADDLONGS
000016B2                           707                  
000016B2  7E02                     708  ADDBYTES        MOVE.L      #$2, D7
000016B4  7A01                     709                  MOVE.L      #$1, D5
000016B6  6000 0012                710                  BRA         DATAEALOOP
000016BA                           711                  
000016BA  7E04                     712  ADDWORDS        MOVE.L      #$4, D7
000016BC  7A02                     713                  MOVE.L      #$2, D5
000016BE  6000 000A                714                  BRA         DATAEALOOP
000016C2                           715                
000016C2  7E08                     716  ADDLONGS        MOVE.L      #$8, D7
000016C4  7A03                     717                  MOVE.L      #$3, D5
000016C6  6000 0002                718                  BRA         DATAEALOOP
000016CA                           719                  
000016CA  BA7C 0001                720  DATAEALOOP      CMP.W       #$1, D5
000016CE  6700 0012                721                  BEQ         BYTEDATA
000016D2                           722                  
000016D2  BA7C 0002                723                  CMP.W       #$2, D5
000016D6  6700 0010                724                  BEQ         WORDDATA
000016DA                           725                  
000016DA  BA7C 0003                726                  CMP.W       #$3, D5
000016DE  6700 000E                727                  BEQ         LONGDATA
000016E2                           728                  
000016E2  E91A                     729  BYTEDATA        ROL.B       #$4, D2             *Shift left to right position
000016E4  6000 000E                730                  BRA         DATAEALOOP2
000016E8                           731                  
000016E8  E95A                     732  WORDDATA        ROL.W       #$4, D2             *Shift left to right position
000016EA  6000 0008                733                  BRA         DATAEALOOP2
000016EE                           734                  
000016EE  E99A                     735  LONGDATA        ROL.L       #$4, D2             *Shift left to right position
000016F0  6000 0002                736                  BRA         DATAEALOOP2
000016F4                           737                 
000016F4  2002                     738  DATAEALOOP2     MOVE.L      D2, D0              *Move to D0 for backup
000016F6  C4BC 0000000F            739                  AND.L       #$F, D2             *Isolate first byte
000016FC  4241                     740                  CLR         D1
000016FE  1202                     741                  MOVE.B      D2, D1              *Move byte to D1
00001700  2400                     742                  MOVE.L      D0, D2              *Move original back to D2
00001702  C4BC FFFFFFF0            743                  AND.L       #$FFFFFFF0, D2      *Remove first 4 bits
00001708  5307                     744                  SUB.B       #$1, D7
0000170A                           745                  
0000170A  4EB9 0000191A            746                  JSR         COMPAREADDRESS
00001710                           747                  
00001710  BE3C 0000                748                  CMP.B       #$0, D7
00001714  66B4                     749                  BNE         DATAEALOOP
00001716                           750                  
00001716  4E75                     751                  RTS
00001718                           752  
00001718                           753  *-----------------------------------Input----------------------------------------
00001718                           754  *Description: This branch handles the input part of the disassmbler
00001718                           755  *--------------------------------------------------------------------------------
00001718                           756  
00001718  43F9 000035F0            757  INPUT           LEA         INPUTMESSAGE, A1    *Show the first line
0000171E  103C 000D                758                  MOVE.B      #13, D0
00001722  4E4F                     759                  TRAP        #15    
00001724  43F9 0000363A            760                  LEA         INPUTMESSAGE1, A1
0000172A  103C 000D                761                  MOVE.B      #13, D0
0000172E  4E4F                     762                  TRAP        #15  
00001730                           763  
00001730  103C 0005                764  INPUTLOOP       MOVE.B      #5, D0              *Wait for user input (character)
00001734  4E4F                     765                  TRAP        #15
00001736                           766                  
00001736  B23C 002C                767  CHECKIFCOMMA    CMP.B       #$2C, D1            *If not, check if it's a comma
0000173A  6700 006A                768                  BEQ         COMMAINPUT          *If yes, it's a comma
0000173E                           769                  
0000173E  B23C 002E                770  CHECKIFPERIOD   CMP.B       #$2E, D1            *If not, check if it's a period
00001742  6700 0066                771                  BEQ         PERIODINPUT         *If yes, it's a period
00001746                           772                  
00001746  B23C 0008                773  CHECKBACKSPACE  CMP.B       #$8, D1             *If not, check if backspace
0000174A  6700 0078                774                  BEQ         BACKSPACEINPUT
0000174E                           775                  
0000174E  B23C 0061                776  CHECKLCA        CMP.B       #$61, D1
00001752  6C00 0006                777                  BGE         CHECKLCZ
00001756                           778                  
00001756  6000 0016                779                  BRA         CHECKMOREA
0000175A                           780                  
0000175A  B23C 007A                781  CHECKLCZ        CMP.B       #$7A, D1
0000175E  6F00 0006                782                  BLE         DECREASELC
00001762                           783                  
00001762  6000 000A                784                  BRA         CHECKMOREA
00001766                           785                  
00001766  0441 0020                786  DECREASELC      SUB.W       #$20, D1
0000176A  6000 0002                787                  BRA         CHECKMOREA
0000176E                           788          
0000176E  B23C 0041                789  CHECKMOREA      CMP.B       #$41, D1            *Check if letter better than A
00001772  6C00 0006                790                  BGE         CHECKLESSF          *If yes, check if less than F
00001776                           791                  
00001776  6000 000A                792                  BRA         CHECKMORE0          *If not, check if number
0000177A                           793                  
0000177A  B23C 0046                794  CHECKLESSF      CMP.B       #$46, D1            *Check if less than F
0000177E  6F00 0016                795                  BLE         LETTERINPUT         *If yes, then it's an acceptable letter input
00001782                           796          
00001782  B23C 0030                797  CHECKMORE0      CMP.B       #$30, D1            *If not, then check if number better than 0
00001786  6C00 0004                798                  BGE         CHECKIFLESS9        *If yes, check if less than 9
0000178A                           799                  
0000178A  60A4                     800                  BRA         INPUTLOOP
0000178C                           801                  
0000178C  B23C 0039                802  CHECKIFLESS9    CMP.B       #$39, D1            *Check if less than 9
00001790  6F00 000C                803                  BLE         NUMBERINPUT         *If yes, then it's a number input
00001794                           804                  
00001794  609A                     805                  BRA         INPUTLOOP           *If not, then it's an unacceptable characher
00001796                           806          
00001796  0401 0037                807  LETTERINPUT     SUB.B       #$37, D1            *Subtract 37 from D1 (since it's in ASCII)
0000179A  6000 0054                808                  BRA         DOREST
0000179E                           809          
0000179E  0401 0030                810  NUMBERINPUT     SUB.B       #$30, D1            *Subtract 30 from D1 (since it's in ASCII)
000017A2  6000 004C                811                  BRA         DOREST
000017A6                           812                  
000017A6  5204                     813  COMMAINPUT      ADD.B       #$1, D4             *Add 1 to D4 to show that the ending address
000017A8  6086                     814                  BRA         INPUTLOOP 
000017AA                           815                  
000017AA  B682                     816  PERIODINPUT     CMP.L       D2, D3
000017AC  6D00 000C                817                  BLT         SWITCHINPUT
000017B0                           818                  
000017B0  2042                     819                  MOVEA.L     D2, A0              *Move the starting address to A0
000017B2  2843                     820                  MOVEA.L     D3, A4              *Move the ending address to A4
000017B4  2A46                     821                  MOVEA.L     D6, A5
000017B6                           822  
000017B6  6000 005C                823                  BRA         EMPTYLINE
000017BA                           824                  
000017BA  2842                     825  SWITCHINPUT     MOVEA.L     D2, A4              *Move the starting address to A0
000017BC  2043                     826                  MOVEA.L     D3, A0              *Move the ending address to A0
000017BE  2A45                     827                  MOVEA.L     D5, A5
000017C0                           828  
000017C0                           829  
000017C0  6000 0052                830                  BRA         EMPTYLINE
000017C4                           831                  
000017C4  B83C 0000                832  BACKSPACEINPUT  CMP.B       #$0, D4             *Check if starting address or not
000017C8  6700 0006                833                  BEQ         BACKSTART
000017CC                           834                  
000017CC  6700 000C                835                  BEQ         BACKEND
000017D0                           836                  
000017D0  E882                     837  BACKSTART       ASR.L       #$4, D2             *Shift to right
000017D2  5385                     838                  SUB.L       #$1, D5             *Subtract size
000017D4                           839                  *SUBA.L       #$1, A5
000017D4                           840  
000017D4  538D                     841                  SUBA.L       #$1, A5
000017D6                           842                  
000017D6  6000 FF58                843                  BRA         INPUTLOOP
000017DA                           844                  
000017DA  BC3C 0000                845  BACKEND         CMP.B       #$0, D6
000017DE  6700 000A                846                  BEQ         BACKCOMMA
000017E2                           847                  
000017E2  E883                     848                  ASR.L       #$4, D3             *Shift to right
000017E4  5386                     849                  SUB.L       #$1, D6             *Subtract size
000017E6                           850                  
000017E6  6000 FF48                851                  BRA         INPUTLOOP
000017EA                           852                  
000017EA  7800                     853  BACKCOMMA       MOVE.L      #$0, D4
000017EC  6000 FF42                854                  BRA         INPUTLOOP
000017F0                           855          
000017F0  B83C 0000                856  DOREST          CMP.B       #$0, D4             *Check if it's starting or ending
000017F4  6700 0006                857                  BEQ         STARTINGADDRESS     *If yes, it's part of starting address
000017F8                           858                  
000017F8  6000 000E                859                  BRA         ENDINGADDRESS       *If not, it's part of ending address
000017FC                           860                  
000017FC  E982                     861  STARTINGADDRESS ASL.L       #$4, D2             *Shift to left
000017FE  D481                     862                  ADD.L       D1, D2              *Add the number to D2
00001800  5285                     863                  ADD.L       #$1, D5             *Add count in D5
00001802                           864  
00001802                           865                  *ADDA.L      #$1, A5             *Add to A5 as well
00001802                           866  
00001802  528D                     867                  ADDA.L      #$1, A5             *Add to A5 as well
00001804                           868      
00001804  6000 FF2A                869                  BRA         INPUTLOOP           *Go back to the input loop
00001808                           870                  
00001808  E983                     871  ENDINGADDRESS   ASL.L       #$4, D3             *Shift to left
0000180A  D681                     872                  ADD.L       D1, D3              *Add the number to D3
0000180C  5286                     873                  ADD.L       #$1, D6             *Add count in D6
0000180E                           874  
0000180E  528D                     875                  ADDA.L      #$1, A5
00001810                           876  
00001810                           877          
00001810  6000 FF1E                878                  BRA         INPUTLOOP           *Go back to the input loop
00001814                           879              
00001814  43F9 00003562            880  EMPTYLINE       LEA         EMPTYLINEMESSAGE, A1  *Empty line
0000181A  103C 000D                881                  MOVE.B      #13, D0
0000181E  4E4F                     882                  TRAP        #15
00001820                           883                  
00001820  4E75                     884                  RTS
00001822                           885  
00001822                           886  *----------------------------------------------------------------------------------------------------
00001822                           887  *                                           Subroutine: OUTPUTEND
00001822                           888  *Description: Handles what happens when the dissassembler is done
00001822                           889  *----------------------------------------------------------------------------------------------------
00001822                           890  
00001822  43F9 00003699            891  OUTPUTEND       LEA         ENDMESSAGE, A1
00001828  103C 000D                892                  MOVE.B      #13, D0
0000182C  4E4F                     893                  TRAP        #15
0000182E                           894  
0000182E                           895                  
0000182E                           896     
0000182E                           897          
0000182E                           898  
0000182E                           899  ENDLOOP    
0000182E  103C 0005                900                  MOVE.B #5, D0
00001832  4E4F                     901                  TRAP #15
00001834  B23C 006E                902                  CMP.B #$6E,D1
00001838                           903                  
00001838  6700 0020                904                  BEQ DONE
0000183C                           905                  
0000183C  B23C 0079                906                  CMP.B #$79,D1                
00001840  6700 0004                907                  BEQ TESTNEWRANGE                
00001844  60E8                     908                  BRA ENDLOOP
00001846                           909  TESTNEWRANGE    
00001846                           910                  *start next line on a new line
00001846  103C 000E                911                  MOVE.B #14,D0   
0000184A  43F9 00003563            912                  LEA NEWLINE,A1
00001850  4E4F                     913                  TRAP #15          
00001852                           914                  
00001852                           915                  *zero out memory 
00001852  4EB8 1174                916                  JSR CLEARALL      
00001856                           917                  
00001856                           918                  *start program over          
00001856  6000 F7A8                919                  BRA START
0000185A                           920  
0000185A  FFFF FFFF                921  DONE SIMHALT   
0000185E                           922  
0000185E                           923  
0000185E                           924  *----------------------------------------------------------------------------------------------------*                                           
0000185E                           925  *Subroutine: PRINTADDRESS
0000185E                           926  *Description: Prints the current address the disassembler is on
0000185E                           927  *----------------------------------------------------------------------------------------------------
0000185E                           928  
0000185E  2408                     929  PRINTADDRESS    MOVE.L      A0, D2              *Move current address to D2
00001860  2A0D                     930                  MOVE.L      A5, D5              *Move address size
00001862                           931                  *ADD.L       #$1, D5             *Add 1 to size
00001862  BABC 00000004            932                  CMP.L       #$4, D5             *Check if the length is >4
00001868  6E00 0010                933                  BGT         PRINTLONGADDRESS    *If yes, it's a long address
0000186C                           934  
0000186C  BABC 00000002            935                  CMP.L       #$2, D5             *Check if the length is >2
00001872  6E00 0038                936                  BGT         PRINTWORDADDRESS    *If yes, it's a word address
00001876                           937                  
00001876  6000 0064                938                  BRA         PRINTBYTEADDRESS    *If not, it's a byte address
0000187A                           939                  
0000187A  7E08                     940  PRINTLONGADDRESS    MOVE.L  #$8, D7
0000187C  9E85                     941                      SUB.L   D5, D7
0000187E  CFFC 0004                942                      MULS.W  #$4, D7
00001882  EFBA                     943                      ROL.L   D7, D2
00001884  E99A                     944  PLAL                ROL.L   #$4, D2             *Shift by 4 bits
00001886  2E02                     945                      MOVE.L  D2, D7              *Move to D7 for backup
00001888  C4BC 0000000F            946                      AND.L   #$F, D2             *Isolate first byte
0000188E  1202                     947                      MOVE.B  D2, D1              *Move byte to D1
00001890  2407                     948                      MOVE.L  D7, D2              *Move original back to D2
00001892  C4BC FFFFFFF0            949                      AND.L   #$FFFFFFF0, D2      *Remove first 4 bits
00001898  5305                     950                      SUB.B   #$1, D5             *Subtract 1 from length of address
0000189A                           951                      
0000189A  4EB9 0000191A            952                      JSR     COMPAREADDRESS        *Print the address
000018A0                           953                      
000018A0  BABC 00000000            954                      CMP.L   #$0, D5             *Check if the address length is 0
000018A6  66DC                     955                      BNE     PLAL                *If not, then loop again
000018A8                           956                      
000018A8  6000 0062                957                      BRA     PRINTSPACE          *If yes, then stop and print empty line
000018AC                           958                      
000018AC  7E04                     959  PRINTWORDADDRESS    MOVE.L  #$4, D7
000018AE  9E45                     960                      SUB.W   D5, D7
000018B0  CFFC 0004                961                      MULS.W  #$4, D7
000018B4  EF7A                     962                      ROL.W   D7, D2
000018B6  E95A                     963  PWAL                ROL.W   #$4, D2             *Shift by 4 bits
000018B8  2E02                     964                      MOVE.L  D2, D7              *Move to D7 for backup
000018BA  C4BC 0000000F            965                      AND.L   #$F, D2             *Isolate first byte
000018C0  1202                     966                      MOVE.B  D2, D1              *Move byte to D1
000018C2  2407                     967                      MOVE.L  D7, D2              *Move original back to D2
000018C4  C4BC FFFFFFF0            968                      AND.L   #$FFFFFFF0, D2      *Remove first 4 bits
000018CA  5305                     969                      SUB.B   #$1, D5             *Subtract 1 from length of address
000018CC                           970                      
000018CC  4EB9 0000191A            971                      JSR     COMPAREADDRESS        *Print the address
000018D2                           972                      
000018D2  BA7C 0000                973                      CMP.W   #$0, D5             *Check if the address length is 0
000018D6  66DE                     974                      BNE     PWAL                *If not, then loop again
000018D8                           975                      
000018D8  6000 0032                976                      BRA     PRINTSPACE          *If yes, then stop and print empty line
000018DC                           977                      
000018DC  7E02                     978  PRINTBYTEADDRESS    MOVE.L  #$2, D7
000018DE  9E45                     979                      SUB.W   D5, D7
000018E0  CFFC 0004                980                      MULS.W  #$4, D7
000018E4  EF3A                     981                      ROL.B   D7, D2
000018E6  E91A                     982  PBAL                ROL.B   #$4, D2             *Shift by 4 bits
000018E8  2E02                     983                      MOVE.L  D2, D7              *Move to D7 for backup
000018EA  C4BC 0000000F            984                      AND.L   #$F, D2             *Isolate first byte
000018F0  1202                     985                      MOVE.B  D2, D1              *Move byte to D1
000018F2  2407                     986                      MOVE.L  D7, D2              *Move original back to D2
000018F4  C4BC FFFFFFF0            987                      AND.L   #$FFFFFFF0, D2      *Remove first 4 bits
000018FA  5305                     988                      SUB.B   #$1, D5             *Subtract 1 from length of address
000018FC                           989                      
000018FC  4EB9 0000191A            990                      JSR     COMPAREADDRESS        *Print the address
00001902                           991                      
00001902  BA3C 0000                992                      CMP.B   #$0, D5             *Check if the address length is 0
00001906  66DE                     993                      BNE     PBAL                *If not, then loop again
00001908                           994                      
00001908  6000 0002                995                      BRA     PRINTSPACE          *If yes, then stop and print empty line
0000190C                           996                      
0000190C  43F9 000036D9            997  PRINTSPACE          LEA     SPACEMESSAGE, A1    *Display space
00001912  103C 000E                998                      MOVE.B  #14, D0
00001916  4E4F                     999                      TRAP    #15
00001918                          1000                      
00001918  4E75                    1001                      RTS
0000191A                          1002                      
0000191A  B23C 0000               1003  COMPAREADDRESS      CMP.B   #$0, D1             *Check if 0
0000191E  6700 007A               1004                      BEQ     NUMBERZERO
00001922                          1005                      
00001922  B23C 0001               1006                      CMP.B   #$1, D1             *etc
00001926  6700 007C               1007                      BEQ     NUMBERONE
0000192A                          1008                      
0000192A  B23C 0002               1009                      CMP.B   #$2, D1
0000192E  6700 007E               1010                      BEQ     NUMBERTWO
00001932                          1011                      
00001932  B23C 0003               1012                      CMP.B   #$3, D1
00001936  6700 0080               1013                      BEQ     NUMBERTHREE
0000193A                          1014                      
0000193A  B23C 0004               1015                      CMP.B   #$4, D1
0000193E  6700 0082               1016                      BEQ     NUMBERFOUR
00001942                          1017                      
00001942  B23C 0005               1018                      CMP.B   #$5, D1
00001946  6700 0084               1019                      BEQ     NUMBERFIVE
0000194A                          1020                      
0000194A  B23C 0006               1021                      CMP.B   #$6, D1
0000194E  6700 0086               1022                      BEQ     NUMBERSIX
00001952                          1023                      
00001952  B23C 0007               1024                      CMP.B   #$7, D1
00001956  6700 0088               1025                      BEQ     NUMBERSEVEN
0000195A                          1026                      
0000195A  B23C 0008               1027                      CMP.B   #$8, D1
0000195E  6700 008A               1028                      BEQ     NUMBEREIGHT
00001962                          1029                      
00001962  B23C 0009               1030                      CMP.B   #$9, D1
00001966  6700 008C               1031                      BEQ     NUMBERNINE
0000196A                          1032                      
0000196A  B23C 000A               1033                      CMP.B   #$A, D1
0000196E  6700 008E               1034                      BEQ     NUMBERA
00001972                          1035                      
00001972  B23C 000B               1036                      CMP.B   #$B, D1
00001976  6700 0090               1037                      BEQ     NUMBERB
0000197A                          1038                      
0000197A  B23C 000C               1039                      CMP.B   #$C, D1
0000197E  6700 0092               1040                      BEQ     NUMBERC
00001982                          1041                      
00001982  B23C 000D               1042                      CMP.B   #$D, D1
00001986  6700 0094               1043                      BEQ     NUMBERD
0000198A                          1044                      
0000198A  B23C 000E               1045                      CMP.B   #$E, D1
0000198E  6700 0096               1046                      BEQ     NUMBERE
00001992                          1047                      
00001992  B23C 000F               1048                      CMP.B   #$F, D1
00001996  6700 0098               1049                      BEQ     NUMBERF
0000199A                          1050  
0000199A  43F9 000036F3           1051  NUMBERZERO          LEA     ZEROMESSAGE, A1
000019A0  6000 0098               1052                      BRA     SHOWADDRESS
000019A4                          1053                      
000019A4  43F9 000036F5           1054  NUMBERONE           LEA     ONEMESSAGE, A1
000019AA  6000 008E               1055                      BRA     SHOWADDRESS
000019AE                          1056                      
000019AE  43F9 000036F7           1057  NUMBERTWO           LEA     TWOMESSAGE, A1
000019B4  6000 0084               1058                      BRA     SHOWADDRESS
000019B8                          1059                      
000019B8  43F9 000036F9           1060  NUMBERTHREE         LEA     THREEMESSAGE, A1
000019BE  6000 007A               1061                      BRA     SHOWADDRESS
000019C2                          1062                      
000019C2  43F9 000036FB           1063  NUMBERFOUR          LEA     FOURMESSAGE, A1
000019C8  6000 0070               1064                      BRA     SHOWADDRESS
000019CC                          1065                      
000019CC  43F9 000036FD           1066  NUMBERFIVE          LEA     FIVEMESSAGE, A1
000019D2  6000 0066               1067                      BRA     SHOWADDRESS
000019D6                          1068                      
000019D6  43F9 000036FF           1069  NUMBERSIX           LEA     SIXMESSAGE, A1
000019DC  6000 005C               1070                      BRA     SHOWADDRESS
000019E0                          1071                      
000019E0  43F9 00003701           1072  NUMBERSEVEN         LEA     SEVENMESSAGE, A1
000019E6  6000 0052               1073                      BRA     SHOWADDRESS
000019EA                          1074                      
000019EA  43F9 00003703           1075  NUMBEREIGHT         LEA     EIGHTMESSAGE, A1
000019F0  6000 0048               1076                      BRA     SHOWADDRESS
000019F4                          1077                      
000019F4  43F9 00003705           1078  NUMBERNINE          LEA     NINEMESSAGE, A1
000019FA  6000 003E               1079                      BRA     SHOWADDRESS
000019FE                          1080                      
000019FE  43F9 00003707           1081  NUMBERA             LEA     AMESSAGE, A1
00001A04  6000 0034               1082                      BRA     SHOWADDRESS
00001A08                          1083                      
00001A08  43F9 00003709           1084  NUMBERB             LEA     BMESSAGE, A1
00001A0E  6000 002A               1085                      BRA     SHOWADDRESS
00001A12                          1086                      
00001A12  43F9 0000370B           1087  NUMBERC             LEA     CMESSAGE, A1
00001A18  6000 0020               1088                      BRA     SHOWADDRESS
00001A1C                          1089                      
00001A1C  43F9 0000370D           1090  NUMBERD             LEA     DMESSAGE, A1
00001A22  6000 0016               1091                      BRA     SHOWADDRESS
00001A26                          1092                      
00001A26  43F9 0000370F           1093  NUMBERE             LEA     EMESSAGE, A1
00001A2C  6000 000C               1094                      BRA     SHOWADDRESS
00001A30                          1095                      
00001A30  43F9 00003711           1096  NUMBERF             LEA     FMESSAGE, A1
00001A36  6000 0002               1097                      BRA     SHOWADDRESS
00001A3A                          1098                      
00001A3A                          1099                      
00001A3A  103C 000E               1100  SHOWADDRESS         MOVE.B  #14, D0             *Show number
00001A3E  4E4F                    1101                      TRAP    #15
00001A40                          1102                      
00001A40  4E75                    1103                      RTS                         *Go back
00001A42                          1104                      
00001A42                          1105                      
00001A42                          1106                                     
00001A42                          1107  
00001A42                          1108  *----------------------------------------------------------------------------------------------------
00001A42                          1109  *                                           Subroutine: CHECK1100
00001A42                          1110  *Description: Checks if opcode word starts with the binary 1100. If true it checks if it is AND or MULS
00001A42                          1111  *----------------------------------------------------------------------------------------------------
00001A42  C27C F000               1112  CHECK1100       AND.W   #$F000, D1      *Isolates the first 4 spaces
00001A46  B27C C000               1113                  CMP.W   #$C000, D1      *Checks if the first 4 spaces are 1100
00001A4A                          1114                  
00001A4A  6700 0004               1115                  BEQ     CHECKANDMULS    *If equal, then go check if it's AND or MULS
00001A4E                          1116                  
00001A4E  4E75                    1117                  RTS
00001A50                          1118              
00001A50  3200                    1119  CHECKANDMULS    MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001A52  C27C 01C0               1120                  AND.W   #$1C0, D1       *Isolate spaces 8 to 6
00001A56  B27C 01C0               1121                  CMP.W   #$1C0, D1       *Check if spaces 8 to 6 are 111
00001A5A                          1122                  
00001A5A  6700 0048               1123                  BEQ     OPMULS          *If yes, then it's MULS
00001A5E                          1124                      
00001A5E  6000 0002               1125                  BRA     OPAND          *If not, then it's AND
00001A62  43F9 00003593           1126  OPAND           LEA     ANDMESSAGE, A1  *Store the AND message
00001A68  183C 0013               1127                  MOVE.B  #$13, D4
00001A6C                          1128                  
00001A6C  3200                    1129                  MOVE.W  D0, D1
00001A6E  C27C 01C0               1130                  AND.W   #$1C0, D1       *Isolate OPMODE part
00001A72  B27C 0000               1131                  CMP.W   #$0, D1         *If OPMODE 000
00001A76  6700 0652               1132                  BEQ     SIZEB           *If yes, it's byte 
00001A7A                          1133                  
00001A7A  B27C 0100               1134                  CMP.W   #$100, D1       *If OPMODE 100
00001A7E  6700 064A               1135                  BEQ     SIZEB           *If yes, it's byte
00001A82                          1136                  
00001A82  B27C 0040               1137                  CMP.W   #$40, D1        *If OPMODE 001
00001A86  6700 0648               1138                  BEQ     SIZEW           *If yes, it's word
00001A8A                          1139                  
00001A8A  B27C 0140               1140                  CMP.W   #$140, D1       *If OPMODE 101
00001A8E  6700 0640               1141                  BEQ     SIZEW           *If yes, it's word
00001A92                          1142                  
00001A92  B27C 0080               1143                  CMP.W   #$80, D1        *If OPMODE 010
00001A96  6700 063E               1144                  BEQ     SIZEL           *If yes, it's long
00001A9A                          1145                  
00001A9A  B27C 0180               1146                  CMP.W   #$180, D1       *If OPMODE 110
00001A9E  6700 0636               1147                  BEQ     SIZEL           *If yes, it's long
00001AA2                          1148                  
00001AA2  4E75                    1149                  RTS   
00001AA4                          1150                  
00001AA4  43F9 00003597           1151  OPMULS          LEA     MULSMESSAGE, A1 *Store the MULS message
00001AAA  183C 0009               1152                  MOVE.B  #$9, D4
00001AAE                          1153                  
00001AAE  6000 0620               1154                  BRA     SIZEW           *It's always a word
00001AB2                          1155                  
00001AB2  4E75                    1156                  RTS
00001AB4                          1157  *---------------------------------------------END_CHECK1100-----------------------------------------------------
00001AB4                          1158  
00001AB4                          1159  
00001AB4                          1160  
00001AB4                          1161  
00001AB4                          1162  *----------------------------------------------------------------------------------------------------
00001AB4                          1163  *                                                Subroutine: CHECK0000
00001AB4                          1164  *Description: Checks if opcode word starts with the binary 0000. If true it idendifies if it is ANDI, ADDI, BCHG,CMPI or MOVE
00001AB4                          1165  *----------------------------------------------------------------------------------------------------
00001AB4  3200                    1166  CHECK0000       MOVE.W D0,D1      
00001AB6  C27C F000               1167                  AND.W   #$F000, D1      *Isolates the first 4 spaces
00001ABA  B27C 0000               1168                  CMP.W   #$0000, D1      *Checks if the first 4 spaces are 0000
00001ABE                          1169                  
00001ABE  6700 0010               1170                  BEQ     CHECKAABC       *If equal, then go check if it's ANDI, ADDI, BCHG and CMPI
00001AC2                          1171                  
00001AC2  C27C C000               1172                  AND.W   #$C000, D1      *Isolate the first 2 spaces
00001AC6  B27C 0000               1173                  CMP.W   #$0000, D1      *Check if the first 2 spaces are 00
00001ACA                          1174                  
00001ACA  6700 0044               1175                  BEQ     OPMOVE          *If true, it's MOVE
00001ACE                          1176                  
00001ACE  4E75                    1177                  RTS
00001AD0                          1178              
00001AD0  3200                    1179  CHECKAABC       MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001AD2  C27C 0100               1180                  AND.W   #$100, D1       *Isolate space 8
00001AD6  B27C 0100               1181                  CMP.W   #$100, D1       *Check if space 8 is 1
00001ADA                          1182                  
00001ADA  6700 0062               1183                  BEQ     OPBCHGR         *If yes, then it's BCHG (register)
00001ADE                          1184                  
00001ADE  3200                    1185                  MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001AE0  C27C 0800               1186                  AND.W   #$800, D1       *Isolate space 11
00001AE4  B27C 0800               1187                  CMP.W   #$800, D1       *Check if space 11 is 1
00001AE8                          1188                  
00001AE8  6700 0014               1189                  BEQ     CHECKCBD        *If yes, then check if CMPI or BCHG (data)
00001AEC                          1190                  
00001AEC  3200                    1191                  MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001AEE  C27C 0400               1192                  AND.W   #$400, D1       *Isolate space 10
00001AF2  B27C 0400               1193                  CMP.W   #$400, D1       *Check if space 10 is 1
00001AF6                          1194                  
00001AF6  6700 0090               1195                  BEQ     OPADDI          *If true, then it's ADDI
00001AFA                          1196                  
00001AFA  6000 00B6               1197                  BRA     OPANDI          *If not, then it's ANDI
00001AFE                          1198                  
00001AFE  3200                    1199  CHECKCBD        MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001B00  C27C 0400               1200                  AND.W   #$400, D1       *Isolate space 10
00001B04  B27C 0400               1201                  CMP.W   #$400, D1       *Check if space 10 is 1
00001B08                          1202  
00001B08  6700 0054               1203                  BEQ     OPCMPI          *If yes, then it's CMPI
00001B0C                          1204  
00001B0C  6000 0040               1205                  BRA     OPBCHGD         *If not, then it's BCHG (data)
00001B10                          1206  
00001B10  43F9 0000359C           1207  OPMOVE          LEA     MOVEMESSAGE, A1 *Store the MOVE message
00001B16  183C 0001               1208                  MOVE.B  #$1, D4
00001B1A  1E3C 0001               1209                  MOVE.B  #$1, D7
00001B1E                          1210                  
00001B1E  3200                    1211                  MOVE.W  D0, D1
00001B20  C27C 3000               1212                  AND.W   #$3000, D1      *Isolate SIZE
00001B24                          1213                  
00001B24  B27C 1000               1214                  CMP.W   #$1000, D1      *Check if size is 01
00001B28  6700 05A0               1215                  BEQ     SIZEB           *If yes, it's a byte
00001B2C                          1216                  
00001B2C  B27C 3000               1217                  CMP.W   #$3000, D1      *Check if size is 11
00001B30  6700 059E               1218                  BEQ     SIZEW           *If yes, it's a word
00001B34                          1219                  
00001B34  B27C 2000               1220                  CMP.W   #$2000, D1      *Check if size is 10
00001B38  6700 059C               1221                  BEQ     SIZEL           *If yes, it's a long
00001B3C                          1222                  
00001B3C  4E75                    1223                  RTS
00001B3E                          1224  
00001B3E  43F9 000035A1           1225  OPBCHGR         LEA     BCHGMESSAGE, A1 *Store the BCHG message
00001B44  183C 0018               1226                  MOVE.B  #$18, D4
00001B48                          1227                  
00001B48  6000 0580               1228                  BRA     SIZEB           *When it's register, it's always byte
00001B4C                          1229                  
00001B4C  4E75                    1230                  RTS
00001B4E                          1231                  
00001B4E  43F9 000035A1           1232  OPBCHGD         LEA     BCHGMESSAGE, A1 *Store the BCHG message
00001B54  183C 0024               1233                  MOVE.B  #$24, D4
00001B58                          1234                  
00001B58  6000 057C               1235                  BRA     SIZEL           *When data, it's always long
00001B5C                          1236                  
00001B5C  4E75                    1237                  RTS
00001B5E                          1238                  
00001B5E  43F9 000035A6           1239  OPCMPI          LEA     CMPIMESSAGE, A1 *Store the CMPI message
00001B64  183C 0020               1240                  MOVE.B  #$20, D4
00001B68                          1241                  
00001B68  3200                    1242                  MOVE.W  D0, D1
00001B6A  C27C 00C0               1243                  AND.W   #$C0, D1      *Isolate SIZE
00001B6E                          1244                  
00001B6E  B27C 0000               1245                  CMP.W   #$0, D1         *Check if size is 00
00001B72  6700 0556               1246                  BEQ     SIZEB        *If yes, it's a byte
00001B76                          1247                  
00001B76  B27C 0040               1248                  CMP.W   #$40, D1      *Check if size is 01
00001B7A  6700 0554               1249                  BEQ     SIZEW         *If yes, it's a word
00001B7E                          1250                  
00001B7E  B27C 0080               1251                  CMP.W   #$80, D1      *Check if size is 10
00001B82  6700 0552               1252                  BEQ     SIZEL         *If yes, it's a long
00001B86                          1253                  
00001B86  4E75                    1254                  RTS
00001B88                          1255                  
00001B88  43F9 000035AB           1256  OPADDI          LEA     ADDIMESSAGE, A1 *Store the ADDI message
00001B8E  183C 0006               1257                  MOVE.B  #$6, D4
00001B92                          1258                  
00001B92  3200                    1259                  MOVE.W  D0, D1
00001B94  C27C 00C0               1260                  AND.W   #$C0, D1      *Isolate SIZE
00001B98                          1261                  
00001B98  B27C 0000               1262                  CMP.W   #$0, D1         *Check if size is 00
00001B9C  6700 052C               1263                  BEQ     SIZEB        *If yes, it's a byte
00001BA0                          1264                  
00001BA0  B27C 0040               1265                  CMP.W   #$40, D1      *Check if size is 01
00001BA4  6700 052A               1266                  BEQ     SIZEW         *If yes, it's a word
00001BA8                          1267                  
00001BA8  B27C 0080               1268                  CMP.W   #$80, D1      *Check if size is 10
00001BAC  6700 0528               1269                  BEQ     SIZEL         *If yes, it's a long
00001BB0                          1270                  
00001BB0  4E75                    1271                  RTS
00001BB2                          1272                  
00001BB2  43F9 000035B0           1273  OPANDI          LEA     ANDIMESSAGE, A1 *Store the ANDI message
00001BB8  183C 0014               1274                  MOVE.B  #$14, D4
00001BBC                          1275                  
00001BBC  3200                    1276                  MOVE.W  D0, D1
00001BBE  C27C 00C0               1277                  AND.W   #$C0, D1      *Isolate SIZE
00001BC2                          1278                  
00001BC2  B27C 0000               1279                  CMP.W   #$0, D1         *Check if size is 00
00001BC6  6700 0502               1280                  BEQ     SIZEB        *If yes, it's a byte
00001BCA                          1281                  
00001BCA  B27C 0040               1282                  CMP.W   #$40, D1      *Check if size is 01
00001BCE  6700 0500               1283                  BEQ     SIZEW         *If yes, it's a word
00001BD2                          1284                  
00001BD2  B27C 0080               1285                  CMP.W   #$80, D1      *Check if size is 10
00001BD6  6700 04FE               1286                  BEQ     SIZEL         *If yes, it's a long
00001BDA                          1287                  
00001BDA  4E75                    1288                  RTS
00001BDC                          1289  
00001BDC                          1290  *---------------------------------------END_CHECK0000--------------------------------------------------------
00001BDC                          1291  
00001BDC                          1292  *-----------------------------------------------------------------------------------------------------
00001BDC                          1293  *                                            Subroutine: CHECK1110
00001BDC                          1294  *Description: Checks if opcode word starts with the binary 1110. If true it identifies if it is LSR/LSL,ASR/ASL,ROR/ROL
00001BDC                          1295  *----------------------------------------------------------------------------------------------------
00001BDC  3200                    1296  CHECK1110       MOVE.W  D0, D1
00001BDE  C27C F000               1297                  AND.W   #$F000, D1      *Isolates the first 4 spaces
00001BE2  B27C E000               1298                  CMP.W   #$E000, D1      *Checks if the first 4 spaces are 1110
00001BE6                          1299                  
00001BE6  6700 0004               1300                  BEQ     CHECKLAR        *If true, then it's LSR, ASR or ROR (and left versions)
00001BEA                          1301                  
00001BEA  4E75                    1302                  RTS
00001BEC                          1303                  
00001BEC  3200                    1304  CHECKLAR        MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001BEE  C27C 00C0               1305                  AND.W   #$C0, D1        *Isolate spaces 7-6
00001BF2  B27C 00C0               1306                  CMP.W   #$C0, D1        *Check if spaces 7-6 are 11
00001BF6                          1307                  
00001BF6  6700 0006               1308                  BEQ     CHECKLARM       *If true, then it's LSR, ASR or ROR (memory shift)
00001BFA                          1309                  
00001BFA  6000 0020               1310                  BRA     CHECKLARR       *If not, then it's LRS, ASR or ROR (register shift)
00001BFE                          1311                  
00001BFE  3200                    1312  CHECKLARM       MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001C00  C27C 0600               1313                  AND.W   #$600, D1       *Isolate spaces 10-9
00001C04  B27C 0200               1314                  CMP.W   #$200, D1       *Check if spaces 10-9 are 01
00001C08                          1315                  
00001C08  6700 0030               1316                  BEQ     CHECKLSM        *If true, it's LS (memory)
00001C0C                          1317                  
00001C0C  B27C 0000               1318                  CMP.W   #$0000, D1      *Check if spaces 10-9 are 00
00001C10                          1319                  
00001C10  6700 003A               1320                  BEQ     CHECKASM        *If true, it's AS (memory)
00001C14                          1321                  
00001C14  B27C 0600               1322                  CMP.W   #$600, D1       *Check if spaces 10-9 are 11
00001C18                          1323                  
00001C18  6700 0044               1324                  BEQ     CHECKROM        *If true, it's RO (memory)
00001C1C                          1325                  
00001C1C  3200                    1326  CHECKLARR       MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001C1E  C27C 0018               1327                  AND.W   #$18, D1        *Isolate spaces 4-3
00001C22  B27C 0008               1328                  CMP.W   #$8, D1         *Check if spaces 4-3 are 01
00001C26                          1329                  
00001C26  6700 0048               1330                  BEQ     CHECKLSRE       *If true, it's LS (register)
00001C2A                          1331                  
00001C2A  B27C 0000               1332                  CMP.W   #$0000, D1      *Check if spaces 4-3 are 00
00001C2E                          1333                  
00001C2E  6700 0052               1334                  BEQ     CHECKASRE       *If true, it's AS (register)
00001C32                          1335                  
00001C32  B27C 0018               1336                  CMP.W   #$18, D1        *Check if spaces 4-3 are 11
00001C36                          1337                  
00001C36  6700 005C               1338                  BEQ     CHECKRORE       *If true, it's RO (register)
00001C3A                          1339                  
00001C3A  3200                    1340  CHECKLSM        MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001C3C  C27C 0100               1341                  AND.W   #$100, D1       *Isolate space 8 
00001C40  B27C 0100               1342                  CMP.W   #$100, D1       *Check if space 8 is 1
00001C44                          1343                  
00001C44  6700 0060               1344                  BEQ     OPLSLM          *If true, it's LSL (memory)
00001C48                          1345                  
00001C48  6000 0096               1346                  BRA     OPLSRM          *If not, it's LSR (memory)
00001C4C                          1347                  
00001C4C  3200                    1348  CHECKASM        MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001C4E  C27C 0100               1349                  AND.W   #$100, D1       *Isolate space 8 
00001C52  B27C 0100               1350                  CMP.W   #$100, D1       *Check if space 8 is 1
00001C56                          1351                  
00001C56  6700 00C2               1352                  BEQ     OPASLM          *If true, it's ASL (memory)
00001C5A                          1353                  
00001C5A  6000 00DA               1354                  BRA     OPASRM          *If not, it's ASR (memory)
00001C5E                          1355                  
00001C5E  3200                    1356  CHECKROM        MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001C60  C27C 0100               1357                  AND.W   #$100, D1       *Isolate space 8 
00001C64  B27C 0100               1358                  CMP.W   #$100, D1       *Check if space 8 is 1
00001C68                          1359                  
00001C68  6700 0106               1360                  BEQ     OPROLM          *If true, it's ROL (memory)
00001C6C                          1361                  
00001C6C  6000 013C               1362                  BRA     OPRORM          *If not, it's ROR (memory)
00001C70                          1363                  
00001C70  3200                    1364  CHECKLSRE       MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001C72  C27C 0100               1365                  AND.W   #$100, D1       *Isolate space 8 
00001C76  B27C 0100               1366                  CMP.W   #$100, D1       *Check if space 8 is 1
00001C7A                          1367                  
00001C7A  6700 003A               1368                  BEQ     OPLSLR          *If true, it's LSL (register)
00001C7E                          1369                  
00001C7E  6000 0070               1370                  BRA     OPLSRR          *If not, it's LSR (register)
00001C82                          1371                  
00001C82  3200                    1372  CHECKASRE       MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001C84  C27C 0100               1373                  AND.W   #$100, D1       *Isolate space 8 
00001C88  B27C 0100               1374                  CMP.W   #$100, D1       *Check if space 8 is 1
00001C8C                          1375                  
00001C8C  6700 009C               1376                  BEQ     OPASLR          *If true, it's ASL (register)
00001C90                          1377                  
00001C90  6000 00B4               1378                  BRA     OPASRR          *If not, it's ASR (register)
00001C94                          1379                  
00001C94  3200                    1380  CHECKRORE       MOVE.W  D0, D1          *Move the original opcode to D1 since we need original
00001C96  C27C 0100               1381                  AND.W   #$100, D1       *Isolate space 8 
00001C9A  B27C 0100               1382                  CMP.W   #$100, D1       *Check if space 8 is 1
00001C9E                          1383                  
00001C9E  6700 00E0               1384                  BEQ     OPROLR          *If true, it's ROL (register)
00001CA2                          1385                  
00001CA2  6000 0116               1386                  BRA     OPRORR          *If not, it's ROR (register)
00001CA6                          1387                  
00001CA6  43F9 000035D7           1388  OPLSLM          LEA     LSLMESSAGE, A1 *Store the LSL (memory) message
00001CAC  183C 0025               1389                  MOVE.B  #$25, D4
00001CB0                          1390                  
00001CB0  6000 041E               1391                  BRA     SIZEW           *It's always a word when memory
00001CB4                          1392                  
00001CB4  4E75                    1393                  RTS
00001CB6                          1394                  
00001CB6  43F9 000035D7           1395  OPLSLR          LEA     LSLMESSAGE, A1 *Store the LSL (register) message
00001CBC  183C 0015               1396                  MOVE.B  #$15, D4
00001CC0                          1397                  
00001CC0  3200                    1398                  MOVE.W  D0, D1
00001CC2  C27C 00C0               1399                  AND.W   #$C0, D1      *Isolate SIZE
00001CC6                          1400                  
00001CC6  B27C 0000               1401                  CMP.W   #$0, D1         *Check if size is 00
00001CCA  6700 03FE               1402                  BEQ     SIZEB        *If yes, it's a byte
00001CCE                          1403                  
00001CCE  B27C 0040               1404                  CMP.W   #$40, D1      *Check if size is 01
00001CD2  6700 03FC               1405                  BEQ     SIZEW         *If yes, it's a word
00001CD6                          1406                  
00001CD6  B27C 0080               1407                  CMP.W   #$80, D1      *Check if size is 10
00001CDA  6700 03FA               1408                  BEQ     SIZEL         *If yes, it's a long
00001CDE                          1409                  
00001CDE  4E75                    1410                  RTS
00001CE0                          1411                  
00001CE0  43F9 000035DB           1412  OPLSRM          LEA     LSRMESSAGE, A1 *Store the LSR (memory) message
00001CE6  183C 0025               1413                  MOVE.B  #$25, D4
00001CEA                          1414                  
00001CEA  6000 03E4               1415                  BRA     SIZEW           *It's always a word when memory
00001CEE                          1416                  
00001CEE  4E75                    1417                  RTS
00001CF0                          1418                  
00001CF0  43F9 000035DB           1419  OPLSRR          LEA     LSRMESSAGE, A1 *Store the LSR (register) message
00001CF6  183C 0015               1420                  MOVE.B  #$15, D4
00001CFA                          1421                  
00001CFA  3200                    1422                  MOVE.W  D0, D1
00001CFC  C27C 00C0               1423                  AND.W   #$C0, D1      *Isolate SIZE
00001D00                          1424                  
00001D00  B27C 0000               1425                  CMP.W   #$0, D1         *Check if size is 00
00001D04  6700 03C4               1426                  BEQ     SIZEB        *If yes, it's a byte
00001D08                          1427                  
00001D08  B27C 0040               1428                  CMP.W   #$40, D1      *Check if size is 01
00001D0C  6700 03C2               1429                  BEQ     SIZEW         *If yes, it's a word
00001D10                          1430                  
00001D10  B27C 0080               1431                  CMP.W   #$80, D1      *Check if size is 10
00001D14  6700 03C0               1432                  BEQ     SIZEL         *If yes, it's a long
00001D18                          1433                  
00001D18  4E75                    1434                  RTS
00001D1A                          1435  
00001D1A  43F9 000035D3           1436  OPASLM          LEA     ASLMESSAGE, A1 *Store the ASL (memory) message
00001D20  183C 0026               1437                  MOVE.B  #$26, D4
00001D24                          1438                  
00001D24  6000 03AA               1439                  BRA     SIZEW           *It's always a word when memory
00001D28                          1440                  
00001D28  4E75                    1441                  RTS
00001D2A                          1442  
00001D2A  43F9 000035D3           1443  OPASLR          LEA     ASLMESSAGE, A1 *Store the ASL (register) message
00001D30  183C 0016               1444                  MOVE.B  #$16, D4
00001D34  4E75                    1445                  RTS
00001D36                          1446  
00001D36  43F9 000035CF           1447  OPASRM          LEA     ASRMESSAGE, A1 *Store the ASR (memory) message
00001D3C  183C 0026               1448                  MOVE.B  #$26, D4
00001D40                          1449                  
00001D40  6000 038E               1450                  BRA     SIZEW           *It's always a word when memory
00001D44                          1451                  
00001D44  4E75                    1452                  RTS
00001D46                          1453  
00001D46  43F9 000035CF           1454  OPASRR          LEA     ASRMESSAGE, A1 *Store the ASR (register) message
00001D4C  183C 0016               1455                  MOVE.B  #$16, D4
00001D50                          1456                  
00001D50  3200                    1457                  MOVE.W  D0, D1
00001D52  C27C 00C0               1458                  AND.W   #$C0, D1      *Isolate SIZE
00001D56                          1459                  
00001D56  B27C 0000               1460                  CMP.W   #$0, D1         *Check if size is 00
00001D5A  6700 036E               1461                  BEQ     SIZEB        *If yes, it's a byte
00001D5E                          1462                  
00001D5E  B27C 0040               1463                  CMP.W   #$40, D1      *Check if size is 01
00001D62  6700 036C               1464                  BEQ     SIZEW         *If yes, it's a word
00001D66                          1465                  
00001D66  B27C 0080               1466                  CMP.W   #$80, D1      *Check if size is 10
00001D6A  6700 036A               1467                  BEQ     SIZEL         *If yes, it's a long
00001D6E                          1468                  
00001D6E  4E75                    1469                  RTS
00001D70                          1470  
00001D70  43F9 000035E3           1471  OPROLM          LEA     ROLMESSAGE, A1 *Store the ROL (memory) message
00001D76  183C 0027               1472                  MOVE.B  #$27, D4
00001D7A                          1473                  
00001D7A  6000 0354               1474                  BRA     SIZEW           *It's always a word when memory
00001D7E                          1475                  
00001D7E  4E75                    1476                  RTS
00001D80                          1477  
00001D80  43F9 000035E3           1478  OPROLR          LEA     ROLMESSAGE, A1 *Store the ROL (register) message
00001D86  183C 0017               1479                  MOVE.B  #$17, D4
00001D8A                          1480                  
00001D8A  3200                    1481                  MOVE.W  D0, D1
00001D8C  C27C 00C0               1482                  AND.W   #$C0, D1      *Isolate SIZE
00001D90                          1483                  
00001D90  B27C 0000               1484                  CMP.W   #$0, D1         *Check if size is 00
00001D94  6700 0334               1485                  BEQ     SIZEB        *If yes, it's a byte
00001D98                          1486                  
00001D98  B27C 0040               1487                  CMP.W   #$40, D1      *Check if size is 01
00001D9C  6700 0332               1488                  BEQ     SIZEW         *If yes, it's a word
00001DA0                          1489                  
00001DA0  B27C 0080               1490                  CMP.W   #$80, D1      *Check if size is 10
00001DA4  6700 0330               1491                  BEQ     SIZEL         *If yes, it's a long
00001DA8                          1492                  
00001DA8  4E75                    1493                  RTS
00001DAA                          1494  
00001DAA  43F9 000035DF           1495  OPRORM          LEA     RORMESSAGE, A1 *Store the ROR (memory) message
00001DB0  183C 0027               1496                  MOVE.B  #$27, D4
00001DB4                          1497                  
00001DB4  6000 031A               1498                  BRA     SIZEW           *It's always a word when memory
00001DB8                          1499                  
00001DB8  4E75                    1500                  RTS
00001DBA                          1501  
00001DBA  43F9 000035DF           1502  OPRORR          LEA     RORMESSAGE, A1 *Store the ROR (register) message
00001DC0  183C 0017               1503                  MOVE.B  #$17, D4
00001DC4                          1504                  
00001DC4  3200                    1505                  MOVE.W  D0, D1
00001DC6  C27C 00C0               1506                  AND.W   #$C0, D1      *Isolate SIZE
00001DCA                          1507                  
00001DCA  B27C 0000               1508                  CMP.W   #$0, D1         *Check if size is 00
00001DCE  6700 02FA               1509                  BEQ     SIZEB        *If yes, it's a byte
00001DD2                          1510                  
00001DD2  B27C 0040               1511                  CMP.W   #$40, D1      *Check if size is 01
00001DD6  6700 02F8               1512                  BEQ     SIZEW         *If yes, it's a word
00001DDA                          1513                  
00001DDA  B27C 0080               1514                  CMP.W   #$80, D1      *Check if size is 10
00001DDE  6700 02F6               1515                  BEQ     SIZEL         *If yes, it's a long
00001DE2                          1516                  
00001DE2  4E75                    1517                  RTS
00001DE4                          1518  
00001DE4                          1519  *---------------------------------------END_CHECK1110--------------------------------------------------------
00001DE4                          1520  
00001DE4                          1521  
00001DE4                          1522  *-----------------------------------------------------------------------------------------------------
00001DE4                          1523  *                                            Subroutine: CHECK1010
00001DE4                          1524  *Description: Checks if opcode word starts with the binary 1010. If true it identifies if it is CMP
00001DE4                          1525  *----------------------------------------------------------------------------------------------------
00001DE4  3200                    1526  CHECK1010       MOVE.W D0,D1 *restore the opcode to d1
00001DE6  C27C F000               1527                  AND.W #$F000,D1
00001DEA  B27C B000               1528                  CMP.W #$B000,D1
00001DEE  6700 0004               1529                  BEQ OPCMP
00001DF2  4E75                    1530                  RTS
00001DF4                          1531                  
00001DF4  43F9 0000356B           1532  OPCMP           LEA CMPMESSAGE, A1
00001DFA  183C 0019               1533                  MOVE.B  #$19, D4
00001DFE                          1534                  
00001DFE  3200                    1535                  MOVE.W  D0, D1
00001E00  C27C 01C0               1536                  AND.W   #$1C0, D1       *Isolate OPMODE part
00001E04                          1537                  
00001E04  B27C 0000               1538                  CMP.W   #$0, D1         *If OPMODE 000
00001E08  6700 02C0               1539                  BEQ     SIZEB           *If yes, it's byte 
00001E0C                          1540                  
00001E0C  B27C 0040               1541                  CMP.W   #$40, D1        *If OPMODE 001
00001E10  6700 02BE               1542                  BEQ     SIZEW           *If yes, it's word
00001E14                          1543                  
00001E14  B27C 0080               1544                  CMP.W   #$80, D1        *If OPMODE 010
00001E18  6700 02BC               1545                  BEQ     SIZEL           *If yes, it's long
00001E1C                          1546                  
00001E1C  4E75                    1547                  RTS
00001E1E                          1548  *---------------------------------------------- CHECK1011-----------------------------------------------
00001E1E                          1549  
00001E1E                          1550  
00001E1E                          1551  *-----------------------------------------------------------------------------------------------------
00001E1E                          1552  *                                        Subroutine: CHECK0111
00001E1E                          1553  *Description: Checks if opcode word starts with the binary 0111. If true it identifies if it is MOVEQ
00001E1E                          1554  *----------------------------------------------------------------------------------------------------
00001E1E                          1555  
00001E1E                          1556  CHECK0111       *Check for MOVEQ opcode
00001E1E  3200                    1557                  MOVE.W D0,D1 *restore the opcode to d1
00001E20  C27C F000               1558                  AND.W #$F000,D1
00001E24  B27C 7000               1559                  CMP.W #$7000,D1
00001E28  6700 0004               1560                  BEQ OPMOVEQ
00001E2C  4E75                    1561                  RTS
00001E2E                          1562                  
00001E2E  43F9 0000357B           1563  OPMOVEQ         LEA MOVEQMESSAGE, A1
00001E34  183C 0002               1564                  MOVE.B  #$2, D4
00001E38                          1565                  
00001E38  6000 029C               1566                  BRA     SIZEL           *It's always a long operation
00001E3C                          1567                  
00001E3C  4E75                    1568                  RTS
00001E3E                          1569  
00001E3E                          1570  *------------------------------------------------CHECK0111----------------------------------------------
00001E3E                          1571  
00001E3E                          1572  
00001E3E                          1573  *-----------------------------------------------------------------------------------------------------
00001E3E                          1574  *                                        Subroutine: CHECK0110
00001E3E                          1575  *Description: Checks if opcode word starts with the binary 0110. If true it identifies if it is BCC
00001E3E                          1576  *----------------------------------------------------------------------------------------------------
00001E3E                          1577  
00001E3E                          1578  CHECK0110       *Check for BCC opcode
00001E3E  3200                    1579                  MOVE.W D0,D1 *restore the opcode to d1
00001E40  C27C F000               1580                  AND.W #$F000,D1
00001E44  B27C 6000               1581                  CMP.W #$6000,D1
00001E48  6700 0004               1582                  BEQ OPBXX
00001E4C  4E75                    1583                  RTS
00001E4E                          1584                  
00001E4E                          1585  OPBXX          * check bit 11,10,9,8 for what bcc codition code                 
00001E4E                          1586               
00001E4E                          1587                  
00001E4E                          1588                                   
00001E4E                          1589                  *check if 11,10,9,8 is 1111
00001E4E  3200                    1590                  MOVE.W D0,D1 *restore the opcode to d1
00001E50  C27C 0F00               1591                  AND.W #$F00,D1 *isolate bit 11-8
00001E54  B27C 0F00               1592                  CMP.W #$F00,D1                
00001E58  6700 0038               1593                  BEQ OPBLE 1111
00001E5C                          1594  
00001E5C                          1595              
00001E5C  3200                    1596                  MOVE.W D0,D1
00001E5E  C27C 0E00               1597                  AND.W #$E00,D1
00001E62  B27C 0E00               1598                  CMP.W #$E00,D1
00001E66  6700 001E               1599                  BEQ OPBGT
00001E6A                          1600                  
00001E6A                          1601              
00001E6A  3200                    1602                  MOVE.W D0,D1
00001E6C  C27C 0400               1603                  AND.W #$400,D1
00001E70  B27C 0400               1604                  CMP.W #$400,D1
00001E74  6700 0004               1605                  BEQ OPBCC
00001E78                          1606                  
00001E78  4E75                    1607                  RTS
00001E7A                          1608                  
00001E7A  43F9 0000356F           1609  OPBCC    LEA BCCMESSAGE, A1   
00001E80  183C 0021               1610           MOVE.B  #$21, D4
00001E84  4E75                    1611           RTS
00001E86                          1612           
00001E86  43F9 00003573           1613  OPBGT    LEA BGTMESSAGE, A1 
00001E8C  183C 0021               1614           MOVE.B  #$21, D4  
00001E90  4E75                    1615           RTS
00001E92                          1616  
00001E92  43F9 00003577           1617  OPBLE    LEA BLEMESSAGE, A1   
00001E98  183C 0021               1618           MOVE.B  #$21, D4
00001E9C  4E75                    1619           RTS
00001E9E                          1620                  
00001E9E                          1621  *------------------------------------------CHECK0110-------------------------------------------------------
00001E9E                          1622  
00001E9E                          1623  
00001E9E                          1624  
00001E9E                          1625  *-----------------------------------------------------------------------------------------------------
00001E9E                          1626  *                                    Subroutine: CHECK1101
00001E9E                          1627  *Description: Checks if opcode word starts with the binary 1101. If true it identifies if it is ADD or ADDA
00001E9E                          1628  *----------------------------------------------------------------------------------------------------
00001E9E                          1629  CHECK1101       *Check for ADD or ADDA
00001E9E  3200                    1630                  MOVE.W D0,D1 *restore the opcode to d1
00001EA0  C27C F000               1631                  AND.W #$F000,D1
00001EA4  B27C D000               1632                  CMP.W #$D000, D1
00001EA8  6700 0004               1633                  BEQ CHECKADDADDA
00001EAC  4E75                    1634                  RTS
00001EAE  C27C 01C0               1635  CHECKADDADDA    AND.W #$1C0, D1
00001EB2  B27C 01C0               1636                  CMP.W #$1C0, D1
00001EB6  6700 0014               1637                  BEQ OPADDA
00001EBA                          1638              
00001EBA  3200                    1639                  MOVE.W D0,D1 *restore the opcode to d1          
00001EBC  C27C 00C0               1640                  AND.W #$C0,D1  *check for 011 in 8-6.
00001EC0  B27C 00C0               1641                  CMP.W #$C0,D1 
00001EC4  6700 0006               1642                  BEQ OPADDA
00001EC8                          1643                  
00001EC8  6000 0024               1644                  BRA OPADD
00001ECC                          1645                  
00001ECC  43F9 00003581           1646  OPADDA          LEA ADDAMESSAGE,A1
00001ED2  183C 0005               1647                  MOVE.B  #$5, D4
00001ED6                          1648                  
00001ED6  3200                    1649                  MOVE.W  D0, D1
00001ED8  C27C 01C0               1650                  AND.W   #$1C0, D1       *Isolate OPMODE part
00001EDC  B27C 00C0               1651                  CMP.W   #$C0, D1         *If OPMODE 011
00001EE0  6700 01EE               1652                  BEQ     SIZEW           *If yes, it's word 
00001EE4                          1653                  
00001EE4  B27C 01C0               1654                  CMP.W   #$1C0, D1       *If OPMODE 111
00001EE8  6700 01EC               1655                  BEQ     SIZEL           *If yes, it's long
00001EEC                          1656                  
00001EEC  4E75                    1657                  RTS
00001EEE                          1658                  
00001EEE  43F9 00003586           1659  OPADD           LEA ADDMESSAGE,A1
00001EF4  183C 0004               1660                  MOVE.B  #$4, D4
00001EF8                          1661                  
00001EF8  3200                    1662                  MOVE.W  D0, D1
00001EFA  C27C 01C0               1663                  AND.W   #$1C0, D1       *Isolate OPMODE part
00001EFE  B27C 0000               1664                  CMP.W   #$0, D1         *If OPMODE 000
00001F02  6700 01C6               1665                  BEQ     SIZEB           *If yes, it's byte 
00001F06                          1666                  
00001F06  B27C 0100               1667                  CMP.W   #$100, D1       *If OPMODE 100
00001F0A  6700 01BE               1668                  BEQ     SIZEB           *If yes, it's byte
00001F0E                          1669                  
00001F0E  B27C 0040               1670                  CMP.W   #$40, D1        *If OPMODE 001
00001F12  6700 01BC               1671                  BEQ     SIZEW           *If yes, it's word
00001F16                          1672                  
00001F16  B27C 0140               1673                  CMP.W   #$140, D1       *If OPMODE 101
00001F1A  6700 01B4               1674                  BEQ     SIZEW           *If yes, it's word
00001F1E                          1675                  
00001F1E  B27C 0080               1676                  CMP.W   #$80, D1        *If OPMODE 010
00001F22  6700 01B2               1677                  BEQ     SIZEL           *If yes, it's long
00001F26                          1678                  
00001F26  B27C 0180               1679                  CMP.W   #$180, D1       *If OPMODE 110
00001F2A  6700 01AA               1680                  BEQ     SIZEL           *If yes, it's long
00001F2E                          1681                  
00001F2E  4E75                    1682                  RTS
00001F30                          1683  *--------------------------------------------CHECK1101--------------------------------------------------
00001F30                          1684  
00001F30                          1685  
00001F30                          1686  *-----------------------------------------------------------------------------------------------------
00001F30                          1687  *                                        Subroutine: CHECK1001
00001F30                          1688  *Description: Checks if opcode word starts with the binary 1001. If true it identifies if it is SUB or SUBA
00001F30                          1689  *----------------------------------------------------------------------------------------------------
00001F30                          1690  
00001F30                          1691  CHECK1001       *Check for sub or suba
00001F30                          1692  
00001F30  3200                    1693                  MOVE.W D0,D1 *restore the opcode to d1
00001F32  C27C F000               1694                  AND.W #$F000,D1
00001F36  B27C 9000               1695                  CMP.W #$9000, D1
00001F3A  6700 0004               1696                  BEQ CHECKSUBSUBA
00001F3E  4E75                    1697                  RTS
00001F40                          1698                  
00001F40  C27C 01C0               1699  CHECKSUBSUBA    AND.W #$1C0, D1
00001F44  B27C 01C0               1700                  CMP.W #$1C0, D1
00001F48  6700 0014               1701                  BEQ OPSUBA
00001F4C                          1702              
00001F4C  3200                    1703                  MOVE.W D0,D1 *restore the opcode to d1          
00001F4E  C27C 00C0               1704                  AND.W #$C0,D1  *check for 011 in 8-6.
00001F52  B27C 00C0               1705                  CMP.W #$C0,D1 
00001F56  6700 0006               1706                  BEQ OPSUBA
00001F5A  6000 0024               1707                  BRA OPSUB
00001F5E  43F9 0000358A           1708  OPSUBA          LEA SUBAMESSAGE,A1
00001F64  183C 0008               1709                  MOVE.B  #$8, D4
00001F68                          1710                  
00001F68  3200                    1711                  MOVE.W  D0, D1
00001F6A  C27C 01C0               1712                  AND.W   #$1C0, D1       *Isolate OPMODE part
00001F6E  B27C 00C0               1713                  CMP.W   #$C0, D1         *If OPMODE 011
00001F72  6700 015C               1714                  BEQ     SIZEW           *If yes, it's word 
00001F76                          1715                  
00001F76  B27C 01C0               1716                  CMP.W   #$1C0, D1       *If OPMODE 111
00001F7A  6700 015A               1717                  BEQ     SIZEL           *If yes, it's long
00001F7E                          1718                  
00001F7E  4E75                    1719                  RTS
00001F80                          1720                  
00001F80  43F9 0000358F           1721  OPSUB           LEA SUBMESSAGE,A1
00001F86  183C 0007               1722                  MOVE.B  #$7, D4
00001F8A                          1723                  
00001F8A  3200                    1724                  MOVE.W  D0, D1
00001F8C  C27C 01C0               1725                  AND.W   #$1C0, D1       *Isolate OPMODE part
00001F90  B27C 0000               1726                  CMP.W   #$0, D1         *If OPMODE 000
00001F94  6700 0134               1727                  BEQ     SIZEB           *If yes, it's byte 
00001F98                          1728                  
00001F98  B27C 0100               1729                  CMP.W   #$100, D1       *If OPMODE 100
00001F9C  6700 012C               1730                  BEQ     SIZEB           *If yes, it's byte
00001FA0                          1731                  
00001FA0  B27C 0040               1732                  CMP.W   #$40, D1        *If OPMODE 001
00001FA4  6700 012A               1733                  BEQ     SIZEW           *If yes, it's word
00001FA8                          1734                  
00001FA8  B27C 0140               1735                  CMP.W   #$140, D1       *If OPMODE 101
00001FAC  6700 0122               1736                  BEQ     SIZEW           *If yes, it's word
00001FB0                          1737                  
00001FB0  B27C 0080               1738                  CMP.W   #$80, D1        *If OPMODE 010
00001FB4  6700 0120               1739                  BEQ     SIZEL           *If yes, it's long
00001FB8                          1740                  
00001FB8  B27C 0180               1741                  CMP.W   #$180, D1       *If OPMODE 110
00001FBC  6700 0118               1742                  BEQ     SIZEL           *If yes, it's long
00001FC0                          1743                  
00001FC0  4E75                    1744                  RTS
00001FC2                          1745  *--------------------------------------------------------CHECK1001----------------------------------------
00001FC2                          1746  
00001FC2                          1747  
00001FC2                          1748  *-----------------------------------------------------------------------------------------------------
00001FC2                          1749  *                                    Subroutine: CHECK1000
00001FC2                          1750  *Description: Checks if opcode word starts with the binary 1000. If true it identifies if it is DIVS
00001FC2                          1751  *----------------------------------------------------------------------------------------------------
00001FC2                          1752  CHECK1000       *Check for DIVS word
00001FC2  3200                    1753                  MOVE.W D0,D1 *restore the opcode to d1
00001FC4  C27C F000               1754                  AND.W #$F000,D1
00001FC8  B27C 8000               1755                  CMP.W #$8000,D1
00001FCC  6700 0004               1756                  BEQ OPDIVS
00001FD0  4E75                    1757                  RTS
00001FD2                          1758                  
00001FD2  43F9 00003566           1759  OPDIVS          LEA DIVSMESSAGE,A1
00001FD8  183C 0010               1760                  MOVE.B  #$10, D4
00001FDC                          1761                  
00001FDC  6000 00F2               1762                  BRA     SIZEW           *It's always a word
00001FE0                          1763                  
00001FE0  4E75                    1764                  RTS
00001FE2                          1765                  
00001FE2                          1766  *--------------------------------------CHECK1000-----------------------------------------------------------
00001FE2                          1767  
00001FE2                          1768  *-----------------------------------------------------------------------------------------------------
00001FE2                          1769  *                                    Subroutine: CHECK0100
00001FE2                          1770  *Description: Checks if opcode word starts with the binary 0100. If true it identifies if it is JSR, RTS, NOP, MOVEM, LEA or CLR
00001FE2                          1771  *----------------------------------------------------------------------------------------------------
00001FE2                          1772  
00001FE2                          1773  CHECK0100   * check for JSR, RTS, NOP, MOVEM, LEA, CLR
00001FE2  3200                    1774                  MOVE.W D0,D1 *RESTORE OPCODE
00001FE4  C27C F000               1775                  AND.W #$F000,D1
00001FE8  B27C 4000               1776                  CMP.W #$4000,D1
00001FEC  6700 0004               1777                  BEQ CHECKOPS *check all posible ops in the 0100 category
00001FF0  4E75                    1778                  RTS
00001FF2                          1779  
00001FF2                          1780  CHECKOPS        *******Check for NOP and RTS since they are constant
00001FF2  3200                    1781                   MOVE.W D0,D1 *RESTORE OPCODE
00001FF4  B27C 4E75               1782                   CMP #$4E75,D1
00001FF8  6700 0096               1783                   BEQ OPRTS
00001FFC  B27C 4E71               1784                   CMP #$4E71,D1
00002000  6700 003C               1785                   BEQ OPNOP
00002004                          1786  
00002004                          1787                  
00002004                          1788                  
00002004                          1789                  *******Check for lea*******                
00002004  C27C 0100               1790                  AND.W #$100,D1  *mask every bit but the 8th
00002008  B27C 0100               1791                  CMP.W #$100, D1 *check if bit 8 is 1 
0000200C  6700 0050               1792                  BEQ OPLEA
00002010                          1793                  
00002010  3200                    1794                  MOVE.W  D0, D1
00002012  C27C 0800               1795                  AND.W   #$800, D1   *Isolate 11 bit
00002016  B27C 0000               1796                  CMP.W   #$0, D1
0000201A  6700 0084               1797                  BEQ     OPCLR
0000201E                          1798                  
0000201E  3200                    1799                  MOVE.W  D0, D1
00002020  C27C 0200               1800                  AND.W   #$200, D1   *Isolate 9 bit
00002024  B27C 0000               1801                  CMP.W   #$0, D1
00002028  6700 0044               1802                  BEQ     OPMOVEM
0000202C                          1803                  
0000202C  3200                    1804                  MOVE.W  D0, D1
0000202E  C27C 0038               1805                  AND.W   #$38, D1   *Isolate 5, 4 and 3 bits
00002032  B27C 0110               1806                  CMP.W   #$110, D1
00002036  6600 0016               1807                  BNE     OPJSR
0000203A                          1808                
0000203A  6000 F0EC               1809                  BRA     INVALIDOPCODE
0000203E                          1810                  
0000203E                          1811   
0000203E  43F9 000035C3           1812  OPNOP           LEA NOPMESSAGE,A1
00002044  183C 0000               1813                  MOVE.B  #$0, D4
00002048  1E3C 0000               1814                  MOVE.B  #$0, D7
0000204C  4E75                    1815                  RTS    
0000204E                          1816  OPJSR
0000204E  43F9 000035C7           1817                  LEA JSRMESSAGE,A1
00002054  183C 0022               1818                  MOVE.B  #$22, D4
00002058  1E3C 0000               1819                  MOVE.B  #$0, D7
0000205C  4E75                    1820                  RTS
0000205E                          1821  OPLEA  
0000205E  43F9 000035B5           1822                  LEA LEAMESSAGE,A1
00002064  183C 0011               1823                  MOVE.B  #$11, D4
00002068                          1824                  
00002068  1E3C 0000               1825                  MOVE.B  #$0, D7
0000206C  4E75                    1826                  RTS
0000206E                          1827                  *BRA     SIZEL           *It's always long
0000206E                          1828                  
0000206E  43F9 000035B9           1829  OPMOVEM         LEA OPMOVEMMESSAGE,A1
00002074  183C 0003               1830                  MOVE.B  #$3, D4
00002078                          1831                  
00002078  3200                    1832                  MOVE.W  D0, D1
0000207A  C27C 0040               1833                  AND.W   #$40, D1       *Isolate SIZE part
0000207E  B27C 0000               1834                  CMP.W   #$0, D1         *If SIZE 0
00002082  6700 004C               1835                  BEQ     SIZEW           *If yes, it's word 
00002086                          1836                  
00002086  B27C 0040               1837                  CMP.W   #$40, D1       *If SIZE 1
0000208A  6700 004A               1838                  BEQ     SIZEL           *If yes, it's long
0000208E                          1839                  
0000208E  4E75                    1840                  RTS
00002090                          1841                  
00002090  43F9 000035BF           1842  OPRTS           LEA RTSMESSAGE,A1
00002096  183C 0023               1843                  MOVE.B  #$23, D4
0000209A  1E3C 0000               1844                  MOVE.B  #$0, D7
0000209E  4E75                    1845                  RTS
000020A0                          1846                  
000020A0  43F9 000035CB           1847  OPCLR           LEA CLRMESSAGE,A1
000020A6  183C 0012               1848                  MOVE.B  #$12, D4
000020AA                          1849                  
000020AA  3200                    1850                  MOVE.W  D0, D1
000020AC  C27C 00C0               1851                  AND.W   #$C0, D1       *Isolate SIZE part
000020B0                          1852                  
000020B0  B27C 0000               1853                  CMP.W   #$0, D1         *If SIZE 0
000020B4  6700 0014               1854                  BEQ     SIZEB           *If yes, it's byte 
000020B8                          1855                  
000020B8  B27C 0040               1856                  CMP.W   #$40, D1       *If SIZE 1
000020BC  6700 0012               1857                  BEQ     SIZEW           *If yes, it's word
000020C0                          1858                  
000020C0  B27C 0080               1859                  CMP.W   #$80, D1       *If SIZE 1
000020C4  6700 0010               1860                  BEQ     SIZEL           *If yes, it's byte
000020C8                          1861                  
000020C8  4E75                    1862                  RTS
000020CA                          1863  *----------------------------------------CHECK0100-------------------------------------------------------
000020CA                          1864  
000020CA                          1865  
000020CA                          1866  *--------------------------------------------------------------------------------------------------------
000020CA                          1867  *                                Subroutines for size of OPCode
000020CA                          1868  * Description: Display following in D7: $0 if it's a byte opration, $1 if it's a word operation and $2 if
000020CA                          1869  *              it's a long operation.
000020CA                          1870  *--------------------------------------------------------------------------------------------------------
000020CA  1E3C 0001               1871  SIZEB           MOVE.B  #$1, D7
000020CE  4E75                    1872                  RTS
000020D0                          1873                  
000020D0  1E3C 0002               1874  SIZEW           MOVE.B  #$2, D7
000020D4  4E75                    1875                  RTS
000020D6                          1876                  
000020D6  1E3C 0003               1877  SIZEL           MOVE.B  #$3, D7
000020DA  4E75                    1878                  RTS
000020DC                          1879  *-------------------------------------OPCode sizes end---------------------------------------------------
000020DC                          1880  
000020DC                          1881  
000020DC                          1882  
000020DC                          1883  
000020DC                          1884  
000020DC                          1885  
000020DC                          1886  
000020DC                          1887  
000020DC                          1888  *-------------------------------------EA Code begins-----------------------------------------------------
000020DC  B83C 0000               1889  CHECKEAS        CMP.B   #$0, D4
000020E0  6700 00B2               1890                  BEQ     NOPEA
000020E4                          1891  
000020E4  B83C 0001               1892                  CMP.B   #$1, D4
000020E8  6700 00B6               1893                  BEQ     MOVEEA
000020EC                          1894                  
000020EC  B83C 0002               1895                  CMP.B   #$2, D4
000020F0  6700 0276               1896                  BEQ     MOVEQEA
000020F4                          1897                  
000020F4  B83C 0003               1898                  CMP.B   #$3, D4
000020F8  6700 02CC               1899                  BEQ     MOVEMEA
000020FC                          1900                  
000020FC  B83C 0004               1901                  CMP.B   #$4, D4
00002100  6700 0456               1902                  BEQ     ADDEA
00002104                          1903                  
00002104  B83C 0005               1904                  CMP.B   #$5, D4
00002108  6700 063E               1905                  BEQ     ADDAEA
0000210C                          1906                  
0000210C  B83C 0006               1907                  CMP.B   #$6, D4
00002110  6700 0768               1908                  BEQ     ADDIEA
00002114                          1909  
00002114  B83C 0007               1910                  CMP.B   #$7, D4
00002118  6700 084E               1911                  BEQ     SUBEA
0000211C                          1912                  
0000211C  B83C 0009               1913                  CMP.B   #$9, D4
00002120  6700 0A36               1914                  BEQ     MULSEA
00002124                          1915                  
00002124  B83C 0010               1916                  CMP.B   #$10, D4
00002128  6700 0B44               1917                  BEQ     DIVUEA
0000212C                          1918                  
0000212C  B83C 0011               1919                  CMP.B   #$11, D4
00002130  6700 0C52               1920                  BEQ     LEAEA
00002134                          1921                  
00002134  B83C 0012               1922                  CMP.B   #$12, D4
00002138  6700 0CC2               1923                  BEQ     CLREA
0000213C                          1924                  
0000213C  B83C 0013               1925                  CMP.B   #$13, D4
00002140  6700 0D6E               1926                  BEQ     ANDEA
00002144                          1927                  
00002144  B83C 0015               1928                  CMP.B   #$15, D4
00002148  6700 0F3A               1929                  BEQ     LSREA
0000214C                          1930                  
0000214C  B83C 0016               1931                  CMP.B   #$16, D4
00002150  6700 1014               1932                  BEQ     ASREA
00002154                          1933                  
00002154  B83C 0017               1934                  CMP.B   #$17, D4
00002158  6700 10EE               1935                  BEQ     ROREA
0000215C                          1936                  
0000215C  B83C 0019               1937                  CMP.B   #$19, D4
00002160  6700 11C8               1938                  BEQ     CMPEA
00002164                          1939                  
00002164  B83C 0021               1940                  CMP.B   #$21, D4
00002168  6700 12F2               1941                  BEQ     BCCEA
0000216C                          1942                  
0000216C  B83C 0022               1943                  CMP.B   #$22, D4
00002170  6700 1388               1944                  BEQ     JSREA
00002174                          1945                  
00002174  B83C 0023               1946                  CMP.B   #$23, D4
00002178  6700 0020               1947                  BEQ     RTSEA
0000217C                          1948                  
0000217C  B83C 0025               1949                  CMP.B   #$25, D4
00002180  6700 0F4A               1950                  BEQ     LSMEA
00002184                          1951                  
00002184  B83C 0026               1952                  CMP.B   #$26, D4
00002188  6700 1024               1953                  BEQ     ASMEA
0000218C                          1954                  
0000218C  B83C 0027               1955                  CMP.B   #$27, D4
00002190  6700 10FE               1956                  BEQ     ROMEA
00002194                          1957                  
00002194                          1958  
00002194                          1959  
00002194  1A3C 00FF               1960  NOPEA       MOVE.B  #-1, D5
00002198  4E75                    1961              RTS
0000219A                          1962              
0000219A  1A3C 00FF               1963  RTSEA       MOVE.B  #-1, D5
0000219E  4E75                    1964              RTS
000021A0                          1965  
000021A0  2200                    1966  MOVEEA      MOVE.L  D0, D1
000021A2  C2BC 00000038           1967              AND.L   #$38, D1    *Isolate source mode
000021A8                          1968              
000021A8  B2BC 00000000           1969              CMP.L   #$0, D1     *Check if 000
000021AE  6700 0038               1970              BEQ     MOVEDATAREG
000021B2                          1971              
000021B2  B2BC 00000008           1972              CMP.L   #$8, D1     *Check if 001
000021B8  6700 0040               1973              BEQ     MOVEADDRREG
000021BC                          1974              
000021BC  B2BC 00000010           1975              CMP.L   #$10, D1    *Check if 010
000021C2  6700 0048               1976              BEQ     MOVEINADDRREG
000021C6                          1977              
000021C6  B2BC 00000018           1978              CMP.L   #$18, D1    *Check if 011
000021CC  6700 0050               1979              BEQ     MOVEPLUSADDRREG
000021D0                          1980              
000021D0  B2BC 00000020           1981              CMP.L   #$20, D1    *Check if 100
000021D6  6700 0058               1982              BEQ     MOVEMINUSADDRREG
000021DA                          1983              
000021DA  B2BC 00000038           1984              CMP.L   #$38, D1     *Check if 111
000021E0  6700 0060               1985              BEQ     MOVEADDRESSDATA
000021E4                          1986              
000021E4  6000 EF42               1987              BRA     INVALIDOPCODE
000021E8                          1988              
000021E8  2200                    1989  MOVEDATAREG MOVE.L  D0, D1
000021EA  C2BC 00000007           1990              AND.L   #$7, D1     *Isolate register
000021F0  2401                    1991              MOVE.L  D1, D2      *Move value of Dn
000021F2  1A3C 0000               1992              MOVE.B  #$0, D5     *Move type of source
000021F6                          1993              
000021F6  6000 00C8               1994              BRA     MOVEDEST
000021FA                          1995              
000021FA  2200                    1996  MOVEADDRREG MOVE.L  D0, D1
000021FC  C2BC 00000007           1997              AND.L   #$7, D1     *Isolate register
00002202  2401                    1998              MOVE.L  D1, D2      *Move value of An
00002204  1A3C 0001               1999              MOVE.B  #$1, D5     *Move type of source
00002208                          2000              
00002208  6000 00B6               2001              BRA     MOVEDEST
0000220C                          2002              
0000220C  2200                    2003  MOVEINADDRREG MOVE.L  D0, D1
0000220E  C2BC 00000007           2004              AND.L   #$7, D1     *Isolate register
00002214  2401                    2005              MOVE.L  D1, D2      *Move value of an
00002216  1A3C 0003               2006              MOVE.B  #$3, D5     *Move type of source
0000221A                          2007              
0000221A  6000 00A4               2008              BRA     MOVEDEST
0000221E                          2009              
0000221E  2200                    2010  MOVEPLUSADDRREG MOVE.L  D0, D1
00002220  C2BC 00000007           2011              AND.L   #$7, D1     *Isolate register
00002226  2401                    2012              MOVE.L  D1, D2      *Move value of an
00002228  1A3C 0004               2013              MOVE.B  #$4, D5     *Move type of source
0000222C                          2014              
0000222C  6000 0092               2015              BRA     MOVEDEST
00002230                          2016              
00002230  2200                    2017  MOVEMINUSADDRREG MOVE.L  D0, D1
00002232  C2BC 00000007           2018              AND.L   #$7, D1     *Isolate register
00002238  2401                    2019              MOVE.L  D1, D2      *Move value of an
0000223A  1A3C 0005               2020              MOVE.B  #$5, D5     *Move type of source
0000223E                          2021              
0000223E  6000 0080               2022              BRA     MOVEDEST
00002242                          2023              
00002242  2200                    2024  MOVEADDRESSDATA MOVE.L  D0, D1
00002244  C2BC 00000007           2025              AND.L   #$7, D1     *Isolate register
0000224A                          2026              
0000224A  B2BC 00000000           2027              CMP.L   #$0, D1     *Check if 000
00002250  6700 001A               2028              BEQ     MOVEADDRW
00002254                          2029              
00002254  B2BC 00000001           2030              CMP.L   #$1, D1     *Check if 001
0000225A  6700 001C               2031              BEQ     MOVEADDRL
0000225E                          2032              
0000225E  B2BC 00000004           2033              CMP.L   #$4, D1     *Check if 100
00002264  6700 001E               2034              BEQ     MOVEDATA
00002268                          2035              
00002268  6000 EEBE               2036              BRA     INVALIDOPCODE
0000226C                          2037              
0000226C  3410                    2038  MOVEADDRW   MOVE.W  (A0),D2     *Move addr
0000226E  1A3C 0006               2039              MOVE.B  #$6, D5     *Store type
00002272  5488                    2040              ADDA.L  #$2, A0 
00002274                          2041              
00002274  6000 004A               2042              BRA     MOVEDEST
00002278                          2043  
00002278  2410                    2044  MOVEADDRL   MOVE.L  (A0),D2     *Move addr
0000227A  1A3C 0007               2045              MOVE.B  #$7, D5     *Store type
0000227E  5888                    2046              ADDA.L  #$4, A0 
00002280                          2047              
00002280  6000 003E               2048              BRA     MOVEDEST
00002284                          2049              
00002284  BE3C 0001               2050  MOVEDATA    CMP.B   #$1,D7     *Compare if the size is a byte  
00002288  6700 0012               2051              BEQ     MOVESIZEB
0000228C                          2052      
0000228C  BE3C 0002               2053              CMP.B   #$2,D7     *Compare if the size is a word 
00002290  6700 0016               2054              BEQ     MOVESIZEW
00002294                          2055      
00002294  BE3C 0003               2056              CMP.B   #$3,D7     *Compare if the size is a long 
00002298  6700 001A               2057              BEQ     MOVESIZEL 
0000229C                          2058  
0000229C  3410                    2059  MOVESIZEB   MOVE.W  (A0),D2 
0000229E  1A3C 0008               2060              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
000022A2  5488                    2061              ADDA.L  #$2, A0 
000022A4                          2062          
000022A4  6000 001A               2063              BRA     MOVEDEST    *Branches to destination
000022A8                          2064  
000022A8  3410                    2065  MOVESIZEW   MOVE.W  (A0),D2 
000022AA  1A3C 0008               2066              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
000022AE  5488                    2067              ADDA.L  #$2, A0 
000022B0                          2068          
000022B0  6000 000E               2069              BRA     MOVEDEST    *Branches to destination
000022B4                          2070  
000022B4  2410                    2071  MOVESIZEL   MOVE.L  (A0),D2 
000022B6  1A3C 0008               2072              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
000022BA  5888                    2073              ADDA.L  #$4, A0 
000022BC                          2074          
000022BC  6000 0002               2075              BRA     MOVEDEST    *Branches to destination
000022C0                          2076  
000022C0  3200                    2077  MOVEDEST    MOVE.W  D0, D1
000022C2  C27C 01C0               2078              AND.W   #$1C0, D1 *Moves hex value to D1 for Comparison 00000111000000
000022C6  B27C 0000               2079              CMP.W   #$0, D1   *Checks to see if the size is Dn(Data Register) 
000022CA  6700 0026               2080              BEQ     MOVEDATAREGD  *Goes to Dn Process 
000022CE                          2081          
000022CE  B27C 0080               2082              CMP.W   #$80, D1   *Checks (An)
000022D2  6700 0030               2083              BEQ     MOVEINADDRD
000022D6                          2084          
000022D6  B27C 0018               2085              CMP.W   #$18, D1 *Checks (An)+
000022DA  6700 003A               2086              BEQ     MOVEPOSTADDRD
000022DE                          2087          
000022DE  B27C 0020               2088              CMP.W   #$20, D1 *Checks -(An)
000022E2  6700 0044               2089              BEQ     MOVEPREADDRD
000022E6                          2090          
000022E6  B27C 01C0               2091              CMP.W   #$1C0, D1 *Checks Addressing Mode
000022EA  6700 004E               2092              BEQ     MOVEADDRD
000022EE                          2093              
000022EE  6000 EE38               2094              BRA     INVALIDOPCODE
000022F2                          2095              
000022F2  3200                    2096  MOVEDATAREGD    MOVE.W  D0, D1
000022F4  C27C 0E00               2097                  AND.W   #$E00, D1   *Isolate register
000022F8  E081                    2098                  ASR.L   #8, D1
000022FA  E281                    2099                  ASR.L   #1, D1
000022FC  3601                    2100                  MOVE.W  D1, D3
000022FE  1C3C 0000               2101                  MOVE.B  #$0, D6
00002302                          2102                  
00002302  4E75                    2103                  RTS
00002304                          2104                  
00002304  3200                    2105  MOVEINADDRD     MOVE.W  D0, D1
00002306  C27C 0E00               2106                  AND.W   #$E00, D1   *Isolate register
0000230A  E081                    2107                  ASR.L   #8, D1
0000230C  E281                    2108                  ASR.L   #1, D1
0000230E  3601                    2109                  MOVE.W  D1, D3
00002310  1C3C 0001               2110                  MOVE.B  #$1, D6
00002314                          2111                  
00002314  4E75                    2112                  RTS
00002316                          2113                  
00002316  3200                    2114  MOVEPOSTADDRD   MOVE.W  D0, D1
00002318  C27C 0E00               2115                  AND.W   #$E00, D1   *Isolate register
0000231C  E081                    2116                  ASR.L   #8, D1
0000231E  E281                    2117                  ASR.L   #1, D1
00002320  3601                    2118                  MOVE.W  D1, D3
00002322  1C3C 0003               2119                  MOVE.B  #$3, D6
00002326                          2120                  
00002326  4E75                    2121                  RTS
00002328                          2122                  
00002328  3200                    2123  MOVEPREADDRD    MOVE.W  D0, D1
0000232A  C27C 0E00               2124                  AND.W   #$E00, D1   *Isolate register
0000232E  E081                    2125                  ASR.L   #8, D1
00002330  E281                    2126                  ASR.L   #1, D1
00002332  3601                    2127                  MOVE.W  D1, D3
00002334  1C3C 0004               2128                  MOVE.B  #$4, D6
00002338                          2129                  
00002338  4E75                    2130                  RTS
0000233A                          2131                  
0000233A  3200                    2132  MOVEADDRD       MOVE.W  D0, D1
0000233C  C27C 0E00               2133                  AND.W   #$E00, D1   *Isolate register
00002340                          2134                  
00002340  B27C 0000               2135                  CMP.W   #$0, D1     *Check if 000
00002344  6700 000E               2136                  BEQ     MOVEADDRWD  
00002348                          2137                  
00002348  B27C 0200               2138                  CMP.W   #$200, D1     *Check if 001
0000234C  6700 0010               2139                  BEQ     MOVEADDRLD  
00002350                          2140                  
00002350  6000 EDD6               2141                  BRA     INVALIDOPCODE
00002354                          2142                  
00002354  3610                    2143  MOVEADDRWD      MOVE.W  (A0), D3
00002356  1C3C 0006               2144                  MOVE.B  #$6, D6
0000235A  5488                    2145                  ADDA.L  #$2, A0
0000235C                          2146                  
0000235C  4E75                    2147                  RTS
0000235E                          2148                  
0000235E  2610                    2149  MOVEADDRLD      MOVE.L  (A0), D3
00002360  1C3C 0007               2150                  MOVE.B  #$7, D6
00002364  5888                    2151                  ADDA.L  #$4, A0
00002366                          2152                  
00002366  4E75                    2153                  RTS
00002368                          2154  
00002368                          2155  
00002368                          2156  
00002368                          2157  
00002368                          2158  
00002368                          2159  
00002368                          2160  
00002368  2200                    2161  MOVEQEA         MOVE.L  D0, D1
0000236A  C27C 00FF               2162                  AND.W   #$FF, D1    *Isolate data
0000236E  3401                    2163                  MOVE.W  D1, D2
00002370  1A3C 0008               2164                  MOVE.B  #$8, D5
00002374                          2165                  
00002374  2200                    2166                  MOVE.L  D0, D1
00002376  C27C 0E00               2167                  AND.W   #$E00, D1    *Isolate register
0000237A  E081                    2168                  ASR.L   #8, D1
0000237C  E281                    2169                  ASR.L   #1, D1
0000237E  3601                    2170                  MOVE.W  D1, D3
00002380  1C3C 0000               2171                  MOVE.B  #$0, D6
00002384                          2172                  
00002384  4E75                    2173                  RTS
00002386                          2174                  
00002386                          2175                  
00002386                          2176                  
00002386                          2177  registers       DS.L    16
000023C6                          2178                  
000023C6  2200                    2179  MOVEMEA         MOVE.L  D0, D1
000023C8  C27C 0400               2180                  AND.W   #$400, D1       *Isolate dr field 
000023CC                          2181                  
000023CC  B27C 0400               2182                  CMP.W   #$400, D1       *Check if it's 1
000023D0  6700 00C8               2183                  BEQ     MOVEMMR
000023D4                          2184                  
000023D4  6000 0002               2185                  BRA     MOVEMRM
000023D8                          2186                  
000023D8  3410                    2187  MOVEMRM         MOVE.W  (A0), D2
000023DA  5488                    2188                  ADDA.L  #$2, A0
000023DC  45F8 2386               2189                  LEA     registers, A2   *Store array
000023E0  7A10                    2190                  MOVE.L  #$10, D5
000023E2  7C00                    2191                  MOVE.L  #$0, D6     *Counter
000023E4  3202                    2192  MOVEMRLOOP      MOVE.W  D2, D1      *For editing
000023E6  C27C 0001               2193                  AND.W   #$1, D1
000023EA                          2194                  
000023EA  B27C 0001               2195                  CMP.W   #$1, D1
000023EE  6600 0016               2196                  BNE     MOVEMNOONES
000023F2                          2197                  
000023F2  15BC 0001 6000          2198                  MOVE.B  #$1, (A2, D6)   *Insert 1 to array
000023F8  5246                    2199                  ADD.W   #1, D6
000023FA  E242                    2200                  ASR.W   #$1, D2     *Shift to right
000023FC                          2201                  
000023FC  BC7C 0010               2202                  CMP.W   #16, D6
00002400  66E2                    2203                  BNE     MOVEMRLOOP
00002402                          2204                  
00002402  6000 0016               2205                  BRA     MOVEMMDEST
00002406                          2206                  
00002406  15BC 0000 6000          2207  MOVEMNOONES     MOVE.B  #$0, (A2, D6)
0000240C  5246                    2208                  ADD.W  #1, D6     *Add counter
0000240E  E242                    2209                  ASR.W   #$1, D2     *Shift to right
00002410                          2210                  
00002410  BC7C 0010               2211                  CMP.W   #16, D6
00002414  66CE                    2212                  BNE     MOVEMRLOOP
00002416                          2213                  
00002416  6000 0002               2214                  BRA     MOVEMMDEST
0000241A                          2215                  
0000241A  4246                    2216  MOVEMMDEST      CLR     D6
0000241C  2200                    2217                  MOVE.L  D0, D1
0000241E  C2BC 00000038           2218                  AND.L   #$38, D1    *Isolate source mode
00002424                          2219              
00002424  B2BC 00000010           2220                  CMP.L   #$10, D1    *Check if 010
0000242A  6700 0018               2221                  BEQ     MOVEMINADDRREGD
0000242E                          2222                  
0000242E  B27C 0020               2223                  CMP.W   #$20, D1 *Checks -(An)
00002432  6700 0020               2224                  BEQ     MOVEMPREADDRD
00002436                          2225              
00002436  B2BC 00000038           2226                  CMP.L   #$38, D1     *Check if 111
0000243C  6700 0028               2227                  BEQ     MOVEMADDRESSD
00002440                          2228                  
00002440  6000 ECE6               2229                  BRA     INVALIDOPCODE
00002444                          2230                  
00002444  2200                    2231  MOVEMINADDRREGD MOVE.L  D0, D1
00002446  C2BC 00000007           2232                  AND.L   #$7, D1     *Isolate register
0000244C  2601                    2233                  MOVE.L  D1, D3      *Move value of an
0000244E  1C3C 0003               2234                  MOVE.B  #$3, D6     *Move type of dest
00002452                          2235              
00002452  4E75                    2236                  RTS
00002454                          2237                  
00002454  2200                    2238  MOVEMPREADDRD   MOVE.L  D0, D1
00002456  C2BC 00000007           2239                  AND.L   #$7, D1     *Isolate register
0000245C  2601                    2240                  MOVE.L  D1, D3      *Move value of an
0000245E  1C3C 0005               2241                  MOVE.B  #$5, D6     *Move type of dest
00002462  7A11                    2242                  MOVE.L  #$11, D5    *flip mask
00002464                          2243              
00002464  4E75                    2244                  RTS
00002466                          2245              
00002466  2200                    2246  MOVEMADDRESSD   MOVE.L  D0, D1
00002468  C2BC 00000007           2247                  AND.L   #$7, D1     *Isolate register
0000246E                          2248              
0000246E  B2BC 00000000           2249                  CMP.L   #$0, D1     *Check if 000
00002474  6700 0010               2250                  BEQ     MOVEMADDRWD
00002478                          2251              
00002478  B2BC 00000001           2252                  CMP.L   #$1, D1     *Check if 001
0000247E  6700 0010               2253                  BEQ     MOVEMADDRLD
00002482                          2254                  
00002482  6000 ECA4               2255                  BRA     INVALIDOPCODE
00002486                          2256              
00002486  3610                    2257  MOVEMADDRWD     MOVE.W  (A0),D3     *Move addr
00002488  1C3C 0006               2258                  MOVE.B  #$6, D6     *Store type
0000248C  5488                    2259                  ADDA.L  #$2, A0 
0000248E                          2260              
0000248E  4E75                    2261                  RTS
00002490                          2262  
00002490  2610                    2263  MOVEMADDRLD     MOVE.L  (A0),D3     *Move addr
00002492  1C3C 0007               2264                  MOVE.B  #$7, D6     *Store type
00002496  5888                    2265                  ADDA.L  #$4, A0
00002498                          2266              
00002498  4E75                    2267                  RTS
0000249A                          2268                  
0000249A                          2269                  
0000249A                          2270                  
0000249A                          2271       
0000249A  3610                    2272  MOVEMMR         MOVE.W  (A0), D3
0000249C  5488                    2273                  ADDA.L  #$2, A0
0000249E  45F8 2386               2274                  LEA     registers, A2   *Store array
000024A2  7C10                    2275                  MOVE.L  #$10, D6
000024A4  7A00                    2276                  MOVE.L  #$0, D5     *Counter
000024A6  3203                    2277  MOVEMRLOOPD     MOVE.W  D3, D1      *For editing
000024A8  C27C 0001               2278                  AND.W   #$1, D1
000024AC                          2279                  
000024AC  B27C 0001               2280                  CMP.W   #$1, D1
000024B0  6600 0016               2281                  BNE     MOVEMNOONE
000024B4                          2282                  
000024B4  15BC 0001 5000          2283                  MOVE.B  #$1, (A2, D5)   *Insert 1 to array
000024BA  5245                    2284                  ADD.W   #1, D5
000024BC  E243                    2285                  ASR.W   #$1, D3     *Shift to right
000024BE                          2286                  
000024BE  BA7C 0010               2287                  CMP.W   #16, D5
000024C2  66E2                    2288                  BNE     MOVEMRLOOPD
000024C4                          2289                  
000024C4  6000 0016               2290                  BRA     MOVEMRDEST
000024C8                          2291                  
000024C8  15BC 0000 5000          2292  MOVEMNOONE      MOVE.B  #$0, (A2, D5)
000024CE  5245                    2293                  ADD.W  #1, D5     *Add counter
000024D0  E243                    2294                  ASR.W   #$1, D3     *Shift to right
000024D2                          2295                  
000024D2  BA7C 0010               2296                  CMP.W   #16, D5
000024D6  66CE                    2297                  BNE     MOVEMRLOOPD
000024D8                          2298                  
000024D8  6000 0002               2299                  BRA     MOVEMRDEST
000024DC                          2300                  
000024DC  2200                    2301  MOVEMRDEST      MOVE.L  D0, D1
000024DE  C2BC 00000038           2302                  AND.L   #$38, D1    *Isolate source mode
000024E4                          2303              
000024E4  B2BC 00000010           2304                  CMP.L   #$10, D1    *Check if 010
000024EA  6700 001A               2305                  BEQ     MOVEMINADDRREG
000024EE                          2306                  
000024EE  B2BC 00000018           2307                  CMP.L   #$18, D1    *Check if 011
000024F4  6700 0020               2308                  BEQ     MOVEMPLUSADDRREG
000024F8                          2309              
000024F8  B2BC 00000038           2310                  CMP.L   #$38, D1     *Check if 111
000024FE  6700 0026               2311                  BEQ     MOVEMADDRESS
00002502                          2312                  
00002502  6000 EC24               2313                  BRA     INVALIDOPCODE
00002506                          2314              
00002506  2200                    2315  MOVEMINADDRREG  MOVE.L  D0, D1
00002508  C2BC 00000007           2316                  AND.L   #$7, D1     *Isolate register
0000250E  2401                    2317                  MOVE.L  D1, D2      *Move value of an
00002510  1A3C 0003               2318                  MOVE.B  #$3, D5     *Move type of source
00002514                          2319              
00002514  4E75                    2320                  RTS 
00002516                          2321                  
00002516  2200                    2322  MOVEMPLUSADDRREG MOVE.L  D0, D1
00002518  C2BC 00000007           2323                  AND.L   #$7, D1     *Isolate register
0000251E  2401                    2324                  MOVE.L  D1, D2      *Move value of an
00002520  1A3C 0004               2325                  MOVE.B  #$4, D5     *Move type of source
00002524                          2326              
00002524  4E75                    2327                  RTS
00002526                          2328              
00002526  2200                    2329  MOVEMADDRESS    MOVE.L  D0, D1
00002528  C2BC 00000007           2330                  AND.L   #$7, D1     *Isolate register
0000252E                          2331              
0000252E  B2BC 00000000           2332                  CMP.L   #$0, D1     *Check if 000
00002534  6700 000E               2333                  BEQ     MOVEMADDRW
00002538                          2334              
00002538  B2BC 00000001           2335                  CMP.L   #$1, D1     *Check if 001
0000253E  6700 000E               2336                  BEQ     MOVEMADDRL
00002542                          2337                  
00002542  4E75                    2338                  RTS
00002544                          2339              
00002544  3410                    2340  MOVEMADDRW      MOVE.W  (A0),D2     *Move addr
00002546  1A3C 0006               2341                  MOVE.B  #$6, D5     *Store type
0000254A  5488                    2342                  ADDA.L  #$2, A0 
0000254C                          2343              
0000254C  4E75                    2344                  RTS
0000254E                          2345  
0000254E  2410                    2346  MOVEMADDRL      MOVE.L  (A0),D2     *Move addr
00002550  1A3C 0007               2347                  MOVE.B  #$7, D5     *Store type
00002554  5888                    2348                  ADDA.L  #$4, A0
00002556                          2349              
00002556  4E75                    2350                  RTS
00002558                          2351  
00002558                          2352                  
00002558                          2353                  
00002558                          2354                  
00002558                          2355                  
00002558                          2356                  
00002558                          2357  
00002558                          2358                 
00002558                          2359                  
00002558                          2360                  
00002558                          2361                  
00002558                          2362                  
00002558                          2363                  
00002558  3200                    2364  ADDEA           MOVE.W  D0, D1
0000255A  C27C 01C0               2365                  AND.W   #$1C0, D1     *Isolate opmode
0000255E                          2366                  
0000255E  B27C 0100               2367                  CMP.W   #$100, D1     *Check if < 100
00002562  6D00 00B2               2368                  BLT     ADDEADN
00002566                          2369                  
00002566  6000 0002               2370                  BRA     ADDDNEA
0000256A                          2371                  
0000256A  3200                    2372  ADDDNEA         MOVE.W  D0, D1
0000256C  C27C 0E00               2373                  AND.W   #$E00, D1   *Isolate register
00002570  E081                    2374                  ASR.L   #8, D1
00002572  E281                    2375                  ASR.L   #1, D1
00002574  3401                    2376                  MOVE.W  D1, D2      *Move register to d2
00002576  1A3C 0000               2377                  MOVE.B  #$0, D5
0000257A                          2378                  
0000257A  6000 0002               2379                  BRA     ADDDNEADEST
0000257E                          2380                  
0000257E  2200                    2381  ADDDNEADEST     MOVE.L  D0, D1
00002580  C2BC 00000038           2382                  AND.L   #$38, D1    *Isolate mode
00002586                          2383              
00002586  B2BC 00000010           2384                  CMP.L   #$10, D1    *Check if 010
0000258C  6700 0024               2385                  BEQ     ADDINADDRREGD
00002590                          2386              
00002590  B2BC 00000018           2387                  CMP.L   #$18, D1    *Check if 011
00002596  6700 002A               2388                  BEQ     ADDPLUSADDRREGD
0000259A                          2389              
0000259A  B2BC 00000020           2390                  CMP.L   #$20, D1    *Check if 100
000025A0  6700 0030               2391                  BEQ     ADDMINUSADDRREGD
000025A4                          2392              
000025A4  B2BC 00000038           2393                  CMP.L   #$38, D1     *Check if 111
000025AA  6700 0036               2394                  BEQ     ADDADDRESSD
000025AE                          2395                  
000025AE  6000 EB78               2396                  BRA     INVALIDOPCODE
000025B2                          2397                  
000025B2                          2398              
000025B2  2200                    2399  ADDINADDRREGD MOVE.L  D0, D1
000025B4  C2BC 00000007           2400              AND.L   #$7, D1     *Isolate register
000025BA  2601                    2401              MOVE.L  D1, D3      *Move value of an
000025BC  1C3C 0003               2402              MOVE.B  #$3, D6     *Move type of source
000025C0                          2403              
000025C0  4E75                    2404              RTS
000025C2                          2405              
000025C2  2200                    2406  ADDPLUSADDRREGD MOVE.L  D0, D1
000025C4  C2BC 00000007           2407              AND.L   #$7, D1     *Isolate register
000025CA  2601                    2408              MOVE.L  D1, D3      *Move value of an
000025CC  1C3C 0004               2409              MOVE.B  #$4, D6     *Move type of source
000025D0                          2410              
000025D0  4E75                    2411              RTS
000025D2                          2412              
000025D2  2200                    2413  ADDMINUSADDRREGD MOVE.L  D0, D1
000025D4  C2BC 00000007           2414              AND.L   #$7, D1     *Isolate register
000025DA  2601                    2415              MOVE.L  D1, D3      *Move value of an
000025DC  1C3C 0005               2416              MOVE.B  #$5, D6     *Move type of source
000025E0                          2417              
000025E0  4E75                    2418              RTS
000025E2                          2419              
000025E2  2200                    2420  ADDADDRESSD MOVE.L  D0, D1
000025E4  C2BC 00000007           2421              AND.L   #$7, D1     *Isolate register
000025EA                          2422              
000025EA  B2BC 00000000           2423              CMP.L   #$0, D1     *Check if 000
000025F0  6700 0010               2424              BEQ     ADDADDRWD
000025F4                          2425              
000025F4  B2BC 00000001           2426              CMP.L   #$1, D1     *Check if 001
000025FA  6700 0010               2427              BEQ     ADDADDRLD
000025FE                          2428              
000025FE  6000 EB28               2429              BRA     INVALIDOPCODE
00002602                          2430              
00002602  3610                    2431  ADDADDRWD   MOVE.W  (A0),D3     *Move addr
00002604  1C3C 0006               2432              MOVE.B  #$6, D6     *Store type
00002608  5488                    2433              ADDA.L  #$2, A0 
0000260A                          2434              
0000260A  4E75                    2435              RTS
0000260C                          2436  
0000260C  2610                    2437  ADDADDRLD   MOVE.L  (A0),D3     *Move addr
0000260E  1C3C 0007               2438              MOVE.B  #$7, D6     *Store type
00002612  5888                    2439              ADDA.L  #$4, A0
00002614                          2440              
00002614  4E75                    2441              RTS
00002616                          2442                  
00002616  2200                    2443  ADDEADN     MOVE.L  D0, D1
00002618  C2BC 00000038           2444              AND.L   #$38, D1    *Isolate source mode
0000261E                          2445              
0000261E  B2BC 00000000           2446              CMP.L   #$0, D1     *Check if 000
00002624  6700 0038               2447              BEQ     ADDDATAREG
00002628                          2448              
00002628  B2BC 00000008           2449              CMP.L   #$8, D1     *Check if 001
0000262E  6700 0040               2450              BEQ     ADDADDRREG
00002632                          2451              
00002632  B2BC 00000010           2452              CMP.L   #$10, D1    *Check if 010
00002638  6700 0048               2453              BEQ     ADDINADDRREG
0000263C                          2454              
0000263C  B2BC 00000018           2455              CMP.L   #$18, D1    *Check if 011
00002642  6700 0050               2456              BEQ     ADDPLUSADDRREG
00002646                          2457              
00002646  B2BC 00000020           2458              CMP.L   #$20, D1    *Check if 100
0000264C  6700 0058               2459              BEQ     ADDMINUSADDRREG
00002650                          2460              
00002650  B2BC 00000038           2461              CMP.L   #$38, D1     *Check if 111
00002656  6700 0060               2462              BEQ     ADDADDRESSDATA
0000265A                          2463              
0000265A  6000 EACC               2464              BRA     INVALIDOPCODE
0000265E                          2465                  
0000265E  2200                    2466  ADDDATAREG  MOVE.L  D0, D1
00002660  C2BC 00000007           2467              AND.L   #$7, D1     *Isolate register
00002666  2401                    2468              MOVE.L  D1, D2      *Move value of Dn
00002668  1A3C 0000               2469              MOVE.B  #$0, D5     *Move type of source
0000266C                          2470              
0000266C  6000 00C8               2471              BRA     ADDDNDEST
00002670                          2472              
00002670  2200                    2473  ADDADDRREG  MOVE.L  D0, D1
00002672  C2BC 00000007           2474              AND.L   #$7, D1     *Isolate register
00002678  2401                    2475              MOVE.L  D1, D2      *Move value of An
0000267A  1A3C 0001               2476              MOVE.B  #$1, D5     *Move type of source
0000267E                          2477              
0000267E  6000 00B6               2478              BRA     ADDDNDEST
00002682                          2479              
00002682  2200                    2480  ADDINADDRREG MOVE.L  D0, D1
00002684  C2BC 00000007           2481              AND.L   #$7, D1     *Isolate register
0000268A  2401                    2482              MOVE.L  D1, D2      *Move value of an
0000268C  1A3C 0003               2483              MOVE.B  #$3, D5     *Move type of source
00002690                          2484              
00002690  6000 00A4               2485              BRA     ADDDNDEST
00002694                          2486              
00002694  2200                    2487  ADDPLUSADDRREG MOVE.L  D0, D1
00002696  C2BC 00000007           2488              AND.L   #$7, D1     *Isolate register
0000269C  2401                    2489              MOVE.L  D1, D2      *Move value of an
0000269E  1A3C 0004               2490              MOVE.B  #$4, D5     *Move type of source
000026A2                          2491              
000026A2  6000 0092               2492              BRA     ADDDNDEST
000026A6                          2493              
000026A6  2200                    2494  ADDMINUSADDRREG MOVE.L  D0, D1
000026A8  C2BC 00000007           2495              AND.L   #$7, D1     *Isolate register
000026AE  2401                    2496              MOVE.L  D1, D2      *Move value of an
000026B0  1A3C 0005               2497              MOVE.B  #$5, D5     *Move type of source
000026B4                          2498              
000026B4  6000 0080               2499              BRA     ADDDNDEST
000026B8                          2500              
000026B8  2200                    2501  ADDADDRESSDATA MOVE.L  D0, D1
000026BA  C2BC 00000007           2502              AND.L   #$7, D1     *Isolate register
000026C0                          2503              
000026C0  B2BC 00000000           2504              CMP.L   #$0, D1     *Check if 000
000026C6  6700 001A               2505              BEQ     ADDADDRW
000026CA                          2506              
000026CA  B2BC 00000001           2507              CMP.L   #$1, D1     *Check if 001
000026D0  6700 001C               2508              BEQ     ADDADDRL
000026D4                          2509              
000026D4  B2BC 00000004           2510              CMP.L   #$4, D1     *Check if 100
000026DA  6700 001E               2511              BEQ     ADDDATA
000026DE                          2512              
000026DE  6000 EA48               2513              BRA     INVALIDOPCODE
000026E2                          2514              
000026E2  3410                    2515  ADDADDRW    MOVE.W  (A0),D2     *Move addr
000026E4  1A3C 0006               2516              MOVE.B  #$6, D5     *Store type
000026E8  5488                    2517              ADDA.L  #$2, A0 
000026EA                          2518              
000026EA  6000 004A               2519              BRA     ADDDNDEST
000026EE                          2520  
000026EE  2410                    2521  ADDADDRL    MOVE.L  (A0),D2     *Move addr
000026F0  1A3C 0007               2522              MOVE.B  #$7, D5     *Store type
000026F4  5888                    2523              ADDA.L  #$4, A0 
000026F6                          2524              
000026F6  6000 003E               2525              BRA     ADDDNDEST
000026FA                          2526              
000026FA  BE3C 0001               2527  ADDDATA     CMP.B   #$1,D7     *Compare if the size is a byte  
000026FE  6700 0012               2528              BEQ     ADDSIZEB
00002702                          2529      
00002702  BE3C 0002               2530              CMP.B   #$2,D7     *Compare if the size is a word 
00002706  6700 0016               2531              BEQ     ADDSIZEW
0000270A                          2532      
0000270A  BE3C 0003               2533              CMP.B   #$3,D7     *Compare if the size is a long 
0000270E  6700 001A               2534              BEQ     ADDSIZEL 
00002712                          2535  
00002712  3410                    2536  ADDSIZEB    MOVE.W  (A0),D2 
00002714  1A3C 0008               2537              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002718  5488                    2538              ADDA.L  #$2, A0 
0000271A                          2539          
0000271A  6000 001A               2540              BRA     ADDDNDEST *Branches to destination
0000271E                          2541  
0000271E  3410                    2542  ADDSIZEW    MOVE.W  (A0),D2 
00002720  1A3C 0008               2543              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002724  5488                    2544              ADDA.L  #$2, A0 
00002726                          2545          
00002726  6000 000E               2546              BRA     ADDDNDEST *Branches to destination
0000272A                          2547  
0000272A  2410                    2548  ADDSIZEL    MOVE.L  (A0),D2 
0000272C  1A3C 0008               2549              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002730  5888                    2550              ADDA.L  #$4, A0 
00002732                          2551          
00002732  6000 0002               2552              BRA     ADDDNDEST *Branches to destination
00002736                          2553              
00002736  3200                    2554  ADDDNDEST   MOVE.W  D0, D1
00002738  C27C 0E00               2555              AND.W   #$E00, D1   *Isolate register
0000273C  E081                    2556              ASR.L   #8, D1
0000273E  E281                    2557              ASR.L   #1, D1
00002740  3601                    2558              MOVE.W  D1, D3      *Move register to d3
00002742  1C3C 0000               2559              MOVE.B  #$0, D6
00002746                          2560              
00002746  4E75                    2561              RTS
00002748                          2562              *Check add size
00002748                          2563              
00002748                          2564              
00002748                          2565              
00002748                          2566              
00002748  2200                    2567  ADDAEA      MOVE.L  D0, D1
0000274A  C2BC 00000038           2568              AND.L   #$38, D1    *Isolate source mode
00002750                          2569              
00002750  B2BC 00000000           2570              CMP.L   #$0, D1     *Check if 000
00002756  6700 0038               2571              BEQ     ADDADATAREG
0000275A                          2572              
0000275A  B2BC 00000008           2573              CMP.L   #$8, D1     *Check if 001
00002760  6700 0040               2574              BEQ     ADDAADDRREG
00002764                          2575              
00002764  B2BC 00000010           2576              CMP.L   #$10, D1    *Check if 010
0000276A  6700 0048               2577              BEQ     ADDAINADDRREG
0000276E                          2578              
0000276E  B2BC 00000018           2579              CMP.L   #$18, D1    *Check if 011
00002774  6700 0050               2580              BEQ     ADDAPLUSADDRREG
00002778                          2581              
00002778  B2BC 00000020           2582              CMP.L   #$20, D1    *Check if 100
0000277E  6700 0058               2583              BEQ     ADDAMINUSADDRREG
00002782                          2584              
00002782  B2BC 00000038           2585              CMP.L   #$38, D1     *Check if 111
00002788  6700 0060               2586              BEQ     ADDAADDRESSDATA
0000278C                          2587              
0000278C  6000 E99A               2588              BRA     INVALIDOPCODE
00002790                          2589              
00002790  2200                    2590  ADDADATAREG MOVE.L  D0, D1
00002792  C2BC 00000007           2591              AND.L   #$7, D1     *Isolate register
00002798  2401                    2592              MOVE.L  D1, D2      *Move value of Dn
0000279A  1A3C 0000               2593              MOVE.B  #$0, D5     *Move type of source
0000279E                          2594              
0000279E  6000 00C8               2595              BRA     ADDADEST 
000027A2                          2596              
000027A2  2200                    2597  ADDAADDRREG MOVE.L  D0, D1
000027A4  C2BC 00000007           2598              AND.L   #$7, D1     *Isolate register
000027AA  2401                    2599              MOVE.L  D1, D2      *Move value of An
000027AC  1A3C 0001               2600              MOVE.B  #$1, D5     *Move type of source
000027B0                          2601              
000027B0  6000 00B6               2602              BRA     ADDADEST 
000027B4                          2603              
000027B4  2200                    2604  ADDAINADDRREG MOVE.L  D0, D1
000027B6  C2BC 00000007           2605              AND.L   #$7, D1     *Isolate register
000027BC  2401                    2606              MOVE.L  D1, D2      *Move value of an
000027BE  1A3C 0003               2607              MOVE.B  #$3, D5     *Move type of source
000027C2                          2608              
000027C2  6000 00A4               2609              BRA     ADDADEST 
000027C6                          2610              
000027C6  2200                    2611  ADDAPLUSADDRREG MOVE.L  D0, D1
000027C8  C2BC 00000007           2612              AND.L   #$7, D1     *Isolate register
000027CE  2401                    2613              MOVE.L  D1, D2      *Move value of an
000027D0  1A3C 0004               2614              MOVE.B  #$4, D5     *Move type of source
000027D4                          2615              
000027D4  6000 0092               2616              BRA     ADDADEST 
000027D8                          2617              
000027D8  2200                    2618  ADDAMINUSADDRREG MOVE.L  D0, D1
000027DA  C2BC 00000007           2619              AND.L   #$7, D1     *Isolate register
000027E0  2401                    2620              MOVE.L  D1, D2      *Move value of an
000027E2  1A3C 0005               2621              MOVE.B  #$5, D5     *Move type of source
000027E6                          2622              
000027E6  6000 0080               2623              BRA     ADDADEST 
000027EA                          2624              
000027EA  2200                    2625  ADDAADDRESSDATA MOVE.L  D0, D1
000027EC  C2BC 00000007           2626              AND.L   #$7, D1     *Isolate register
000027F2                          2627              
000027F2  B2BC 00000000           2628              CMP.L   #$0, D1     *Check if 000
000027F8  6700 001A               2629              BEQ     ADDAADDRW
000027FC                          2630              
000027FC  B2BC 00000001           2631              CMP.L   #$1, D1     *Check if 001
00002802  6700 001C               2632              BEQ     ADDAADDRL
00002806                          2633              
00002806  B2BC 00000004           2634              CMP.L   #$4, D1     *Check if 100
0000280C  6700 001E               2635              BEQ     ADDADATA
00002810                          2636              
00002810  6000 E916               2637              BRA     INVALIDOPCODE
00002814                          2638              
00002814  3410                    2639  ADDAADDRW   MOVE.W  (A0),D2     *Move addr
00002816  1A3C 0006               2640              MOVE.B  #$6, D5     *Store type
0000281A  5488                    2641              ADDA.L  #$2, A0 
0000281C                          2642              
0000281C  6000 004A               2643              BRA     ADDADEST 
00002820                          2644  
00002820  2410                    2645  ADDAADDRL   MOVE.L  (A0),D2     *Move addr
00002822  1A3C 0007               2646              MOVE.B  #$7, D5     *Store type
00002826  5888                    2647              ADDA.L  #$4, A0 
00002828                          2648              
00002828  6000 003E               2649              BRA     ADDADEST 
0000282C                          2650              
0000282C  BE3C 0001               2651  ADDADATA    CMP.B   #$1,D7     *Compare if the size is a byte  
00002830  6700 0012               2652              BEQ     ADDASIZEB
00002834                          2653      
00002834  BE3C 0002               2654              CMP.B   #$2,D7     *Compare if the size is a word 
00002838  6700 0016               2655              BEQ     ADDASIZEW
0000283C                          2656      
0000283C  BE3C 0003               2657              CMP.B   #$3,D7     *Compare if the size is a long 
00002840  6700 001A               2658              BEQ     ADDASIZEL 
00002844                          2659  
00002844  3410                    2660  ADDASIZEB   MOVE.W  (A0),D2 
00002846  1A3C 0008               2661              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
0000284A  5488                    2662              ADDA.L  #$2, A0 
0000284C                          2663          
0000284C  6000 001A               2664              BRA     ADDADEST *Branches to destination
00002850                          2665  
00002850  3410                    2666  ADDASIZEW   MOVE.W  (A0),D2 
00002852  1A3C 0008               2667              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002856  5488                    2668              ADDA.L  #$2, A0 
00002858                          2669          
00002858  6000 000E               2670              BRA     ADDADEST *Branches to destination
0000285C                          2671  
0000285C  2410                    2672  ADDASIZEL   MOVE.L  (A0),D2 
0000285E  1A3C 0008               2673              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002862  5888                    2674              ADDA.L  #$4, A0 
00002864                          2675          
00002864  6000 0002               2676              BRA     ADDADEST 
00002868                          2677  
00002868  3200                    2678  ADDADEST    MOVE.W  D0, D1
0000286A  C27C 0E00               2679              AND.W   #$E00, D1   *Isolate register
0000286E  E081                    2680              ASR.L   #8, D1
00002870  E281                    2681              ASR.L   #1, D1
00002872  3601                    2682              MOVE.W  D1, D3
00002874  1C3C 0001               2683              MOVE.B  #$1, D6
00002878                          2684              
00002878  4E75                    2685              RTS
0000287A                          2686              
0000287A                          2687              
0000287A  BE3C 0001               2688  ADDIEA      CMP.B   #$1,D7     *Compare if the size is a byte  
0000287E  6700 0012               2689              BEQ     ADDISIZEB
00002882                          2690      
00002882  BE3C 0002               2691              CMP.B   #$2,D7     *Compare if the size is a word 
00002886  6700 0016               2692              BEQ     ADDISIZEW
0000288A                          2693      
0000288A  BE3C 0003               2694              CMP.B   #$3,D7     *Compare if the size is a long 
0000288E  6700 001A               2695              BEQ     ADDISIZEL 
00002892                          2696  
00002892  3410                    2697  ADDISIZEB   MOVE.W  (A0),D2 
00002894  1A3C 0008               2698              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002898  5488                    2699              ADDA.L  #$2, A0 
0000289A                          2700          
0000289A  6000 001A               2701              BRA     ADDIDEST *Branches to destination
0000289E                          2702  
0000289E  3410                    2703  ADDISIZEW   MOVE.W  (A0),D2 
000028A0  1A3C 0008               2704              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
000028A4  5488                    2705              ADDA.L  #$2, A0 
000028A6                          2706          
000028A6  6000 000E               2707              BRA     ADDIDEST *Branches to destination
000028AA                          2708  
000028AA  2410                    2709  ADDISIZEL   MOVE.L  (A0),D2 
000028AC  1A3C 0008               2710              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
000028B0  5888                    2711              ADDA.L  #$4, A0
000028B2                          2712              
000028B2  6000 0002               2713              BRA     ADDIDEST
000028B6                          2714              
000028B6  2200                    2715  ADDIDEST    MOVE.L  D0, D1
000028B8  C2BC 00000038           2716              AND.L   #$38, D1    *Isolate source mode
000028BE                          2717              
000028BE  B2BC 00000000           2718              CMP.L   #$0, D1     *Check if 000
000028C4  6700 002E               2719              BEQ     ADDIDATAREG
000028C8                          2720              
000028C8  B2BC 00000010           2721              CMP.L   #$10, D1    *Check if 010
000028CE  6700 0034               2722              BEQ     ADDIINADDRREG
000028D2                          2723              
000028D2  B2BC 00000018           2724              CMP.L   #$18, D1    *Check if 011
000028D8  6700 003A               2725              BEQ     ADDIPLUSADDRREG
000028DC                          2726              
000028DC  B2BC 00000020           2727              CMP.L   #$20, D1    *Check if 100
000028E2  6700 0040               2728              BEQ     ADDIMINUSADDRREG
000028E6                          2729              
000028E6  B2BC 00000038           2730              CMP.L   #$38, D1     *Check if 111
000028EC  6700 0046               2731              BEQ     ADDIADDRESS
000028F0                          2732              
000028F0  6000 E836               2733              BRA     INVALIDOPCODE
000028F4                          2734              
000028F4  2200                    2735  ADDIDATAREG MOVE.L  D0, D1
000028F6  C2BC 00000007           2736              AND.L   #$7, D1     *Isolate register
000028FC  2401                    2737              MOVE.L  D1, D2      *Move value of Dn
000028FE  1A3C 0000               2738              MOVE.B  #$0, D5     *Move type of source
00002902                          2739              
00002902  4E75                    2740              RTS
00002904                          2741              
00002904  2200                    2742  ADDIINADDRREG MOVE.L  D0, D1
00002906  C2BC 00000007           2743              AND.L   #$7, D1     *Isolate register
0000290C  2401                    2744              MOVE.L  D1, D2      *Move value of an
0000290E  1A3C 0003               2745              MOVE.B  #$3, D5     *Move type of source
00002912                          2746              
00002912  4E75                    2747              RTS
00002914                          2748              
00002914  2200                    2749  ADDIPLUSADDRREG MOVE.L  D0, D1
00002916  C2BC 00000007           2750              AND.L   #$7, D1     *Isolate register
0000291C  2401                    2751              MOVE.L  D1, D2      *Move value of an
0000291E  1A3C 0004               2752              MOVE.B  #$4, D5     *Move type of source
00002922                          2753              
00002922  4E75                    2754              RTS
00002924                          2755              
00002924  2200                    2756  ADDIMINUSADDRREG MOVE.L  D0, D1
00002926  C2BC 00000007           2757              AND.L   #$7, D1     *Isolate register
0000292C  2401                    2758              MOVE.L  D1, D2      *Move value of an
0000292E  1A3C 0005               2759              MOVE.B  #$5, D5     *Move type of source
00002932                          2760              
00002932  4E75                    2761              RTS
00002934                          2762              
00002934  2200                    2763  ADDIADDRESS MOVE.L  D0, D1
00002936  C2BC 00000007           2764              AND.L   #$7, D1     *Isolate register
0000293C                          2765              
0000293C  B2BC 00000000           2766              CMP.L   #$0, D1     *Check if 000
00002942  6700 0010               2767              BEQ     ADDIADDRW
00002946                          2768              
00002946  B2BC 00000001           2769              CMP.L   #$1, D1     *Check if 001
0000294C  6700 0010               2770              BEQ     ADDIADDRL
00002950                          2771              
00002950  6000 E7D6               2772              BRA     INVALIDOPCODE
00002954                          2773              
00002954  3410                    2774  ADDIADDRW   MOVE.W  (A0),D2     *Move addr
00002956  1A3C 0006               2775              MOVE.B  #$6, D5     *Store type
0000295A  5488                    2776              ADDA.L  #$2, A0 
0000295C                          2777              
0000295C  4E75                    2778              RTS
0000295E                          2779  
0000295E  2410                    2780  ADDIADDRL   MOVE.L  (A0),D2     *Move addr
00002960  1A3C 0007               2781              MOVE.B  #$7, D5     *Store type
00002964  5888                    2782              ADDA.L  #$4, A0 
00002966                          2783              
00002966  4E75                    2784              RTS
00002968                          2785  
00002968                          2786  
00002968                          2787  
00002968                          2788              
00002968                          2789              
00002968  3200                    2790  SUBEA           MOVE.W  D0, D1
0000296A  C27C 01C0               2791                  AND.W   #$1C0, D1     *Isolate opmode
0000296E                          2792                  
0000296E  B27C 0100               2793                  CMP.W   #$100, D1     *Check if < 100
00002972  6D00 00B2               2794                  BLT     SUBEADN
00002976                          2795                  
00002976  6000 0002               2796                  BRA     SUBDNEA
0000297A                          2797                  
0000297A  3200                    2798  SUBDNEA         MOVE.W  D0, D1
0000297C  C27C 0E00               2799                  AND.W   #$E00, D1   *Isolate register
00002980  E081                    2800                  ASR.L   #8, D1
00002982  E281                    2801                  ASR.L   #1, D1
00002984  3401                    2802                  MOVE.W  D1, D2      *Move register to d2
00002986  1A3C 0000               2803                  MOVE.B  #$0, D5
0000298A                          2804                  
0000298A  6000 0002               2805                  BRA     SUBEADEST
0000298E                          2806                  
0000298E  2200                    2807  SUBEADEST       MOVE.L  D0, D1
00002990  C2BC 00000038           2808                  AND.L   #$38, D1    *Isolate mode
00002996                          2809              
00002996  B2BC 00000010           2810                  CMP.L   #$10, D1    *Check if 010
0000299C  6700 0024               2811                  BEQ     SUBINADDRREGD
000029A0                          2812              
000029A0  B2BC 00000018           2813                  CMP.L   #$18, D1    *Check if 011
000029A6  6700 002A               2814                  BEQ     SUBPLUSADDRREGD
000029AA                          2815              
000029AA  B2BC 00000020           2816                  CMP.L   #$20, D1    *Check if 100
000029B0  6700 0030               2817                  BEQ     SUBMINUSADDRREGD
000029B4                          2818              
000029B4  B2BC 00000038           2819                  CMP.L   #$38, D1     *Check if 111
000029BA  6700 0036               2820                  BEQ     SUBADDRESSD
000029BE                          2821                  
000029BE  6000 E768               2822                  BRA     INVALIDOPCODE
000029C2                          2823                  
000029C2                          2824              
000029C2  2200                    2825  SUBINADDRREGD MOVE.L  D0, D1
000029C4  C2BC 00000007           2826              AND.L   #$7, D1     *Isolate register
000029CA  2601                    2827              MOVE.L  D1, D3      *Move value of an
000029CC  1C3C 0003               2828              MOVE.B  #$3, D6     *Move type of source
000029D0                          2829              
000029D0  4E75                    2830              RTS
000029D2                          2831              
000029D2  2200                    2832  SUBPLUSADDRREGD MOVE.L  D0, D1
000029D4  C2BC 00000007           2833              AND.L   #$7, D1     *Isolate register
000029DA  2601                    2834              MOVE.L  D1, D3      *Move value of an
000029DC  1C3C 0004               2835              MOVE.B  #$4, D6     *Move type of source
000029E0                          2836              
000029E0  4E75                    2837              RTS
000029E2                          2838              
000029E2  2200                    2839  SUBMINUSADDRREGD MOVE.L  D0, D1
000029E4  C2BC 00000007           2840              AND.L   #$7, D1     *Isolate register
000029EA  2601                    2841              MOVE.L  D1, D3      *Move value of an
000029EC  1C3C 0005               2842              MOVE.B  #$5, D6     *Move type of source
000029F0                          2843              
000029F0  4E75                    2844              RTS
000029F2                          2845              
000029F2  2200                    2846  SUBADDRESSD MOVE.L  D0, D1
000029F4  C2BC 00000007           2847              AND.L   #$7, D1     *Isolate register
000029FA                          2848              
000029FA  B2BC 00000000           2849              CMP.L   #$0, D1     *Check if 000
00002A00  6700 0010               2850              BEQ     SUBADDRWD
00002A04                          2851              
00002A04  B2BC 00000001           2852              CMP.L   #$1, D1     *Check if 001
00002A0A  6700 0010               2853              BEQ     SUBADDRLD
00002A0E                          2854              
00002A0E  6000 E718               2855              BRA     INVALIDOPCODE
00002A12                          2856              
00002A12  3610                    2857  SUBADDRWD   MOVE.W  (A0),D3     *Move addr
00002A14  1C3C 0006               2858              MOVE.B  #$6, D6     *Store type
00002A18  5488                    2859              ADDA.L  #$2, A0 
00002A1A                          2860              
00002A1A  4E75                    2861              RTS
00002A1C                          2862  
00002A1C  2610                    2863  SUBADDRLD   MOVE.L  (A0),D3     *Move addr
00002A1E  1C3C 0007               2864              MOVE.B  #$7, D6     *Store type
00002A22  5888                    2865              ADDA.L  #$4, A0
00002A24                          2866              
00002A24  4E75                    2867              RTS
00002A26                          2868                  
00002A26  2200                    2869  SUBEADN     MOVE.L  D0, D1
00002A28  C2BC 00000038           2870              AND.L   #$38, D1    *Isolate source mode
00002A2E                          2871              
00002A2E  B2BC 00000000           2872              CMP.L   #$0, D1     *Check if 000
00002A34  6700 0038               2873              BEQ     SUBDATAREG
00002A38                          2874              
00002A38  B2BC 00000008           2875              CMP.L   #$8, D1     *Check if 001
00002A3E  6700 0040               2876              BEQ     SUBADDRREG
00002A42                          2877              
00002A42  B2BC 00000010           2878              CMP.L   #$10, D1    *Check if 010
00002A48  6700 0048               2879              BEQ     SUBINADDRREG
00002A4C                          2880              
00002A4C  B2BC 00000018           2881              CMP.L   #$18, D1    *Check if 011
00002A52  6700 0050               2882              BEQ     SUBPLUSADDRREG
00002A56                          2883              
00002A56  B2BC 00000020           2884              CMP.L   #$20, D1    *Check if 100
00002A5C  6700 0058               2885              BEQ     SUBMINUSADDRREG
00002A60                          2886              
00002A60  B2BC 00000038           2887              CMP.L   #$38, D1     *Check if 111
00002A66  6700 0060               2888              BEQ     SUBADDRESSDATA
00002A6A                          2889              
00002A6A  6000 E6BC               2890              BRA     INVALIDOPCODE
00002A6E                          2891                  
00002A6E  2200                    2892  SUBDATAREG  MOVE.L  D0, D1
00002A70  C2BC 00000007           2893              AND.L   #$7, D1     *Isolate register
00002A76  2401                    2894              MOVE.L  D1, D2      *Move value of Dn
00002A78  1A3C 0000               2895              MOVE.B  #$0, D5     *Move type of source
00002A7C                          2896              
00002A7C  6000 00C8               2897              BRA     SUBDNDEST
00002A80                          2898              
00002A80  2200                    2899  SUBADDRREG  MOVE.L  D0, D1
00002A82  C2BC 00000007           2900              AND.L   #$7, D1     *Isolate register
00002A88  2401                    2901              MOVE.L  D1, D2      *Move value of An
00002A8A  1A3C 0001               2902              MOVE.B  #$1, D5     *Move type of source
00002A8E                          2903              
00002A8E  6000 00B6               2904              BRA     SUBDNDEST
00002A92                          2905              
00002A92  2200                    2906  SUBINADDRREG MOVE.L  D0, D1
00002A94  C2BC 00000007           2907              AND.L   #$7, D1     *Isolate register
00002A9A  2401                    2908              MOVE.L  D1, D2      *Move value of an
00002A9C  1A3C 0003               2909              MOVE.B  #$3, D5     *Move type of source
00002AA0                          2910              
00002AA0  6000 00A4               2911              BRA     SUBDNDEST
00002AA4                          2912              
00002AA4  2200                    2913  SUBPLUSADDRREG MOVE.L  D0, D1
00002AA6  C2BC 00000007           2914              AND.L   #$7, D1     *Isolate register
00002AAC  2401                    2915              MOVE.L  D1, D2      *Move value of an
00002AAE  1A3C 0004               2916              MOVE.B  #$4, D5     *Move type of source
00002AB2                          2917              
00002AB2  6000 0092               2918              BRA     SUBDNDEST
00002AB6                          2919              
00002AB6  2200                    2920  SUBMINUSADDRREG MOVE.L  D0, D1
00002AB8  C2BC 00000007           2921              AND.L   #$7, D1     *Isolate register
00002ABE  2401                    2922              MOVE.L  D1, D2      *Move value of an
00002AC0  1A3C 0005               2923              MOVE.B  #$5, D5     *Move type of source
00002AC4                          2924              
00002AC4  6000 0080               2925              BRA     SUBDNDEST
00002AC8                          2926              
00002AC8  2200                    2927  SUBADDRESSDATA MOVE.L  D0, D1
00002ACA  C2BC 00000007           2928              AND.L   #$7, D1     *Isolate register
00002AD0                          2929              
00002AD0  B2BC 00000000           2930              CMP.L   #$0, D1     *Check if 000
00002AD6  6700 001A               2931              BEQ     SUBADDRW
00002ADA                          2932              
00002ADA  B2BC 00000001           2933              CMP.L   #$1, D1     *Check if 001
00002AE0  6700 001C               2934              BEQ     SUBADDRL
00002AE4                          2935              
00002AE4  B2BC 00000004           2936              CMP.L   #$4, D1     *Check if 100
00002AEA  6700 001E               2937              BEQ     SUBDATA
00002AEE                          2938              
00002AEE  6000 E638               2939              BRA     INVALIDOPCODE
00002AF2                          2940              
00002AF2  3410                    2941  SUBADDRW    MOVE.W  (A0),D2     *Move addr
00002AF4  1A3C 0006               2942              MOVE.B  #$6, D5     *Store type
00002AF8  5488                    2943              ADDA.L  #$2, A0 
00002AFA                          2944              
00002AFA  6000 004A               2945              BRA     SUBDNDEST
00002AFE                          2946  
00002AFE  2410                    2947  SUBADDRL    MOVE.L  (A0),D2     *Move addr
00002B00  1A3C 0007               2948              MOVE.B  #$7, D5     *Store type
00002B04  5888                    2949              ADDA.L  #$4, A0 
00002B06                          2950              
00002B06  6000 003E               2951              BRA     SUBDNDEST
00002B0A                          2952              
00002B0A  BE3C 0001               2953  SUBDATA     CMP.B   #$1,D7     *Compare if the size is a byte  
00002B0E  6700 0012               2954              BEQ     SUBSIZEB
00002B12                          2955      
00002B12  BE3C 0002               2956              CMP.B   #$2,D7     *Compare if the size is a word 
00002B16  6700 0016               2957              BEQ     SUBSIZEW
00002B1A                          2958      
00002B1A  BE3C 0003               2959              CMP.B   #$3,D7     *Compare if the size is a long 
00002B1E  6700 001A               2960              BEQ     SUBSIZEL 
00002B22                          2961  
00002B22  3410                    2962  SUBSIZEB    MOVE.W  (A0),D2 
00002B24  1A3C 0008               2963              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002B28  5488                    2964              ADDA.L  #$2, A0 
00002B2A                          2965          
00002B2A  6000 001A               2966              BRA     SUBDNDEST *Branches to destination
00002B2E                          2967  
00002B2E  3410                    2968  SUBSIZEW    MOVE.W  (A0),D2 
00002B30  1A3C 0008               2969              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002B34  5488                    2970              ADDA.L  #$2, A0 
00002B36                          2971          
00002B36  6000 000E               2972              BRA     SUBDNDEST *Branches to destination
00002B3A                          2973  
00002B3A  2410                    2974  SUBSIZEL    MOVE.L  (A0),D2 
00002B3C  1A3C 0008               2975              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002B40  5888                    2976              ADDA.L  #$4, A0 
00002B42                          2977          
00002B42  6000 0002               2978              BRA     SUBDNDEST *Branches to destination
00002B46                          2979              
00002B46  3200                    2980  SUBDNDEST   MOVE.W  D0, D1
00002B48  C27C 0E00               2981              AND.W   #$E00, D1   *Isolate register
00002B4C  E081                    2982              ASR.L   #8, D1
00002B4E  E281                    2983              ASR.L   #1, D1
00002B50  3601                    2984              MOVE.W  D1, D3      *Move register to d3
00002B52  1C3C 0000               2985              MOVE.B  #$0, D6
00002B56                          2986              
00002B56  4E75                    2987              RTS
00002B58                          2988  
00002B58                          2989  
00002B58                          2990  
00002B58  2200                    2991  MULSEA      MOVE.L  D0, D1
00002B5A  C2BC 00000038           2992              AND.L   #$38, D1    *Isolate source mode
00002B60                          2993              
00002B60  B2BC 00000000           2994              CMP.L   #$0, D1     *Check if 000
00002B66  6700 002E               2995              BEQ     MULSDATAREG
00002B6A                          2996              
00002B6A  B2BC 00000010           2997              CMP.L   #$10, D1    *Check if 010
00002B70  6700 0036               2998              BEQ     MULSINADDRREG
00002B74                          2999              
00002B74  B2BC 00000018           3000              CMP.L   #$18, D1    *Check if 011
00002B7A  6700 003E               3001              BEQ     MULSPLUSADDRREG
00002B7E                          3002              
00002B7E  B2BC 00000020           3003              CMP.L   #$20, D1    *Check if 100
00002B84  6700 0046               3004              BEQ     MULSMINUSADDRREG
00002B88                          3005              
00002B88  B2BC 00000038           3006              CMP.L   #$38, D1     *Check if 111
00002B8E  6700 004E               3007              BEQ     MULSADDRESSDATA
00002B92                          3008              
00002B92  6000 E594               3009              BRA     INVALIDOPCODE
00002B96                          3010                  
00002B96  2200                    3011  MULSDATAREG MOVE.L  D0, D1
00002B98  C2BC 00000007           3012              AND.L   #$7, D1     *Isolate register
00002B9E  2401                    3013              MOVE.L  D1, D2      *Move value of Dn
00002BA0  1A3C 0000               3014              MOVE.B  #$0, D5     *Move type of source
00002BA4                          3015              
00002BA4  6000 00B6               3016              BRA     MULSDEST
00002BA8                          3017              
00002BA8  2200                    3018  MULSINADDRREG MOVE.L  D0, D1
00002BAA  C2BC 00000007           3019              AND.L   #$7, D1     *Isolate register
00002BB0  2401                    3020              MOVE.L  D1, D2      *Move value of an
00002BB2  1A3C 0003               3021              MOVE.B  #$3, D5     *Move type of source
00002BB6                          3022              
00002BB6  6000 00A4               3023              BRA     MULSDEST 
00002BBA                          3024             
00002BBA  2200                    3025  MULSPLUSADDRREG MOVE.L  D0, D1
00002BBC  C2BC 00000007           3026              AND.L   #$7, D1     *Isolate register
00002BC2  2401                    3027              MOVE.L  D1, D2      *Move value of an
00002BC4  1A3C 0004               3028              MOVE.B  #$4, D5     *Move type of source
00002BC8                          3029              
00002BC8  6000 0092               3030              BRA     MULSDEST 
00002BCC                          3031              
00002BCC  2200                    3032  MULSMINUSADDRREG MOVE.L  D0, D1
00002BCE  C2BC 00000007           3033              AND.L   #$7, D1     *Isolate register
00002BD4  2401                    3034              MOVE.L  D1, D2      *Move value of an
00002BD6  1A3C 0005               3035              MOVE.B  #$5, D5     *Move type of source
00002BDA                          3036              
00002BDA  6000 0080               3037              BRA     MULSDEST 
00002BDE                          3038              
00002BDE  2200                    3039  MULSADDRESSDATA MOVE.L  D0, D1
00002BE0  C2BC 00000007           3040              AND.L   #$7, D1     *Isolate register
00002BE6                          3041              
00002BE6  B2BC 00000000           3042              CMP.L   #$0, D1     *Check if 000
00002BEC  6700 001A               3043              BEQ     MULSADDRW
00002BF0                          3044              
00002BF0  B2BC 00000001           3045              CMP.L   #$1, D1     *Check if 001
00002BF6  6700 001C               3046              BEQ     MULSADDRL
00002BFA                          3047              
00002BFA  B2BC 00000004           3048              CMP.L   #$4, D1     *Check if 100
00002C00  6700 001E               3049              BEQ     MULSDATA
00002C04                          3050              
00002C04  6000 E522               3051              BRA     INVALIDOPCODE
00002C08                          3052              
00002C08  3410                    3053  MULSADDRW   MOVE.W  (A0),D2     *Move addr
00002C0A  1A3C 0006               3054              MOVE.B  #$6, D5     *Store type
00002C0E  5488                    3055              ADDA.L  #$2, A0 
00002C10                          3056              
00002C10  6000 004A               3057              BRA     MULSDEST
00002C14                          3058  
00002C14  2410                    3059  MULSADDRL   MOVE.L  (A0),D2     *Move addr
00002C16  1A3C 0007               3060              MOVE.B  #$7, D5     *Store type
00002C1A  5888                    3061              ADDA.L  #$4, A0 
00002C1C                          3062              
00002C1C  6000 003E               3063              BRA     MULSDEST
00002C20                          3064              
00002C20  BE3C 0001               3065  MULSDATA    CMP.B   #$1,D7     *Compare if the size is a byte  
00002C24  6700 0012               3066              BEQ     MULSSIZEB
00002C28                          3067      
00002C28  BE3C 0002               3068              CMP.B   #$2,D7     *Compare if the size is a word 
00002C2C  6700 0016               3069              BEQ     MULSSIZEW
00002C30                          3070      
00002C30  BE3C 0003               3071              CMP.B   #$3,D7     *Compare if the size is a long 
00002C34  6700 001A               3072              BEQ     MULSSIZEL 
00002C38                          3073  
00002C38  3410                    3074  MULSSIZEB   MOVE.W  (A0),D2 
00002C3A  1A3C 0008               3075              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002C3E  5488                    3076              ADDA.L  #$2, A0 
00002C40                          3077          
00002C40  6000 001A               3078              BRA     MULSDEST *Branches to destination
00002C44                          3079  
00002C44  3410                    3080  MULSSIZEW   MOVE.W  (A0),D2 
00002C46  1A3C 0008               3081              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002C4A  5488                    3082              ADDA.L  #$2, A0 
00002C4C                          3083          
00002C4C  6000 000E               3084              BRA     MULSDEST *Branches to destination
00002C50                          3085  
00002C50  2410                    3086  MULSSIZEL   MOVE.L  (A0),D2 
00002C52  1A3C 0008               3087              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002C56  5888                    3088              ADDA.L  #$4, A0 
00002C58                          3089          
00002C58  6000 0002               3090              BRA     MULSDEST *Branches to destination
00002C5C                          3091              
00002C5C  3200                    3092  MULSDEST    MOVE.W  D0, D1
00002C5E  C27C 0E00               3093              AND.W   #$E00, D1   *Isolate register
00002C62  E081                    3094              ASR.L   #8, D1
00002C64  E281                    3095              ASR.L   #1, D1
00002C66  3601                    3096              MOVE.W  D1, D3      *Move register to d3
00002C68  1C3C 0000               3097              MOVE.B  #$0, D6
00002C6C                          3098              
00002C6C  4E75                    3099              RTS
00002C6E                          3100  
00002C6E                          3101  
00002C6E                          3102  
00002C6E                          3103  
00002C6E  2200                    3104  DIVUEA      MOVE.L  D0, D1
00002C70  C2BC 00000038           3105              AND.L   #$38, D1    *Isolate source mode
00002C76                          3106              
00002C76  B2BC 00000000           3107              CMP.L   #$0, D1     *Check if 000
00002C7C  6700 002E               3108              BEQ     DIVUDATAREG
00002C80                          3109              
00002C80  B2BC 00000010           3110              CMP.L   #$10, D1    *Check if 010
00002C86  6700 0036               3111              BEQ     DIVUINADDRREG
00002C8A                          3112              
00002C8A  B2BC 00000018           3113              CMP.L   #$18, D1    *Check if 011
00002C90  6700 003E               3114              BEQ     DIVUPLUSADDRREG
00002C94                          3115              
00002C94  B2BC 00000020           3116              CMP.L   #$20, D1    *Check if 100
00002C9A  6700 0046               3117              BEQ     DIVUMINUSADDRREG
00002C9E                          3118              
00002C9E  B2BC 00000038           3119              CMP.L   #$38, D1     *Check if 111
00002CA4  6700 004E               3120              BEQ     DIVUADDRESSDATA
00002CA8                          3121              
00002CA8  6000 E47E               3122              BRA     INVALIDOPCODE
00002CAC                          3123                  
00002CAC  2200                    3124  DIVUDATAREG MOVE.L  D0, D1
00002CAE  C2BC 00000007           3125              AND.L   #$7, D1     *Isolate register
00002CB4  2401                    3126              MOVE.L  D1, D2      *Move value of Dn
00002CB6  1A3C 0000               3127              MOVE.B  #$0, D5     *Move type of source
00002CBA                          3128              
00002CBA  6000 00B6               3129              BRA     DIVUDEST
00002CBE                          3130              
00002CBE  2200                    3131  DIVUINADDRREG MOVE.L  D0, D1
00002CC0  C2BC 00000007           3132              AND.L   #$7, D1     *Isolate register
00002CC6  2401                    3133              MOVE.L  D1, D2      *Move value of an
00002CC8  1A3C 0003               3134              MOVE.B  #$3, D5     *Move type of source
00002CCC                          3135              
00002CCC  6000 00A4               3136              BRA     DIVUDEST 
00002CD0                          3137             
00002CD0  2200                    3138  DIVUPLUSADDRREG MOVE.L  D0, D1
00002CD2  C2BC 00000007           3139              AND.L   #$7, D1     *Isolate register
00002CD8  2401                    3140              MOVE.L  D1, D2      *Move value of an
00002CDA  1A3C 0004               3141              MOVE.B  #$4, D5     *Move type of source
00002CDE                          3142              
00002CDE  6000 0092               3143              BRA     DIVUDEST 
00002CE2                          3144              
00002CE2  2200                    3145  DIVUMINUSADDRREG MOVE.L  D0, D1
00002CE4  C2BC 00000007           3146              AND.L   #$7, D1     *Isolate register
00002CEA  2401                    3147              MOVE.L  D1, D2      *Move value of an
00002CEC  1A3C 0005               3148              MOVE.B  #$5, D5     *Move type of source
00002CF0                          3149              
00002CF0  6000 0080               3150              BRA     DIVUDEST 
00002CF4                          3151              
00002CF4  2200                    3152  DIVUADDRESSDATA MOVE.L  D0, D1
00002CF6  C2BC 00000007           3153              AND.L   #$7, D1     *Isolate register
00002CFC                          3154              
00002CFC  B2BC 00000000           3155              CMP.L   #$0, D1     *Check if 000
00002D02  6700 001A               3156              BEQ     DIVUADDRW
00002D06                          3157              
00002D06  B2BC 00000001           3158              CMP.L   #$1, D1     *Check if 001
00002D0C  6700 001C               3159              BEQ     DIVUADDRL
00002D10                          3160              
00002D10  B2BC 00000004           3161              CMP.L   #$4, D1     *Check if 100
00002D16  6700 001E               3162              BEQ     DIVUDATA
00002D1A                          3163              
00002D1A  6000 E40C               3164              BRA     INVALIDOPCODE
00002D1E                          3165              
00002D1E  3410                    3166  DIVUADDRW   MOVE.W  (A0),D2     *Move addr
00002D20  1A3C 0006               3167              MOVE.B  #$6, D5     *Store type
00002D24  5488                    3168              ADDA.L  #$2, A0 
00002D26                          3169              
00002D26  6000 004A               3170              BRA     DIVUDEST
00002D2A                          3171  
00002D2A  2410                    3172  DIVUADDRL   MOVE.L  (A0),D2     *Move addr
00002D2C  1A3C 0007               3173              MOVE.B  #$7, D5     *Store type
00002D30  5888                    3174              ADDA.L  #$4, A0 
00002D32                          3175              
00002D32  6000 003E               3176              BRA     DIVUDEST
00002D36                          3177              
00002D36  BE3C 0001               3178  DIVUDATA    CMP.B   #$1,D7     *Compare if the size is a byte  
00002D3A  6700 0012               3179              BEQ     DIVUSIZEB
00002D3E                          3180      
00002D3E  BE3C 0002               3181              CMP.B   #$2,D7     *Compare if the size is a word 
00002D42  6700 0016               3182              BEQ     DIVUSIZEW
00002D46                          3183      
00002D46  BE3C 0003               3184              CMP.B   #$3,D7     *Compare if the size is a long 
00002D4A  6700 001A               3185              BEQ     DIVUSIZEL 
00002D4E                          3186  
00002D4E  3410                    3187  DIVUSIZEB   MOVE.W  (A0),D2 
00002D50  1A3C 0008               3188              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002D54  5488                    3189              ADDA.L  #$2, A0 
00002D56                          3190          
00002D56  6000 001A               3191              BRA     DIVUDEST *Branches to destination
00002D5A                          3192  
00002D5A  3410                    3193  DIVUSIZEW   MOVE.W  (A0),D2 
00002D5C  1A3C 0008               3194              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002D60  5488                    3195              ADDA.L  #$2, A0 
00002D62                          3196          
00002D62  6000 000E               3197              BRA     DIVUDEST *Branches to destination
00002D66                          3198  
00002D66  2410                    3199  DIVUSIZEL   MOVE.L  (A0),D2 
00002D68  1A3C 0008               3200              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00002D6C  5888                    3201              ADDA.L  #$4, A0 
00002D6E                          3202          
00002D6E  6000 0002               3203              BRA     DIVUDEST *Branches to destination
00002D72                          3204              
00002D72  3200                    3205  DIVUDEST    MOVE.W  D0, D1
00002D74  C27C 0E00               3206              AND.W   #$E00, D1   *Isolate register
00002D78  E081                    3207              ASR.L   #8, D1
00002D7A  E281                    3208              ASR.L   #1, D1
00002D7C  3601                    3209              MOVE.W  D1, D3      *Move register to d3
00002D7E  1C3C 0000               3210              MOVE.B  #$0, D6
00002D82                          3211              
00002D82  4E75                    3212              RTS
00002D84                          3213  
00002D84                          3214  
00002D84                          3215  
00002D84  2200                    3216  LEAEA       MOVE.L  D0, D1
00002D86  C2BC 00000038           3217              AND.L   #$38, D1    *Isolate source mode
00002D8C                          3218              
00002D8C  B2BC 00000010           3219              CMP.L   #$10, D1    *Check if 010
00002D92  6700 0010               3220              BEQ     LEAINADDRREG
00002D96                          3221              
00002D96  B2BC 00000038           3222              CMP.L   #$38, D1     *Check if 111
00002D9C  6700 0018               3223              BEQ     LEAADDRESS
00002DA0                          3224              
00002DA0  6000 E386               3225              BRA     INVALIDOPCODE
00002DA4                          3226              
00002DA4  2200                    3227  LEAINADDRREG MOVE.L  D0, D1
00002DA6  C2BC 00000007           3228              AND.L   #$7, D1     *Isolate register
00002DAC  2401                    3229              MOVE.L  D1, D2      *Move value of an
00002DAE  1A3C 0003               3230              MOVE.B  #$3, D5     *Move type of source
00002DB2                          3231              
00002DB2  6000 0036               3232              BRA     LEADEST 
00002DB6                          3233              
00002DB6  2200                    3234  LEAADDRESS  MOVE.L  D0, D1
00002DB8  C2BC 00000007           3235              AND.L   #$7, D1     *Isolate register
00002DBE                          3236              
00002DBE  B2BC 00000000           3237              CMP.L   #$0, D1     *Check if 000
00002DC4  6700 000C               3238              BEQ     LEAADDRW
00002DC8                          3239              
00002DC8  B2BC 00000001           3240              CMP.L   #$1, D1     *Check if 001
00002DCE  6700 000E               3241              BEQ     LEAADDRL
00002DD2                          3242              
00002DD2  3410                    3243  LEAADDRW    MOVE.W  (A0),D2     *Move addr
00002DD4  1A3C 0006               3244              MOVE.B  #$6, D5     *Store type
00002DD8  5488                    3245              ADDA.L  #$2, A0 
00002DDA                          3246              
00002DDA  6000 000E               3247              BRA     LEADEST 
00002DDE                          3248  
00002DDE  2410                    3249  LEAADDRL    MOVE.L  (A0),D2     *Move addr
00002DE0  1A3C 0007               3250              MOVE.B  #$7, D5     *Store type
00002DE4  5888                    3251              ADDA.L  #$4, A0
00002DE6                          3252              
00002DE6  6000 0002               3253              BRA     LEADEST 
00002DEA                          3254              
00002DEA  3200                    3255  LEADEST     MOVE.W  D0, D1
00002DEC  C27C 0E00               3256              AND.W   #$E00, D1   *Isolate register
00002DF0  E081                    3257              ASR.L   #8, D1
00002DF2  E281                    3258              ASR.L   #1, D1
00002DF4  3601                    3259              MOVE.W  D1, D3      *Move register to d3
00002DF6  1C3C 0001               3260              MOVE.B  #$1, D6
00002DFA                          3261              
00002DFA  4E75                    3262              RTS
00002DFC                          3263              
00002DFC                          3264              
00002DFC                          3265              
00002DFC  7CFF                    3266  CLREA       MOVE.L  #-1, D6
00002DFE  2200                    3267              MOVE.L  D0, D1
00002E00  C2BC 00000038           3268              AND.L   #$38, D1    *Isolate source mode
00002E06                          3269              
00002E06  B2BC 00000000           3270              CMP.L   #$0, D1     *Check if 000
00002E0C  6700 002E               3271              BEQ     CLRDATAREG
00002E10                          3272              
00002E10  B2BC 00000010           3273              CMP.L   #$10, D1    *Check if 010
00002E16  6700 0034               3274              BEQ     CLRINADDRREG
00002E1A                          3275              
00002E1A  B2BC 00000018           3276              CMP.L   #$18, D1    *Check if 011
00002E20  6700 003A               3277              BEQ     CLRPLUSADDRREG
00002E24                          3278              
00002E24  B2BC 00000020           3279              CMP.L   #$20, D1    *Check if 100
00002E2A  6700 0040               3280              BEQ     CLRMINUSADDRREG
00002E2E                          3281              
00002E2E  B2BC 00000038           3282              CMP.L   #$38, D1     *Check if 111
00002E34  6700 0046               3283              BEQ     CLRADDRESS            
00002E38                          3284              
00002E38  6000 E2EE               3285              BRA     INVALIDOPCODE
00002E3C                          3286  
00002E3C  2200                    3287  CLRDATAREG  MOVE.L  D0, D1
00002E3E  C2BC 00000007           3288              AND.L   #$7, D1     *Isolate register
00002E44  2401                    3289              MOVE.L  D1, D2      *Move value of Dn
00002E46  1A3C 0000               3290              MOVE.B  #$0, D5     *Move type of source
00002E4A                          3291              
00002E4A  4E75                    3292              RTS
00002E4C                          3293              
00002E4C  2200                    3294  CLRINADDRREG MOVE.L  D0, D1
00002E4E  C2BC 00000007           3295              AND.L   #$7, D1     *Isolate register
00002E54  2401                    3296              MOVE.L  D1, D2      *Move value of an
00002E56  1A3C 0003               3297              MOVE.B  #$3, D5     *Move type of source
00002E5A                          3298              
00002E5A  4E75                    3299              RTS
00002E5C                          3300             
00002E5C  2200                    3301  CLRPLUSADDRREG MOVE.L  D0, D1
00002E5E  C2BC 00000007           3302              AND.L   #$7, D1     *Isolate register
00002E64  2401                    3303              MOVE.L  D1, D2      *Move value of an
00002E66  1A3C 0004               3304              MOVE.B  #$4, D5     *Move type of source
00002E6A                          3305              
00002E6A  4E75                    3306              RTS
00002E6C                          3307              
00002E6C  2200                    3308  CLRMINUSADDRREG MOVE.L  D0, D1
00002E6E  C2BC 00000007           3309              AND.L   #$7, D1     *Isolate register
00002E74  2401                    3310              MOVE.L  D1, D2      *Move value of an
00002E76  1A3C 0005               3311              MOVE.B  #$5, D5     *Move type of source
00002E7A                          3312              
00002E7A  4E75                    3313              RTS
00002E7C                          3314              
00002E7C  2200                    3315  CLRADDRESS  MOVE.L  D0, D1
00002E7E  C2BC 00000007           3316              AND.L   #$7, D1     *Isolate register
00002E84                          3317              
00002E84  B2BC 00000000           3318              CMP.L   #$0, D1     *Check if 000
00002E8A  6700 FE92               3319              BEQ     DIVUADDRW
00002E8E                          3320              
00002E8E  B2BC 00000001           3321              CMP.L   #$1, D1     *Check if 001
00002E94  6700 FE94               3322              BEQ     DIVUADDRL
00002E98                          3323              
00002E98  6000 E28E               3324              BRA     INVALIDOPCODE
00002E9C                          3325              
00002E9C  3410                    3326  CLRADDRW    MOVE.W  (A0),D2     *Move addr
00002E9E  1A3C 0006               3327              MOVE.B  #$6, D5     *Store type
00002EA2  5488                    3328              ADDA.L  #$2, A0 
00002EA4                          3329              
00002EA4  4E75                    3330              RTS
00002EA6                          3331  
00002EA6  2410                    3332  CLRADDRL    MOVE.L  (A0),D2     *Move addr
00002EA8  1A3C 0007               3333              MOVE.B  #$7, D5     *Store type
00002EAC  5888                    3334              ADDA.L  #$4, A0
00002EAE                          3335              
00002EAE  4E75                    3336              RTS
00002EB0                          3337  
00002EB0                          3338  
00002EB0                          3339  
00002EB0                          3340  
00002EB0  3200                    3341  ANDEA           MOVE.W  D0, D1
00002EB2  C27C 01C0               3342                  AND.W   #$1C0, D1     *Isolate opmode
00002EB6                          3343                  
00002EB6  B27C 0100               3344                  CMP.W   #$100, D1     *Check if < 100
00002EBA  6D00 00B2               3345                  BLT     ANDEADN
00002EBE                          3346                  
00002EBE  6000 0002               3347                  BRA     ANDDNEA
00002EC2                          3348                  
00002EC2  3200                    3349  ANDDNEA         MOVE.W  D0, D1
00002EC4  C27C 0E00               3350                  AND.W   #$E00, D1   *Isolate register
00002EC8  E081                    3351                  ASR.L   #8, D1
00002ECA  E281                    3352                  ASR.L   #1, D1
00002ECC  3401                    3353                  MOVE.W  D1, D2      *Move register to d2
00002ECE  1A3C 0000               3354                  MOVE.B  #$0, D5
00002ED2                          3355                  
00002ED2  6000 0002               3356                  BRA     ANDEADEST
00002ED6                          3357                  
00002ED6  2200                    3358  ANDEADEST       MOVE.L  D0, D1
00002ED8  C2BC 00000038           3359                  AND.L   #$38, D1    *Isolate mode
00002EDE                          3360              
00002EDE  B2BC 00000010           3361                  CMP.L   #$10, D1    *Check if 010
00002EE4  6700 0024               3362                  BEQ     ANDINADDRREGD
00002EE8                          3363              
00002EE8  B2BC 00000018           3364                  CMP.L   #$18, D1    *Check if 011
00002EEE  6700 002A               3365                  BEQ     ANDPLUSADDRREGD
00002EF2                          3366              
00002EF2  B2BC 00000020           3367                  CMP.L   #$20, D1    *Check if 100
00002EF8  6700 0030               3368                  BEQ     ANDMINUSADDRREGD
00002EFC                          3369              
00002EFC  B2BC 00000038           3370                  CMP.L   #$38, D1     *Check if 111
00002F02  6700 0036               3371                  BEQ     ANDADDRESSD
00002F06                          3372                  
00002F06  6000 E220               3373                  BRA     INVALIDOPCODE
00002F0A                          3374                  
00002F0A                          3375              
00002F0A  2200                    3376  ANDINADDRREGD MOVE.L  D0, D1
00002F0C  C2BC 00000007           3377              AND.L   #$7, D1     *Isolate register
00002F12  2601                    3378              MOVE.L  D1, D3      *Move value of an
00002F14  1C3C 0003               3379              MOVE.B  #$3, D6     *Move type of source
00002F18                          3380              
00002F18  4E75                    3381              RTS
00002F1A                          3382              
00002F1A  2200                    3383  ANDPLUSADDRREGD MOVE.L  D0, D1
00002F1C  C2BC 00000007           3384              AND.L   #$7, D1     *Isolate register
00002F22  2601                    3385              MOVE.L  D1, D3      *Move value of an
00002F24  1C3C 0004               3386              MOVE.B  #$4, D6     *Move type of source
00002F28                          3387              
00002F28  4E75                    3388              RTS
00002F2A                          3389              
00002F2A  2200                    3390  ANDMINUSADDRREGD MOVE.L  D0, D1
00002F2C  C2BC 00000007           3391              AND.L   #$7, D1     *Isolate register
00002F32  2601                    3392              MOVE.L  D1, D3      *Move value of an
00002F34  1C3C 0005               3393              MOVE.B  #$5, D6     *Move type of source
00002F38                          3394              
00002F38  4E75                    3395              RTS
00002F3A                          3396              
00002F3A  2200                    3397  ANDADDRESSD MOVE.L  D0, D1
00002F3C  C2BC 00000007           3398              AND.L   #$7, D1     *Isolate register
00002F42                          3399              
00002F42  B2BC 00000000           3400              CMP.L   #$0, D1     *Check if 000
00002F48  6700 0010               3401              BEQ     ANDADDRWD
00002F4C                          3402              
00002F4C  B2BC 00000001           3403              CMP.L   #$1, D1     *Check if 001
00002F52  6700 0010               3404              BEQ     ANDADDRLD
00002F56                          3405              
00002F56  6000 E1D0               3406              BRA     INVALIDOPCODE
00002F5A                          3407              
00002F5A  3610                    3408  ANDADDRWD   MOVE.W  (A0),D3     *Move addr
00002F5C  1C3C 0006               3409              MOVE.B  #$6, D6     *Store type
00002F60  5488                    3410              ADDA.L  #$2, A0 
00002F62                          3411              
00002F62  4E75                    3412              RTS
00002F64                          3413  
00002F64  2610                    3414  ANDADDRLD   MOVE.L  (A0),D3     *Move addr
00002F66  1C3C 0007               3415              MOVE.B  #$7, D6     *Store type
00002F6A  5888                    3416              ADDA.L  #$4, A0
00002F6C                          3417              
00002F6C  4E75                    3418              RTS
00002F6E                          3419                  
00002F6E  2200                    3420  ANDEADN     MOVE.L  D0, D1
00002F70  C2BC 00000038           3421              AND.L   #$38, D1    *Isolate source mode
00002F76                          3422              
00002F76  B2BC 00000000           3423              CMP.L   #$0, D1     *Check if 000
00002F7C  6700 002E               3424              BEQ     ANDDATAREG
00002F80                          3425              
00002F80  B2BC 00000010           3426              CMP.L   #$10, D1    *Check if 010
00002F86  6700 0036               3427              BEQ     ANDINADDRREG
00002F8A                          3428              
00002F8A  B2BC 00000018           3429              CMP.L   #$18, D1    *Check if 011
00002F90  6700 003E               3430              BEQ     ANDPLUSADDRREG
00002F94                          3431              
00002F94  B2BC 00000020           3432              CMP.L   #$20, D1    *Check if 100
00002F9A  6700 0046               3433              BEQ     ANDMINUSADDRREG
00002F9E                          3434              
00002F9E  B2BC 00000038           3435              CMP.L   #$38, D1     *Check if 111
00002FA4  6700 004E               3436              BEQ     ANDADDRESSDATA
00002FA8                          3437              
00002FA8  6000 E17E               3438              BRA     INVALIDOPCODE
00002FAC                          3439                  
00002FAC  2200                    3440  ANDDATAREG  MOVE.L  D0, D1
00002FAE  C2BC 00000007           3441              AND.L   #$7, D1     *Isolate register
00002FB4  2401                    3442              MOVE.L  D1, D2      *Move value of Dn
00002FB6  1A3C 0000               3443              MOVE.B  #$0, D5     *Move type of source
00002FBA                          3444              
00002FBA  6000 00B6               3445              BRA     ANDDNDEST
00002FBE                          3446              
00002FBE  2200                    3447  ANDINADDRREG MOVE.L  D0, D1
00002FC0  C2BC 00000007           3448              AND.L   #$7, D1     *Isolate register
00002FC6  2401                    3449              MOVE.L  D1, D2      *Move value of an
00002FC8  1A3C 0003               3450              MOVE.B  #$3, D5     *Move type of source
00002FCC                          3451              
00002FCC  6000 00A4               3452              BRA     ANDDNDEST
00002FD0                          3453              
00002FD0  2200                    3454  ANDPLUSADDRREG MOVE.L  D0, D1
00002FD2  C2BC 00000007           3455              AND.L   #$7, D1     *Isolate register
00002FD8  2401                    3456              MOVE.L  D1, D2      *Move value of an
00002FDA  1A3C 0004               3457              MOVE.B  #$4, D5     *Move type of source
00002FDE                          3458              
00002FDE  6000 0092               3459              BRA     ANDDNDEST
00002FE2                          3460              
00002FE2  2200                    3461  ANDMINUSADDRREG MOVE.L  D0, D1
00002FE4  C2BC 00000007           3462              AND.L   #$7, D1     *Isolate register
00002FEA  2401                    3463              MOVE.L  D1, D2      *Move value of an
00002FEC  1A3C 0005               3464              MOVE.B  #$5, D5     *Move type of source
00002FF0                          3465              
00002FF0  6000 0080               3466              BRA     ANDDNDEST
00002FF4                          3467              
00002FF4  2200                    3468  ANDADDRESSDATA MOVE.L  D0, D1
00002FF6  C2BC 00000007           3469              AND.L   #$7, D1     *Isolate register
00002FFC                          3470              
00002FFC  B2BC 00000000           3471              CMP.L   #$0, D1     *Check if 000
00003002  6700 001A               3472              BEQ     ANDADDRW
00003006                          3473              
00003006  B2BC 00000001           3474              CMP.L   #$1, D1     *Check if 001
0000300C  6700 001C               3475              BEQ     ANDADDRL
00003010                          3476              
00003010  B2BC 00000004           3477              CMP.L   #$4, D1     *Check if 100
00003016  6700 001E               3478              BEQ     ANDDATA
0000301A                          3479              
0000301A  6000 E10C               3480              BRA     INVALIDOPCODE
0000301E                          3481              
0000301E  3410                    3482  ANDADDRW    MOVE.W  (A0),D2     *Move addr
00003020  1A3C 0006               3483              MOVE.B  #$6, D5     *Store type
00003024  5488                    3484              ADDA.L  #$2, A0 
00003026                          3485              
00003026  6000 004A               3486              BRA     ANDDNDEST
0000302A                          3487  
0000302A  2410                    3488  ANDADDRL    MOVE.L  (A0),D2     *Move addr
0000302C  1A3C 0007               3489              MOVE.B  #$7, D5     *Store type
00003030  5888                    3490              ADDA.L  #$4, A0 
00003032                          3491              
00003032  6000 003E               3492              BRA     ANDDNDEST
00003036                          3493              
00003036  BE3C 0001               3494  ANDDATA     CMP.B   #$1,D7     *Compare if the size is a byte  
0000303A  6700 0012               3495              BEQ     ANDSIZEB
0000303E                          3496      
0000303E  BE3C 0002               3497              CMP.B   #$2,D7     *Compare if the size is a word 
00003042  6700 0016               3498              BEQ     ANDSIZEW
00003046                          3499      
00003046  BE3C 0003               3500              CMP.B   #$3,D7     *Compare if the size is a long 
0000304A  6700 001A               3501              BEQ     ANDSIZEL 
0000304E                          3502  
0000304E  3410                    3503  ANDSIZEB    MOVE.W  (A0),D2 
00003050  1A3C 0008               3504              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00003054  5488                    3505              ADDA.L  #$2, A0 
00003056                          3506          
00003056  6000 001A               3507              BRA     ANDDNDEST *Branches to destination
0000305A                          3508  
0000305A  3410                    3509  ANDSIZEW    MOVE.W  (A0),D2 
0000305C  1A3C 0008               3510              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00003060  5488                    3511              ADDA.L  #$2, A0 
00003062                          3512          
00003062  6000 000E               3513              BRA     ANDDNDEST *Branches to destination
00003066                          3514  
00003066  2410                    3515  ANDSIZEL    MOVE.L  (A0),D2 
00003068  1A3C 0008               3516              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
0000306C  5888                    3517              ADDA.L  #$4, A0 
0000306E                          3518          
0000306E  6000 0002               3519              BRA     ANDDNDEST *Branches to destination
00003072                          3520              
00003072  3200                    3521  ANDDNDEST   MOVE.W  D0, D1
00003074  C27C 0E00               3522              AND.W   #$E00, D1   *Isolate register
00003078  E081                    3523              ASR.L   #8, D1
0000307A  E281                    3524              ASR.L   #1, D1
0000307C  3601                    3525              MOVE.W  D1, D3      *Move register to d3
0000307E  1C3C 0000               3526              MOVE.B  #$0, D6
00003082                          3527              
00003082  4E75                    3528              RTS
00003084                          3529  
00003084                          3530  
00003084                          3531  
00003084  3200                    3532  LSREA       MOVE.W  D0, D1
00003086  C27C 0020               3533              AND.W   #$20, D1    *Isolate ir
0000308A                          3534              
0000308A  B27C 0020               3535              CMP.W   #$20, D1    *Check if 1
0000308E  6700 0006               3536              BEQ     LSRD
00003092                          3537              
00003092  6000 0016               3538              BRA     LSRC
00003096                          3539  
00003096  3200                    3540  LSRD        MOVE.W  D0, D1
00003098  C27C 0E00               3541              AND.W   #$E00, D1   *Isolate count/register
0000309C  E081                    3542              ASR.L   #8, D1
0000309E  E281                    3543              ASR.L   #1, D1
000030A0  3401                    3544              MOVE.W  D1, D2
000030A2  1A3C 0000               3545              MOVE.B  #$0, D5
000030A6                          3546              
000030A6  6000 0016               3547              BRA     LSRDEST
000030AA                          3548              
000030AA  3200                    3549  LSRC        MOVE.W  D0, D1
000030AC  C27C 0E00               3550              AND.W   #$E00, D1   *Isolate count/register
000030B0  E081                    3551              ASR.L   #8, D1
000030B2  E281                    3552              ASR.L   #1, D1
000030B4  3401                    3553              MOVE.W  D1, D2
000030B6  1A3C 0008               3554              MOVE.B  #$8, D5
000030BA                          3555              
000030BA  6000 0002               3556              BRA     LSRDEST 
000030BE                          3557              
000030BE  3200                    3558  LSRDEST     MOVE.W  D0, D1
000030C0  C27C 0007               3559              AND.W   #$7, D1     *Isolate register
000030C4  3601                    3560              MOVE.W  D1, D3
000030C6  1C3C 0000               3561              MOVE.B  #$0, D6
000030CA                          3562              
000030CA  4E75                    3563              RTS
000030CC                          3564              
000030CC  7CFF                    3565  LSMEA       MOVE.L  #-1, D6
000030CE  2200                    3566              MOVE.L  D0, D1
000030D0  C2BC 00000038           3567              AND.L   #$38, D1    *Isolate source mode
000030D6                          3568              
000030D6  B2BC 00000010           3569              CMP.L   #$10, D1    *Check if 010
000030DC  6700 0024               3570              BEQ     LSMINADDRREG
000030E0                          3571              
000030E0  B2BC 00000018           3572              CMP.L   #$18, D1    *Check if 011
000030E6  6700 002A               3573              BEQ     LSMPLUSADDRREG
000030EA                          3574              
000030EA  B2BC 00000020           3575              CMP.L   #$20, D1    *Check if 100
000030F0  6700 0030               3576              BEQ     LSMMINUSADDRREG
000030F4                          3577              
000030F4  B2BC 00000038           3578              CMP.L   #$38, D1     *Check if 111
000030FA  6700 0036               3579              BEQ     LSMADDRESS
000030FE                          3580              
000030FE  6000 E028               3581              BRA     INVALIDOPCODE
00003102                          3582              
00003102  2200                    3583  LSMINADDRREG MOVE.L  D0, D1
00003104  C2BC 00000007           3584              AND.L   #$7, D1     *Isolate register
0000310A  2401                    3585              MOVE.L  D1, D2      *Move value of an
0000310C  1A3C 0003               3586              MOVE.B  #$3, D5     *Move type of source
00003110                          3587              
00003110  4E75                    3588              RTS
00003112                          3589              
00003112  2200                    3590  LSMPLUSADDRREG MOVE.L  D0, D1
00003114  C2BC 00000007           3591              AND.L   #$7, D1     *Isolate register
0000311A  2401                    3592              MOVE.L  D1, D2      *Move value of an
0000311C  1A3C 0004               3593              MOVE.B  #$4, D5     *Move type of source
00003120                          3594              
00003120  4E75                    3595              RTS
00003122                          3596              
00003122  2200                    3597  LSMMINUSADDRREG MOVE.L  D0, D1
00003124  C2BC 00000007           3598              AND.L   #$7, D1     *Isolate register
0000312A  2401                    3599              MOVE.L  D1, D2      *Move value of an
0000312C  1A3C 0005               3600              MOVE.B  #$5, D5     *Move type of source
00003130                          3601              
00003130  4E75                    3602              RTS
00003132                          3603              
00003132  2200                    3604  LSMADDRESS  MOVE.L  D0, D1
00003134  C2BC 00000007           3605              AND.L   #$7, D1     *Isolate register
0000313A                          3606              
0000313A  B2BC 00000000           3607              CMP.L   #$0, D1     *Check if 000
00003140  6700 0010               3608              BEQ     LSMADDRW
00003144                          3609              
00003144  B2BC 00000001           3610              CMP.L   #$1, D1     *Check if 001
0000314A  6700 0010               3611              BEQ     LSMADDRL
0000314E                          3612              
0000314E  6000 DFD8               3613              BRA     INVALIDOPCODE
00003152                          3614              
00003152  3410                    3615  LSMADDRW    MOVE.W  (A0),D2     *Move addr
00003154  1A3C 0006               3616              MOVE.B  #$6, D5     *Store type
00003158  5488                    3617              ADDA.L  #$2, A0 
0000315A                          3618              
0000315A  4E75                    3619              RTS
0000315C                          3620  
0000315C  2410                    3621  LSMADDRL    MOVE.L  (A0),D2     *Move addr
0000315E  1A3C 0007               3622              MOVE.B  #$7, D5     *Store type
00003162  5888                    3623              ADDA.L  #$4, A0
00003164                          3624              
00003164  4E75                    3625              RTS
00003166                          3626              
00003166                          3627              
00003166                          3628              
00003166  3200                    3629  ASREA       MOVE.W  D0, D1
00003168  C27C 0020               3630              AND.W   #$20, D1    *Isolate ir
0000316C                          3631              
0000316C  B27C 0020               3632              CMP.W   #$20, D1    *Check if 1
00003170  6700 0006               3633              BEQ     ASRD
00003174                          3634              
00003174  6000 0016               3635              BRA     ASRC
00003178                          3636  
00003178  3200                    3637  ASRD        MOVE.W  D0, D1
0000317A  C27C 0E00               3638              AND.W   #$E00, D1   *Isolate count/register
0000317E  E081                    3639              ASR.L   #8, D1
00003180  E281                    3640              ASR.L   #1, D1
00003182  3401                    3641              MOVE.W  D1, D2
00003184  1A3C 0000               3642              MOVE.B  #$0, D5
00003188                          3643              
00003188  6000 0016               3644              BRA     ASRDEST
0000318C                          3645              
0000318C  3200                    3646  ASRC        MOVE.W  D0, D1
0000318E  C27C 0E00               3647              AND.W   #$E00, D1   *Isolate count/register
00003192  E081                    3648              ASR.L   #8, D1
00003194  E281                    3649              ASR.L   #1, D1
00003196  3401                    3650              MOVE.W  D1, D2
00003198  1A3C 0008               3651              MOVE.B  #$8, D5
0000319C                          3652              
0000319C  6000 0002               3653              BRA     ASRDEST 
000031A0                          3654              
000031A0  3200                    3655  ASRDEST     MOVE.W  D0, D1
000031A2  C27C 0007               3656              AND.W   #$7, D1     *Isolate register
000031A6  3601                    3657              MOVE.W  D1, D3
000031A8  1C3C 0000               3658              MOVE.B  #$0, D6
000031AC                          3659              
000031AC  4E75                    3660              RTS
000031AE                          3661              
000031AE  7CFF                    3662  ASMEA       MOVE.L  #-1, D6
000031B0  2200                    3663              MOVE.L  D0, D1
000031B2  C2BC 00000038           3664              AND.L   #$38, D1    *Isolate source mode
000031B8                          3665              
000031B8  B2BC 00000010           3666              CMP.L   #$10, D1    *Check if 010
000031BE  6700 0024               3667              BEQ     ASMINADDRREG
000031C2                          3668              
000031C2  B2BC 00000018           3669              CMP.L   #$18, D1    *Check if 011
000031C8  6700 002A               3670              BEQ     ASMPLUSADDRREG
000031CC                          3671              
000031CC  B2BC 00000020           3672              CMP.L   #$20, D1    *Check if 100
000031D2  6700 0030               3673              BEQ     ASMMINUSADDRREG
000031D6                          3674              
000031D6  B2BC 00000038           3675              CMP.L   #$38, D1     *Check if 111
000031DC  6700 0036               3676              BEQ     ASMADDRESS
000031E0                          3677              
000031E0  6000 DF46               3678              BRA     INVALIDOPCODE
000031E4                          3679              
000031E4  2200                    3680  ASMINADDRREG MOVE.L  D0, D1
000031E6  C2BC 00000007           3681              AND.L   #$7, D1     *Isolate register
000031EC  2401                    3682              MOVE.L  D1, D2      *Move value of an
000031EE  1A3C 0003               3683              MOVE.B  #$3, D5     *Move type of source
000031F2                          3684              
000031F2  4E75                    3685              RTS
000031F4                          3686              
000031F4  2200                    3687  ASMPLUSADDRREG MOVE.L  D0, D1
000031F6  C2BC 00000007           3688              AND.L   #$7, D1     *Isolate register
000031FC  2401                    3689              MOVE.L  D1, D2      *Move value of an
000031FE  1A3C 0004               3690              MOVE.B  #$4, D5     *Move type of source
00003202                          3691              
00003202  4E75                    3692              RTS
00003204                          3693              
00003204  2200                    3694  ASMMINUSADDRREG MOVE.L  D0, D1
00003206  C2BC 00000007           3695              AND.L   #$7, D1     *Isolate register
0000320C  2401                    3696              MOVE.L  D1, D2      *Move value of an
0000320E  1A3C 0005               3697              MOVE.B  #$5, D5     *Move type of source
00003212                          3698              
00003212  4E75                    3699              RTS
00003214                          3700              
00003214  2200                    3701  ASMADDRESS  MOVE.L  D0, D1
00003216  C2BC 00000007           3702              AND.L   #$7, D1     *Isolate register
0000321C                          3703              
0000321C  B2BC 00000000           3704              CMP.L   #$0, D1     *Check if 000
00003222  6700 FF2E               3705              BEQ     LSMADDRW
00003226                          3706              
00003226  B2BC 00000001           3707              CMP.L   #$1, D1     *Check if 001
0000322C  6700 FF2E               3708              BEQ     LSMADDRL
00003230                          3709              
00003230  6000 DEF6               3710              BRA     INVALIDOPCODE
00003234                          3711              
00003234  3410                    3712  ASMADDRW    MOVE.W  (A0),D2     *Move addr
00003236  1A3C 0006               3713              MOVE.B  #$6, D5     *Store type
0000323A  5488                    3714              ADDA.L  #$2, A0 
0000323C                          3715              
0000323C  4E75                    3716              RTS
0000323E                          3717  
0000323E  2410                    3718  ASMADDRL    MOVE.L  (A0),D2     *Move addr
00003240  1A3C 0007               3719              MOVE.B  #$7, D5     *Store type
00003244  5888                    3720              ADDA.L  #$4, A0
00003246                          3721              
00003246  4E75                    3722              RTS
00003248                          3723  
00003248                          3724  
00003248                          3725  
00003248                          3726  
00003248  3200                    3727  ROREA       MOVE.W  D0, D1
0000324A  C27C 0020               3728              AND.W   #$20, D1    *Isolate ir
0000324E                          3729              
0000324E  B27C 0020               3730              CMP.W   #$20, D1    *Check if 1
00003252  6700 0006               3731              BEQ     RORD
00003256                          3732              
00003256  6000 0016               3733              BRA     RORC
0000325A                          3734  
0000325A  3200                    3735  RORD        MOVE.W  D0, D1
0000325C  C27C 0E00               3736              AND.W   #$E00, D1   *Isolate count/register
00003260  E081                    3737              ASR.L   #8, D1
00003262  E281                    3738              ASR.L   #1, D1
00003264  3401                    3739              MOVE.W  D1, D2
00003266  1A3C 0000               3740              MOVE.B  #$0, D5
0000326A                          3741              
0000326A  6000 0016               3742              BRA     RORDEST
0000326E                          3743              
0000326E  3200                    3744  RORC        MOVE.W  D0, D1
00003270  C27C 0E00               3745              AND.W   #$E00, D1   *Isolate count/register
00003274  E081                    3746              ASR.L   #8, D1
00003276  E281                    3747              ASR.L   #1, D1
00003278  3401                    3748              MOVE.W  D1, D2
0000327A  1A3C 0008               3749              MOVE.B  #$8, D5
0000327E                          3750              
0000327E  6000 0002               3751              BRA     RORDEST 
00003282                          3752              
00003282  3200                    3753  RORDEST     MOVE.W  D0, D1
00003284  C27C 0007               3754              AND.W   #$7, D1     *Isolate register
00003288  3601                    3755              MOVE.W  D1, D3
0000328A  1C3C 0000               3756              MOVE.B  #$0, D6
0000328E                          3757              
0000328E  4E75                    3758              RTS
00003290                          3759              
00003290  7CFF                    3760  ROMEA       MOVE.L  #-1, D6
00003292  2200                    3761              MOVE.L  D0, D1
00003294  C2BC 00000038           3762              AND.L   #$38, D1    *Isolate source mode
0000329A                          3763              
0000329A  B2BC 00000010           3764              CMP.L   #$10, D1    *Check if 010
000032A0  6700 0024               3765              BEQ     ROMINADDRREG
000032A4                          3766              
000032A4  B2BC 00000018           3767              CMP.L   #$18, D1    *Check if 011
000032AA  6700 002A               3768              BEQ     ROMPLUSADDRREG
000032AE                          3769              
000032AE  B2BC 00000020           3770              CMP.L   #$20, D1    *Check if 100
000032B4  6700 0030               3771              BEQ     ROMMINUSADDRREG
000032B8                          3772              
000032B8  B2BC 00000038           3773              CMP.L   #$38, D1     *Check if 111
000032BE  6700 0036               3774              BEQ     ROMADDRESS
000032C2                          3775              
000032C2  6000 DE64               3776              BRA     INVALIDOPCODE
000032C6                          3777              
000032C6  2200                    3778  ROMINADDRREG MOVE.L  D0, D1
000032C8  C2BC 00000007           3779              AND.L   #$7, D1     *Isolate register
000032CE  2401                    3780              MOVE.L  D1, D2      *Move value of an
000032D0  1A3C 0003               3781              MOVE.B  #$3, D5     *Move type of source
000032D4                          3782              
000032D4  4E75                    3783              RTS
000032D6                          3784              
000032D6  2200                    3785  ROMPLUSADDRREG MOVE.L  D0, D1
000032D8  C2BC 00000007           3786              AND.L   #$7, D1     *Isolate register
000032DE  2401                    3787              MOVE.L  D1, D2      *Move value of an
000032E0  1A3C 0004               3788              MOVE.B  #$4, D5     *Move type of source
000032E4                          3789              
000032E4  4E75                    3790              RTS
000032E6                          3791              
000032E6  2200                    3792  ROMMINUSADDRREG MOVE.L  D0, D1
000032E8  C2BC 00000007           3793              AND.L   #$7, D1     *Isolate register
000032EE  2401                    3794              MOVE.L  D1, D2      *Move value of an
000032F0  1A3C 0005               3795              MOVE.B  #$5, D5     *Move type of source
000032F4                          3796              
000032F4  4E75                    3797              RTS
000032F6                          3798              
000032F6  2200                    3799  ROMADDRESS  MOVE.L  D0, D1
000032F8  C2BC 00000007           3800              AND.L   #$7, D1     *Isolate register
000032FE                          3801              
000032FE  B2BC 00000000           3802              CMP.L   #$0, D1     *Check if 000
00003304  6700 0010               3803              BEQ     ROMADDRW
00003308                          3804              
00003308  B2BC 00000001           3805              CMP.L   #$1, D1     *Check if 001
0000330E  6700 0010               3806              BEQ     ROMADDRL
00003312                          3807              
00003312  6000 DE14               3808              BRA     INVALIDOPCODE
00003316                          3809              
00003316  3410                    3810  ROMADDRW    MOVE.W  (A0),D2     *Move addr
00003318  1A3C 0006               3811              MOVE.B  #$6, D5     *Store type
0000331C  5488                    3812              ADDA.L  #$2, A0 
0000331E                          3813              
0000331E  4E75                    3814              RTS
00003320                          3815  
00003320  2410                    3816  ROMADDRL    MOVE.L  (A0),D2     *Move addr
00003322  1A3C 0007               3817              MOVE.B  #$7, D5     *Store type
00003326  5888                    3818              ADDA.L  #$4, A0
00003328                          3819              
00003328  4E75                    3820              RTS
0000332A                          3821              
0000332A                          3822              
0000332A                          3823              
0000332A                          3824              
0000332A  2200                    3825  CMPEA       MOVE.L  D0, D1
0000332C  C2BC 00000038           3826              AND.L   #$38, D1    *Isolate source mode
00003332                          3827              
00003332  B2BC 00000000           3828              CMP.L   #$0, D1     *Check if 000
00003338  6700 0038               3829              BEQ     CMPDATAREG
0000333C                          3830              
0000333C  B2BC 00000008           3831              CMP.L   #$8, D1     *Check if 001
00003342  6700 0040               3832              BEQ     CMPADDRREG
00003346                          3833              
00003346  B2BC 00000010           3834              CMP.L   #$10, D1    *Check if 010
0000334C  6700 0048               3835              BEQ     CMPINADDRREG
00003350                          3836              
00003350  B2BC 00000018           3837              CMP.L   #$18, D1    *Check if 011
00003356  6700 0050               3838              BEQ     CMPPLUSADDRREG
0000335A                          3839              
0000335A  B2BC 00000020           3840              CMP.L   #$20, D1    *Check if 100
00003360  6700 0058               3841              BEQ     CMPMINUSADDRREG
00003364                          3842              
00003364  B2BC 00000038           3843              CMP.L   #$38, D1     *Check if 111
0000336A  6700 0060               3844              BEQ     CMPADDRESSDATA
0000336E                          3845              
0000336E  6000 DDB8               3846              BRA     INVALIDOPCODE
00003372                          3847                  
00003372  2200                    3848  CMPDATAREG  MOVE.L  D0, D1
00003374  C2BC 00000007           3849              AND.L   #$7, D1     *Isolate register
0000337A  2401                    3850              MOVE.L  D1, D2      *Move value of Dn
0000337C  1A3C 0000               3851              MOVE.B  #$0, D5     *Move type of source
00003380                          3852              
00003380  6000 00C8               3853              BRA     CMPDNDEST
00003384                          3854              
00003384  2200                    3855  CMPADDRREG  MOVE.L  D0, D1
00003386  C2BC 00000007           3856              AND.L   #$7, D1     *Isolate register
0000338C  2401                    3857              MOVE.L  D1, D2      *Move value of An
0000338E  1A3C 0001               3858              MOVE.B  #$1, D5     *Move type of source
00003392                          3859              
00003392  6000 00B6               3860              BRA     CMPDNDEST
00003396                          3861              
00003396  2200                    3862  CMPINADDRREG MOVE.L  D0, D1
00003398  C2BC 00000007           3863              AND.L   #$7, D1     *Isolate register
0000339E  2401                    3864              MOVE.L  D1, D2      *Move value of an
000033A0  1A3C 0003               3865              MOVE.B  #$3, D5     *Move type of source
000033A4                          3866              
000033A4  6000 00A4               3867              BRA     CMPDNDEST
000033A8                          3868              
000033A8  2200                    3869  CMPPLUSADDRREG MOVE.L  D0, D1
000033AA  C2BC 00000007           3870              AND.L   #$7, D1     *Isolate register
000033B0  2401                    3871              MOVE.L  D1, D2      *Move value of an
000033B2  1A3C 0004               3872              MOVE.B  #$4, D5     *Move type of source
000033B6                          3873              
000033B6  6000 0092               3874              BRA     CMPDNDEST
000033BA                          3875              
000033BA  2200                    3876  CMPMINUSADDRREG MOVE.L  D0, D1
000033BC  C2BC 00000007           3877              AND.L   #$7, D1     *Isolate register
000033C2  2401                    3878              MOVE.L  D1, D2      *Move value of an
000033C4  1A3C 0005               3879              MOVE.B  #$5, D5     *Move type of source
000033C8                          3880              
000033C8  6000 0080               3881              BRA     CMPDNDEST
000033CC                          3882              
000033CC  2200                    3883  CMPADDRESSDATA MOVE.L  D0, D1
000033CE  C2BC 00000007           3884              AND.L   #$7, D1     *Isolate register
000033D4                          3885              
000033D4  B2BC 00000000           3886              CMP.L   #$0, D1     *Check if 000
000033DA  6700 001A               3887              BEQ     CMPADDRW
000033DE                          3888              
000033DE  B2BC 00000001           3889              CMP.L   #$1, D1     *Check if 001
000033E4  6700 001C               3890              BEQ     CMPADDRL
000033E8                          3891              
000033E8  B2BC 00000004           3892              CMP.L   #$4, D1     *Check if 100
000033EE  6700 001E               3893              BEQ     CMPDATA
000033F2                          3894              
000033F2  6000 DD34               3895              BRA     INVALIDOPCODE
000033F6                          3896              
000033F6  3410                    3897  CMPADDRW    MOVE.W  (A0),D2     *Move addr
000033F8  1A3C 0006               3898              MOVE.B  #$6, D5     *Store type
000033FC  5488                    3899              ADDA.L  #$2, A0 
000033FE                          3900              
000033FE  6000 004A               3901              BRA     CMPDNDEST
00003402                          3902  
00003402  2410                    3903  CMPADDRL    MOVE.L  (A0),D2     *Move addr
00003404  1A3C 0007               3904              MOVE.B  #$7, D5     *Store type
00003408  5888                    3905              ADDA.L  #$4, A0 
0000340A                          3906              
0000340A  6000 003E               3907              BRA     CMPDNDEST
0000340E                          3908              
0000340E  BE3C 0001               3909  CMPDATA     CMP.B   #$1,D7     *Compare if the size is a byte  
00003412  6700 0012               3910              BEQ     CMPSIZEB
00003416                          3911      
00003416  BE3C 0002               3912              CMP.B   #$2,D7     *Compare if the size is a word 
0000341A  6700 0016               3913              BEQ     CMPSIZEW
0000341E                          3914      
0000341E  BE3C 0003               3915              CMP.B   #$3,D7     *Compare if the size is a long 
00003422  6700 001A               3916              BEQ     CMPSIZEL 
00003426                          3917  
00003426  3410                    3918  CMPSIZEB    MOVE.W  (A0),D2 
00003428  1A3C 0008               3919              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
0000342C  5488                    3920              ADDA.L  #$2, A0 
0000342E                          3921          
0000342E  6000 001A               3922              BRA     CMPDNDEST *Branches to destination
00003432                          3923  
00003432  3410                    3924  CMPSIZEW    MOVE.W  (A0),D2 
00003434  1A3C 0008               3925              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00003438  5488                    3926              ADDA.L  #$2, A0 
0000343A                          3927          
0000343A  6000 000E               3928              BRA     CMPDNDEST *Branches to destination
0000343E                          3929  
0000343E  2410                    3930  CMPSIZEL    MOVE.L  (A0),D2 
00003440  1A3C 0008               3931              MOVE.B  #$8, D5 *Stores the type of source as Data into D5 
00003444  5888                    3932              ADDA.L  #$4, A0 
00003446                          3933          
00003446  6000 0002               3934              BRA     CMPDNDEST *Branches to destination
0000344A                          3935              
0000344A  3200                    3936  CMPDNDEST   MOVE.W  D0, D1
0000344C  C27C 0E00               3937              AND.W   #$E00, D1   *Isolate register
00003450  E081                    3938              ASR.L   #8, D1
00003452  E281                    3939              ASR.L   #1, D1
00003454  3601                    3940              MOVE.W  D1, D3      *Move register to d3
00003456  1C3C 0000               3941              MOVE.B  #$0, D6
0000345A                          3942              
0000345A  4E75                    3943              RTS
0000345C                          3944              
0000345C                          3945              
0000345C                          3946              
0000345C                          3947              
0000345C  7CFF                    3948  BCCEA       MOVE.L  #-1, D6
0000345E  3200                    3949              MOVE.W  D0, D1
00003460  C27C 00FF               3950              AND.W   #$FF, D1    *Isolate first byte
00003464                          3951              
00003464  B27C 0000               3952              CMP.W   #$0, D1
00003468  6700 0054               3953              BEQ     BCCW
0000346C                          3954              
0000346C  B27C 00FF               3955              CMP.W   #$FF, D1
00003470  6700 0062               3956              BEQ     BCCL
00003474                          3957              
00003474  C27C 0080               3958              AND.W   #$80, D1    *Isolate first bit
00003478  B27C 0080               3959              CMP.W   #$80, D1
0000347C  6700 0016               3960              BEQ     BCCBS       *If negative, need further manipulation
00003480                          3961              
00003480  3200                    3962              MOVE.W  D0, D1
00003482  C27C 00FF               3963              AND.W   #$FF, D1
00003486  5501                    3964              SUB.B   #$2, D1     *Subtract 2
00003488  3A0E                    3965              MOVE.W  A6, D5      *Move address
0000348A  9A41                    3966              SUB.W   D1, D5      *Add from address
0000348C  3205                    3967              MOVE.W  D5, D1
0000348E  3401                    3968              MOVE.W  D1, D2
00003490  7A06                    3969              MOVE.L  #$6, D5  
00003492                          3970              
00003492  4E75                    3971              RTS
00003494                          3972              
00003494  3200                    3973  BCCBS       MOVE.W  D0, D1
00003496  C27C 00FF               3974              AND.W   #$FF, D1
0000349A  5301                    3975              SUB.B   #$1, D1     *Subtract 1
0000349C  4601                    3976              NOT.B   D1          *Flip all bits
0000349E  5501                    3977              SUB.B   #$2, D1     *Subtract 2
000034A0  3A0E                    3978              MOVE.W  A6, D5      *Move address
000034A2  9A41                    3979              SUB.W   D1, D5      *Add from address
000034A4  3205                    3980              MOVE.W  D5, D1
000034A6  3401                    3981              MOVE.W  D1, D2
000034A8  7A06                    3982              MOVE.L  #$6, D5  
000034AA                          3983              
000034AA  4E75                    3984              RTS
000034AC                          3985              
000034AC  5341                    3986  BCCWS       SUB.W   #$1, D1     *Subtract 1
000034AE  4641                    3987              NOT.W   D1          *Flip all bits
000034B0  5541                    3988              SUB.W   #$2, D1     *Subtract 2
000034B2  3A0E                    3989              MOVE.W  A6, D5      *Move address
000034B4  9A41                    3990              SUB.W   D1, D5      *Add from address
000034B6  3205                    3991              MOVE.W  D5, D1
000034B8  3401                    3992              MOVE.W  D1, D2
000034BA  7A06                    3993              MOVE.L  #$6, D5  
000034BC                          3994              
000034BC  4E75                    3995              RTS
000034BE                          3996              
000034BE  3210                    3997  BCCW        MOVE.W  (A0), D1
000034C0  5488                    3998              ADDA.L  #$2, A0
000034C2  B27C 0000               3999              CMP.W   #0, D1
000034C6  6DE4                    4000              BLT     BCCWS       *If negative, need further manipulation
000034C8                          4001              
000034C8  5401                    4002              ADD.B   #$2, D1     *Subtract 2
000034CA  3A0E                    4003              MOVE.W  A6, D5      *Move address
000034CC  D245                    4004              ADD.W   D5, D1      *Add from address
000034CE  3401                    4005              MOVE.W  D1, D2
000034D0  7A06                    4006              MOVE.L  #$6, D5 
000034D2                          4007              
000034D2  4E75                    4008              RTS
000034D4                          4009     
000034D4  2410                    4010  BCCL        MOVE.L  (A0), D2
000034D6  5888                    4011              ADDA.L  #$4, A0
000034D8  B2BC 00000000           4012              CMP.L   #0, D1
000034DE  6D00 000C               4013              BLT     BCCLS       *If negative, need further manipulation
000034E2                          4014              
000034E2  2401                    4015              MOVE.L  D1, D2
000034E4  5482                    4016              ADD.L   #$2, D2
000034E6  1A3C 0008               4017              MOVE.B  #$8, D5
000034EA                          4018              
000034EA  4E75                    4019              RTS
000034EC                          4020                   
000034EC  5381                    4021  BCCLS       SUB.L   #$1, D1     *Subtract 1
000034EE  4681                    4022              NOT.L   D1          *Flip all bits
000034F0  5481                    4023              ADD.L   #$2, D1     *Add 2
000034F2  2401                    4024              MOVE.L  D1, D2
000034F4  1A3C 0008               4025              MOVE.B  #$8, D5  
000034F8                          4026              
000034F8  4E75                    4027              RTS
000034FA                          4028              
000034FA                          4029              
000034FA  2200                    4030  JSREA       MOVE.L  D0, D1
000034FC  1C3C 00FF               4031              MOVE.B  #-1, D6
00003500  C2BC 00000038           4032              AND.L   #$38, D1    *Isolate source mode
00003506                          4033  
00003506  B2BC 00000010           4034              CMP.L   #$10, D1    *Check if 010
0000350C  6700 0010               4035              BEQ     JSRINADDRREG
00003510                          4036              
00003510  B2BC 00000038           4037              CMP.L   #$38, D1     *Check if 111
00003516  6700 0016               4038              BEQ     JSRADDRESS
0000351A                          4039              
0000351A  6000 DC0C               4040              BRA     INVALIDOPCODE
0000351E                          4041              
0000351E  2200                    4042  JSRINADDRREG MOVE.L  D0, D1
00003520  C2BC 00000007           4043              AND.L   #$7, D1     *Isolate register
00003526  2401                    4044              MOVE.L  D1, D2      *Move value of an
00003528  1A3C 0003               4045              MOVE.B  #$3, D5     *Move type of source
0000352C                          4046              
0000352C  4E75                    4047              RTS
0000352E                          4048              
0000352E  2200                    4049  JSRADDRESS  MOVE.L  D0, D1
00003530  C2BC 00000007           4050              AND.L   #$7, D1     *Isolate register
00003536                          4051              
00003536  B2BC 00000000           4052              CMP.L   #$0, D1     *Check if 000
0000353C  6700 0010               4053              BEQ     JSRADDRW
00003540                          4054              
00003540  B2BC 00000001           4055              CMP.L   #$1, D1     *Check if 001
00003546  6700 0010               4056              BEQ     JSRADDRL
0000354A                          4057              
0000354A  6000 DBDC               4058              BRA     INVALIDOPCODE
0000354E                          4059              
0000354E  3410                    4060  JSRADDRW    MOVE.W  (A0),D2     *Move addr
00003550  1A3C 0006               4061              MOVE.B  #$6, D5     *Store type
00003554  5488                    4062              ADDA.L  #$2, A0 
00003556                          4063              
00003556  4E75                    4064              RTS
00003558                          4065  
00003558  2410                    4066  JSRADDRL    MOVE.L  (A0),D2     *Move addr
0000355A  1A3C 0007               4067              MOVE.B  #$7, D5     *Store type
0000355E  5888                    4068              ADDA.L  #$4, A0
00003560                          4069              
00003560  4E75                    4070              RTS
00003562                          4071  
00003562                          4072                  
00003562                          4073  
00003562= 00                      4074  EMPTYLINEMESSAGE DC.B   '', 0
00003563= 0D 0A 00                4075  NEWLINE         DC.B    $0D,$0A,0
00003566= 44 49 56 55 00          4076  DIVSMESSAGE     DC.B    'DIVU', 0
0000356B= 43 4D 50 00             4077  CMPMESSAGE      DC.B     'CMP', 0
0000356F= 42 43 43 00             4078  BCCMESSAGE      DC.B     'BCC', 0
00003573= 42 47 54 00             4079  BGTMESSAGE      DC.B     'BGT', 0
00003577= 42 4C 45 00             4080  BLEMESSAGE      DC.B     'BLE', 0
0000357B= 4D 4F 56 45 51 00       4081  MOVEQMESSAGE    DC.B   'MOVEQ', 0
00003581= 41 44 44 41 00          4082  ADDAMESSAGE     DC.B    'ADDA', 0
00003586= 41 44 44 00             4083  ADDMESSAGE      DC.B     'ADD', 0
0000358A= 53 55 42 41 00          4084  SUBAMESSAGE     DC.B    'SUBA', 0
0000358F= 53 55 42 00             4085  SUBMESSAGE      DC.B     'SUB', 0
00003593= 41 4E 44 00             4086  ANDMESSAGE      DC.B     'AND', 0
00003597= 4D 55 4C 53 00          4087  MULSMESSAGE     DC.B    'MULS', 0
0000359C= 4D 4F 56 45 00          4088  MOVEMESSAGE     DC.B    'MOVE', 0
000035A1= 42 43 48 47 00          4089  BCHGMESSAGE     DC.B    'BCHG', 0
000035A6= 43 4D 50 49 00          4090  CMPIMESSAGE     DC.B    'CMPI', 0
000035AB= 41 44 44 49 00          4091  ADDIMESSAGE     DC.B    'ADDI', 0
000035B0= 41 4E 44 49 00          4092  ANDIMESSAGE     DC.B    'ANDI', 0
000035B5= 4C 45 41 00             4093  LEAMESSAGE      DC.B    'LEA',0
000035B9= 4D 4F 56 45 4D 00       4094  OPMOVEMMESSAGE  DC.B    'MOVEM',0
000035BF= 52 54 53 00             4095  RTSMESSAGE      DC.B    'RTS',0
000035C3= 4E 4F 50 00             4096  NOPMESSAGE      DC.B    'NOP',0
000035C7= 4A 53 52 00             4097  JSRMESSAGE      DC.B    'JSR',0
000035CB= 43 4C 52 00             4098  CLRMESSAGE      DC.B    'CLR',0
000035CF= 41 53 52 00             4099  ASRMESSAGE      DC.B    'ASR',0
000035D3= 41 53 4C 00             4100  ASLMESSAGE      DC.B    'ASL',0
000035D7= 4C 53 4C 00             4101  LSLMESSAGE      DC.B    'LSL',0
000035DB= 4C 53 52 00             4102  LSRMESSAGE      DC.B    'LSR',0
000035DF= 52 4F 52 00             4103  RORMESSAGE      DC.B    'ROR',0
000035E3= 52 4F 4C 00             4104  ROLMESSAGE      DC.B    'ROL',0
000035E7                          4105  
000035E7= 2E 42 00                4106  BYTEMESSAGE     DC.B    '.B', 0
000035EA= 2E 57 00                4107  WORDMESSAGE     DC.B    '.W', 0
000035ED= 2E 4C 00                4108  LONGMESSAGE     DC.B    '.L', 0
000035F0                          4109  
000035F0= 57 65 6C 63 6F 6D ...   4110  INPUTMESSAGE    DC.B    'Welcome to JAN disassembler. Please type your addresses in this format:', $0D,$0A,0
0000363A= 22 73 74 61 72 74 ...   4111  INPUTMESSAGE1   DC.B    '"starting address","ending address". (period included)', 0
00003671                          4112  
00003671= 53 65 63 74 69 6F ...   4113  CONTINUEMESSAGE DC.B    'Section ended. Press ENTER to continue?', 0
00003699= 41 6C 6C 20 64 6F ...   4114  ENDMESSAGE      DC.B    'All done!! Thank you for using JAN disassembler. Continue? (y/n)'
000036D9                          4115  
000036D9= 20 20 20 20 20 20 ...   4116  SPACEMESSAGE    DC.B    '           ', 0
000036E5= 2C 20 00                4117  COMMAMESSAGE    DC.B    ', ', 0
000036E8= 2F 00                   4118  SLASHMESSAGE    DC.B    '/', 0
000036EA                          4119  
000036EA= 44 41 54 41 00          4120  INVALIDMESSAGE  DC.B    'DATA', 0
000036EF= 24 00                   4121  DOLLARMESSAGE   DC.B    '$', 0
000036F1= 23 00                   4122  POUNDMESSAGE    DC.B    '#', 0
000036F3                          4123  
000036F3= 30 00                   4124  ZEROMESSAGE     DC.B    '0', 0
000036F5= 31 00                   4125  ONEMESSAGE      DC.B    '1', 0
000036F7= 32 00                   4126  TWOMESSAGE      DC.B    '2', 0
000036F9= 33 00                   4127  THREEMESSAGE    DC.B    '3', 0
000036FB= 34 00                   4128  FOURMESSAGE     DC.B    '4', 0
000036FD= 35 00                   4129  FIVEMESSAGE     DC.B    '5', 0
000036FF= 36 00                   4130  SIXMESSAGE      DC.B    '6', 0
00003701= 37 00                   4131  SEVENMESSAGE    DC.B    '7', 0
00003703= 38 00                   4132  EIGHTMESSAGE    DC.B    '8', 0
00003705= 39 00                   4133  NINEMESSAGE     DC.B    '9', 0
00003707= 41 00                   4134  AMESSAGE        DC.B    'A', 0
00003709= 42 00                   4135  BMESSAGE        DC.B    'B', 0
0000370B= 43 00                   4136  CMESSAGE        DC.B    'C', 0
0000370D= 44 00                   4137  DMESSAGE        DC.B    'D', 0
0000370F= 45 00                   4138  EMESSAGE        DC.B    'E', 0
00003711= 46 00                   4139  FMESSAGE        DC.B    'F', 0    
00003713                          4140  
00003713= 44 00                   4141  DNMESSAGE       DC.B    'D', 0
00003715= 41 00                   4142  ANMESSAGE       DC.B    'A', 0 
00003717= 28 41 00                4143  ANIOPENMESSAGE  DC.B    '(A', 0
0000371A= 29 00                   4144  ANICLOSEMESSAGE DC.B    ')', 0
0000371C= 29 2B 00                4145  ANPLUSCLOSEMESSAGE DC.B ')+', 0
0000371F= 2D 28 41 00             4146  ANMINUSOPENMESSAGE DC.B '-(A', 0
00003723                          4147  
00003723                          4148      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDAADDRESSDATA     27EA
ADDAADDRL           2820
ADDAADDRREG         27A2
ADDAADDRW           2814
ADDADATA            282C
ADDADATAREG         2790
ADDADDRESSD         25E2
ADDADDRESSDATA      26B8
ADDADDRL            26EE
ADDADDRLD           260C
ADDADDRREG          2670
ADDADDRW            26E2
ADDADDRWD           2602
ADDADEST            2868
ADDAEA              2748
ADDAINADDRREG       27B4
ADDAMESSAGE         3581
ADDAMINUSADDRREG    27D8
ADDAPLUSADDRREG     27C6
ADDASIZEB           2844
ADDASIZEL           285C
ADDASIZEW           2850
ADDBYTE             13E8
ADDBYTES            16B2
ADDDATA             26FA
ADDDATAREG          265E
ADDDNDEST           2736
ADDDNEA             256A
ADDDNEADEST         257E
ADDEA               2558
ADDEADN             2616
ADDIADDRESS         2934
ADDIADDRL           295E
ADDIADDRW           2954
ADDIDATAREG         28F4
ADDIDEST            28B6
ADDIEA              287A
ADDIINADDRREG       2904
ADDIMESSAGE         35AB
ADDIMINUSADDRREG    2924
ADDINADDRREG        2682
ADDINADDRREGD       25B2
ADDIPLUSADDRREG     2914
ADDISIZEB           2892
ADDISIZEL           28AA
ADDISIZEW           289E
ADDLONG             13F4
ADDLONGS            16C2
ADDMESSAGE          3586
ADDMINUSADDRREG     26A6
ADDMINUSADDRREGD    25D2
ADDPLUSADDRREG      2694
ADDPLUSADDRREGD     25C2
ADDSIZEB            2712
ADDSIZEL            272A
ADDSIZEW            271E
ADDWORD             13EE
ADDWORDS            16BA
ADLISTEA            1472
ADLISTEAD           123A
ADLISTEALOOP        1478
ADLISTEALOOP2       1484
ADLISTEALOOP2D      124C
ADLISTEALOOPD       1240
ADLISTSLASH         14E0
ADLISTSLASHD        12A8
ALIST               14B2
ALIST2              153E
ALISTD              127A
AMESSAGE            3707
ANDADDRESSD         2F3A
ANDADDRESSDATA      2FF4
ANDADDRL            302A
ANDADDRLD           2F64
ANDADDRW            301E
ANDADDRWD           2F5A
ANDDATA             3036
ANDDATAREG          2FAC
ANDDNDEST           3072
ANDDNEA             2EC2
ANDEA               2EB0
ANDEADEST           2ED6
ANDEADN             2F6E
ANDIMESSAGE         35B0
ANDINADDRREG        2FBE
ANDINADDRREGD       2F0A
ANDMESSAGE          3593
ANDMINUSADDRREG     2FE2
ANDMINUSADDRREGD    2F2A
ANDPLUSADDRREG      2FD0
ANDPLUSADDRREGD     2F1A
ANDSIZEB            304E
ANDSIZEL            3066
ANDSIZEW            305A
ANEA                159C
ANEAD               12D2
ANICLOSEMESSAGE     371A
ANIEA               15B2
ANIEAD              12E8
ANIOPENMESSAGE      3717
ANMESSAGE           3715
ANMINUSEA           15F6
ANMINUSEAD          132C
ANMINUSOPENMESSAGE  371F
ANPLUSCLOSEMESSAGE  371C
ANPLUSEA            15D4
ANPLUSEAD           130A
ASKFORCONTINUE      10FC
ASKLOOP             110C
ASLMESSAGE          35D3
ASMADDRESS          3214
ASMADDRL            323E
ASMADDRW            3234
ASMEA               31AE
ASMINADDRREG        31E4
ASMMINUSADDRREG     3204
ASMPLUSADDRREG      31F4
ASRC                318C
ASRD                3178
ASRDEST             31A0
ASREA               3166
ASRMESSAGE          35CF
BACKCOMMA           17EA
BACKEND             17DA
BACKSPACEINPUT      17C4
BACKSTART           17D0
BCCBS               3494
BCCEA               345C
BCCL                34D4
BCCLS               34EC
BCCMESSAGE          356F
BCCW                34BE
BCCWS               34AC
BCHGMESSAGE         35A1
BGTMESSAGE          3573
BLEMESSAGE          3577
BMESSAGE            3709
BYTEDATA            16E2
BYTEMESSAGE         35E7
CHECK0000           1AB4
CHECK0100           1FE2
CHECK0110           1E3E
CHECK0111           1E1E
CHECK1000           1FC2
CHECK1001           1F30
CHECK1010           1DE4
CHECK1100           1A42
CHECK1101           1E9E
CHECK1110           1BDC
CHECKAABC           1AD0
CHECKADDADDA        1EAE
CHECKADLIST         14D6
CHECKADLISTD        129E
CHECKANDMULS        1A50
CHECKASM            1C4C
CHECKASRE           1C82
CHECKBACKSPACE      1746
CHECKCBD            1AFE
CHECKDALIST         1568
CHECKEAS            20DC
CHECKIFCOMMA        1736
CHECKIFLESS9        178C
CHECKIFPERIOD       173E
CHECKLAR            1BEC
CHECKLARM           1BFE
CHECKLARR           1C1C
CHECKLCA            174E
CHECKLCZ            175A
CHECKLESSF          177A
CHECKLSM            1C3A
CHECKLSRE           1C70
CHECKMORE0          1782
CHECKMOREA          176E
CHECKOPS            1FF2
CHECKROM            1C5E
CHECKRORE           1C94
CHECKSUBSUBA        1F40
CLEARALL            1174
CLRADDRESS          2E7C
CLRADDRL            2EA6
CLRADDRW            2E9C
CLRDATAREG          2E3C
CLREA               2DFC
CLRINADDRREG        2E4C
CLRMESSAGE          35CB
CLRMINUSADDRREG     2E6C
CLRPLUSADDRREG      2E5C
CMESSAGE            370B
CMPADDRESSDATA      33CC
CMPADDRL            3402
CMPADDRREG          3384
CMPADDRW            33F6
CMPDATA             340E
CMPDATAREG          3372
CMPDNDEST           344A
CMPEA               332A
CMPIMESSAGE         35A6
CMPINADDRREG        3396
CMPMESSAGE          356B
CMPMINUSADDRREG     33BA
CMPPLUSADDRREG      33A8
CMPSIZEB            3426
CMPSIZEL            343E
CMPSIZEW            3432
COMMAINPUT          17A6
COMMAMESSAGE        36E5
COMPAREADDRESS      191A
CONTINUE            10D8
CONTINUEMESSAGE     3671
DALISTEA            14F4
DALISTEALOOP        14FA
DALISTEALOOP2       1506
DALISTSLASH         1572
DATAEA              167C
DATAEAD             13B2
DATAEALOOP          16CA
DATAEALOOP2         16F4
DATAEALOOPD         13FA
DECREASELC          1766
DEST                10D2
DESTINATION         10C6
DIVSMESSAGE         3566
DIVUADDRESSDATA     2CF4
DIVUADDRL           2D2A
DIVUADDRW           2D1E
DIVUDATA            2D36
DIVUDATAREG         2CAC
DIVUDEST            2D72
DIVUEA              2C6E
DIVUINADDRREG       2CBE
DIVUMINUSADDRREG    2CE2
DIVUPLUSADDRREG     2CD0
DIVUSIZEB           2D4E
DIVUSIZEL           2D66
DIVUSIZEW           2D5A
DLIST               1490
DLIST2              1512
DLISTD              1258
DMESSAGE            370D
DNEA                1586
DNEAD               12BC
DNMESSAGE           3713
DOLLARMESSAGE       36EF
DONE                185A
DOREST              17F0
EIGHTMESSAGE        3703
EMESSAGE            370F
EMPTYLINE           1814
EMPTYLINEMESSAGE    3562
ENDINGADDRESS       1808
ENDLOOP             182E
ENDMESSAGE          3699
FIVEMESSAGE         36FD
FMESSAGE            3711
FOURMESSAGE         36FB
INPUT               1718
INPUTLOOP           1730
INPUTMESSAGE        35F0
INPUTMESSAGE1       363A
INVALIDLOOP         1152
INVALIDMESSAGE      36EA
INVALIDOPCODE       1128
JSRADDRESS          352E
JSRADDRL            3558
JSRADDRW            354E
JSREA               34FA
JSRINADDRREG        351E
JSRMESSAGE          35C7
LEAADDRESS          2DB6
LEAADDRL            2DDE
LEAADDRW            2DD2
LEADEST             2DEA
LEAEA               2D84
LEAINADDRREG        2DA4
LEAMESSAGE          35B5
LETTERINPUT         1796
LONGDATA            16EE
LONGMESSAGE         35ED
LOOP                1036
LSLMESSAGE          35D7
LSMADDRESS          3132
LSMADDRL            315C
LSMADDRW            3152
LSMEA               30CC
LSMINADDRREG        3102
LSMMINUSADDRREG     3122
LSMPLUSADDRREG      3112
LSRC                30AA
LSRD                3096
LSRDEST             30BE
LSREA               3084
LSRMESSAGE          35DB
MOVEADDRD           233A
MOVEADDRESSDATA     2242
MOVEADDRL           2278
MOVEADDRLD          235E
MOVEADDRREG         21FA
MOVEADDRW           226C
MOVEADDRWD          2354
MOVEDATA            2284
MOVEDATAREG         21E8
MOVEDATAREGD        22F2
MOVEDEST            22C0
MOVEEA              21A0
MOVEINADDRD         2304
MOVEINADDRREG       220C
MOVEMADDRESS        2526
MOVEMADDRESSD       2466
MOVEMADDRL          254E
MOVEMADDRLD         2490
MOVEMADDRW          2544
MOVEMADDRWD         2486
MOVEMEA             23C6
MOVEMESSAGE         359C
MOVEMINADDRREG      2506
MOVEMINADDRREGD     2444
MOVEMINUSADDRREG    2230
MOVEMMDEST          241A
MOVEMMR             249A
MOVEMNOONE          24C8
MOVEMNOONES         2406
MOVEMPLUSADDRREG    2516
MOVEMPREADDRD       2454
MOVEMRDEST          24DC
MOVEMRLOOP          23E4
MOVEMRLOOPD         24A6
MOVEMRM             23D8
MOVEPLUSADDRREG     221E
MOVEPOSTADDRD       2316
MOVEPREADDRD        2328
MOVEQEA             2368
MOVEQMESSAGE        357B
MOVESIZEB           229C
MOVESIZEL           22B4
MOVESIZEW           22A8
MULSADDRESSDATA     2BDE
MULSADDRL           2C14
MULSADDRW           2C08
MULSDATA            2C20
MULSDATAREG         2B96
MULSDEST            2C5C
MULSEA              2B58
MULSINADDRREG       2BA8
MULSMESSAGE         3597
MULSMINUSADDRREG    2BCC
MULSPLUSADDRREG     2BBA
MULSSIZEB           2C38
MULSSIZEL           2C50
MULSSIZEW           2C44
NEWLINE             3563
NINEMESSAGE         3705
NOPEA               2194
NOPMESSAGE          35C3
NUMBERA             19FE
NUMBERB             1A08
NUMBERC             1A12
NUMBERD             1A1C
NUMBERE             1A26
NUMBEREIGHT         19EA
NUMBERF             1A30
NUMBERFIVE          19CC
NUMBERFOUR          19C2
NUMBERINPUT         179E
NUMBERNINE          19F4
NUMBERONE           19A4
NUMBERSEVEN         19E0
NUMBERSIX           19D6
NUMBERTHREE         19B8
NUMBERTWO           19AE
NUMBERZERO          199A
ONEMESSAGE          36F5
OPADD               1EEE
OPADDA              1ECC
OPADDI              1B88
OPAND               1A62
OPANDI              1BB2
OPASLM              1D1A
OPASLR              1D2A
OPASRM              1D36
OPASRR              1D46
OPBCC               1E7A
OPBCHGD             1B4E
OPBCHGR             1B3E
OPBGT               1E86
OPBLE               1E92
OPBXX               1E4E
OPCLR               20A0
OPCMP               1DF4
OPCMPI              1B5E
OPDIVS              1FD2
OPJSR               204E
OPLEA               205E
OPLSLM              1CA6
OPLSLR              1CB6
OPLSRM              1CE0
OPLSRR              1CF0
OPMOVE              1B10
OPMOVEM             206E
OPMOVEMMESSAGE      35B9
OPMOVEQ             1E2E
OPMULS              1AA4
OPNOP               203E
OPROLM              1D70
OPROLR              1D80
OPRORM              1DAA
OPRORR              1DBA
OPRTS               2090
OPSUB               1F80
OPSUBA              1F5E
OUTPUTEND           1822
PBAL                18E6
PERIODINPUT         17AA
PLAL                1884
POUNDMESSAGE        36F1
PRINTADDRESS        185E
PRINTBYTE           11B4
PRINTBYTEADDRESS    18DC
PRINTCOMMA          1186
PRINTDESTINATION    11F0
PRINTLONG           11DC
PRINTLONGADDRESS    187A
PRINTSIZES          1194
PRINTSOURCE         1420
PRINTSPACE          190C
PRINTWORD           11C8
PRINTWORDADDRESS    18AC
PWAL                18B6
REGISTERS           2386
ROLMESSAGE          35E3
ROMADDRESS          32F6
ROMADDRL            3320
ROMADDRW            3316
ROMEA               3290
ROMINADDRREG        32C6
ROMMINUSADDRREG     32E6
ROMPLUSADDRREG      32D6
RORC                326E
RORD                325A
RORDEST             3282
ROREA               3248
RORMESSAGE          35DF
RTSEA               219A
RTSMESSAGE          35BF
SEVENMESSAGE        3701
SHOWADDRESS         1A3A
SIXMESSAGE          36FF
SIZEB               20CA
SIZEL               20D6
SIZEW               20D0
SLASHMESSAGE        36E8
SOURCE              10B2
SPACEMESSAGE        36D9
START               1000
STARTINGADDRESS     17FC
SUBADDRESSD         29F2
SUBADDRESSDATA      2AC8
SUBADDRL            2AFE
SUBADDRLD           2A1C
SUBADDRREG          2A80
SUBADDRW            2AF2
SUBADDRWD           2A12
SUBAMESSAGE         358A
SUBDATA             2B0A
SUBDATAREG          2A6E
SUBDNDEST           2B46
SUBDNEA             297A
SUBEA               2968
SUBEADEST           298E
SUBEADN             2A26
SUBINADDRREG        2A92
SUBINADDRREGD       29C2
SUBMESSAGE          358F
SUBMINUSADDRREG     2AB6
SUBMINUSADDRREGD    29E2
SUBPLUSADDRREG      2AA4
SUBPLUSADDRREGD     29D2
SUBSIZEB            2B22
SUBSIZEL            2B3A
SUBSIZEW            2B2E
SWITCHINPUT         17BA
TESTNEWRANGE        1846
THREEMESSAGE        36F9
TWOMESSAGE          36F7
WORDDATA            16E8
WORDMESSAGE         35EA
XXXLEA              1648
XXXLEAD             137E
XXXLEALOOP          1658
XXXLEALOOPD         138E
XXXWEA              1618
XXXWEAD             134E
XXXWEALOOP          1628
XXXWEALOOPD         135E
YESCONTINUE         1118
ZEROMESSAGE         36F3
